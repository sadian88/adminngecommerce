{"version":3,"sources":["webpack:///src/app/modules/users/components/edit-colaborador/edit-colaborador.component.ts","webpack:///src/app/modules/users/components/edit-colaborador/edit-colaborador.component.html","webpack:///src/app/modules/users/components/delete-user/delete-user.component.ts","webpack:///src/app/modules/users/components/delete-user/delete-user.component.html","webpack:///src/app/modules/users/users.component.ts","webpack:///src/app/modules/users/users.component.html","webpack:///src/app/modules/users/users.module.ts","webpack:///src/app/modules/users/components/edit-users/edit-users.component.ts","webpack:///src/app/modules/users/components/edit-users/edit-users.component.html","webpack:///src/app/modules/users/components/change-state-user/change-state-user.component.ts","webpack:///src/app/modules/users/components/change-state-user/change-state-user.component.html","webpack:///src/app/modules/users/_services/users.service.ts","webpack:///src/app/modules/users/components/add-users/add-users.component.ts","webpack:///src/app/modules/users/components/add-users/add-users.component.html","webpack:///src/app/modules/users/users-routing.module.ts","webpack:///src/app/modules/users/users-list/users-list.component.ts","webpack:///src/app/modules/users/users-list/users-list.component.html"],"names":["EditColaboradorComponent","selector","templateUrl","styleUrls","DeleteUserComponent","modal","userService","toaster","UserD","deleteUser","user_selected","_id","subscribe","resp","console","log","emit","open","text","close","error","message","UsersComponent","UsersModule","declarations","imports","EditUsersComponent","UserE","name","surname","email","password","repet_password","data","updateUser","user","save","ChangeStateUserComponent","UsersService","http","authservice","isLoadingSubject","isLoading$","asObservable","search","next","headers","token","URL","get","pipe","post","put","user_id","providedIn","AddUsersComponent","UserC","createUser","routes","path","component","children","redirectTo","pathMatch","UsersRoutingModule","forChild","exports","UsersListComponent","_userService","modalService","users","allUsers","modalRef","centered","size","result","then","componentInstance","unshift","INDEX","findIndex","item","splice","openCreate","refresh"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAOaA,wB;AAEX,4CAAc;AAAA;AAAG;;;;iBAEjB,oBAAQ,CACP;;;;;;;yBALUA,wB;AAAwB,O;;;cAAxBA,wB;AAAwB,6C;AAAA,gB;AAAA,e;AAAA;AAAA;ACPrC;;AAAG;;AAAuB;;;;;;;;wEDObA,wB,EAAwB;gBALpC,uDAKoC;iBAL1B;AACTC,oBAAQ,EAAE,sBADD;AAETC,uBAAW,EAAE,mCAFJ;AAGTC,qBAAS,EAAE,CAAC,mCAAD;AAHF,W;AAK0B,U;;;;;;;;;;;;;;;;;;;;AEPrC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAWaC,mB;AAKX,qCACSC,KADT,EAESC,WAFT,EAGSC,OAHT,EAGyB;AAAA;;AAFhB,eAAAF,KAAA,GAAAA,KAAA;AACA,eAAAC,WAAA,GAAAA,WAAA;AACA,eAAAC,OAAA,GAAAA,OAAA;AANC,eAAAC,KAAA,GAA2B,IAAI,0DAAJ,EAA3B;AAOL;;;;iBAEL,oBAAQ,CACP;;;iBAGD,mBAAM;AAAA;;AACJ,iBAAKF,WAAL,CAAiBG,UAAjB,CAA4B,KAAKC,aAAL,CAAmBC,GAA/C,EAAoDC,SAApD,CAA8D,UAACC,IAAD,EAAc;AAC1EC,qBAAO,CAACC,GAAR,CAAYF,IAAZ;;AACA,mBAAI,CAACL,KAAL,CAAWQ,IAAX,CAAgB,EAAhB;;AACA,mBAAI,CAACT,OAAL,CAAaU,IAAb,CAAkB,wHAAlB,EAAuC;AAACC,oBAAI;AAAL,eAAvC;;AACA,mBAAI,CAACb,KAAL,CAAWc,KAAX;AACD,aALD,EAKG,UAACC,KAAD,EAAW;AACZ,kBAAGA,KAAK,CAACA,KAAT,EAAe;AACb,qBAAI,CAACb,OAAL,CAAaU,IAAb,CAAkB,wHAAlB,EAAuC;AAACC,sBAAI,oBAAYE,KAAK,CAACA,KAAN,CAAYC,OAAxB;AAAL,iBAAvC;AACD;AACF,aATD;AAUD;;;;;;;yBA1BUjB,mB,EAAmB,0I,EAAA,qI,EAAA,gI;AAAA,O;;;cAAnBA,mB;AAAmB,wC;AAAA;AAAA;AAAA,S;AAAA;AAAA;AAAA,S;AAAA,iB;AAAA,e;AAAA,sc;AAAA;AAAA;ACL9B;;AACE;;AACE;;AACE;;AAA4D;;AAC9D;;AACF;;AACA;;AAQE;;AACE;;AACI;;AAAI;;AAAoF;;AAC5F;;AACF;;AACN;;AACI;;AACE;;AAGE;AAAA,qBAAS,eAAT;AAAiB,aAAjB;;AAEA;;AACF;;AAEA;;AAGE;AAAA,qBAAS,IAAAC,KAAA,UAAT;AAAwB,aAAxB;;AAEA;;AACF;;AAEF;;AACF;;;;AAnCkE;;AAAA;;AAapD;;AAAA;;;;;;;;wEDXHD,mB,EAAmB;gBAL/B,uDAK+B;iBALrB;AACTH,oBAAQ,EAAE,iBADD;AAETC,uBAAW,EAAE,8BAFJ;AAGTC,qBAAS,EAAE,CAAC,8BAAD;AAHF,W;AAKqB,U;;;;;;;;;AAEpBK,eAAK,EAAE,CAAF;kBAAd;AAAc,WAAE,C;AACRE,uBAAa;kBAArB;AAAqB;;;;;;;;;;;;;;;;;;;AEdxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAOaY,c;AAEX,kCAAc;AAAA;AAAG;;;;iBAEjB,oBAAQ,CACP;;;;;;;yBALUA,c;AAAc,O;;;cAAdA,c;AAAc,kC;AAAA,gB;AAAA,e;AAAA;AAAA;ACP3B;;;;;;;;;wEDOaA,c,EAAc;gBAL1B,uDAK0B;iBALhB;AACTrB,oBAAQ,EAAE,WADD;AAETC,uBAAW,EAAE,wBAFJ;AAGTC,qBAAS,EAAE,CAAC,wBAAD;AAHF,W;AAKgB,U;;;;;;;;;;;;;;;;;;;;AEP3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAiCaoB,W;;;;;cAAAA;;;;2BAAAA,W;AAAW,S;AAAA,kBAbb,CACP,4DADO,EAEP,wEAFO,EAGP,sEAHO,EAIP,2DAJO,EAKP,qEALO,EAMP,mEANO,EAOP,8DAPO,EAQP,mFARO,EASP,0EATO,EAUP,+EAVO,CAaa;;;;4HAAXA,W,EAAW;AAAA,yBAdP,+DAcO,EAdS,mFAcT,EAd6B,2FAc7B,EAdgD,8FAchD,EAdoE,gHAcpE,EAd8F,iGAc9F,EAdmH,kHAcnH;AAd2I,oBAE/J,4DAF+J,EAG/J,wEAH+J,EAI/J,sEAJ+J,EAK/J,2DAL+J,EAM/J,qEAN+J,EAO/J,mEAP+J,EAQ/J,8DAR+J,EAS/J,mFAT+J,EAU/J,0EAV+J,EAW/J,+EAX+J;AAc3I,S;AAHD,O;;;;;wEAGVA,W,EAAW;gBAfvB,sDAeuB;iBAfd;AACRC,wBAAY,EAAE,CAAC,+DAAD,EAAiB,mFAAjB,EAAqC,2FAArC,EAAwD,8FAAxD,EAA4E,gHAA5E,EAAsG,iGAAtG,EAA2H,kHAA3H,CADN;AAERC,mBAAO,EAAE,CACP,4DADO,EAEP,wEAFO,EAGP,sEAHO,EAIP,2DAJO,EAKP,qEALO,EAMP,mEANO,EAOP,8DAPO,EAQP,mFARO,EASP,0EATO,EAUP,+EAVO;AAFD,W;AAec,U;;;;;;;;;;;;;;;;;;ACjCxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAWaC,kB;AAUX,oCACSrB,KADT,EAESC,WAFT,EAGSC,OAHT,EAGyB;AAAA;;AAFhB,eAAAF,KAAA,GAAAA,KAAA;AACA,eAAAC,WAAA,GAAAA,WAAA;AACA,eAAAC,OAAA,GAAAA,OAAA;AATC,eAAAoB,KAAA,GAA2B,IAAI,0DAAJ,EAA3B;AACV,eAAAC,IAAA,GAAW,IAAX;AACA,eAAAC,OAAA,GAAc,IAAd;AACA,eAAAC,KAAA,GAAY,IAAZ;AACA,eAAAC,QAAA,GAAe,IAAf;AACA,eAAAC,cAAA,GAAqB,IAArB;AAKK;;;;iBAEL,oBAAQ;AACN,iBAAKJ,IAAL,GAAY,KAAKlB,aAAL,CAAmBkB,IAA/B;AACA,iBAAKC,OAAL,GAAe,KAAKnB,aAAL,CAAmBmB,OAAlC;AACA,iBAAKC,KAAL,GAAa,KAAKpB,aAAL,CAAmBoB,KAAhC;AACD;;;iBAED,gBAAI;AAAA;;AACF,gBAAG,CAAC,KAAKF,IAAN,IAAc,CAAC,KAAKC,OAApB,IAA+B,CAAC,KAAKC,KAAxC,EAA8C;AAC5C;AACA,mBAAKvB,OAAL,CAAaU,IAAb,CAAkB,wHAAlB,EAAuC;AAACC,oBAAI;AAAL,eAAvC;AACA;AACD,aALC,CAMF;AACA;AACA;AACA;;;AACA,gBAAIe,IAAI,GAAG;AACTtB,iBAAG,EAAE,KAAKD,aAAL,CAAmBC,GADf;AAETiB,kBAAI,EAAE,KAAKA,IAFF;AAGTC,qBAAO,EAAE,KAAKA,OAHL;AAITC,mBAAK,EAAE,KAAKA,KAJH;AAKTC,sBAAQ,EAAE,KAAKA,QALN;AAMTC,4BAAc,EAAE,KAAKA;AANZ,aAAX;AAQA,iBAAK1B,WAAL,CAAiB4B,UAAjB,CAA4BD,IAA5B,EAAkCrB,SAAlC,CAA4C,UAACC,IAAD,EAAc;AACxDC,qBAAO,CAACC,GAAR,CAAYF,IAAZ;;AACA,oBAAI,CAACc,KAAL,CAAWX,IAAX,CAAgBH,IAAI,CAACsB,IAArB;;AACA,oBAAI,CAAC5B,OAAL,CAAaU,IAAb,CAAkB,wHAAlB,EAAuC;AAACC,oBAAI;AAAL,eAAvC;;AACA,oBAAI,CAACb,KAAL,CAAWc,KAAX;AACD,aALD,EAKG,UAACC,KAAD,EAAW;AACZ,kBAAGA,KAAK,CAACA,KAAT,EAAe;AACb,sBAAI,CAACb,OAAL,CAAaU,IAAb,CAAkB,wHAAlB,EAAuC;AAACC,sBAAI,oBAAYE,KAAK,CAACA,KAAN,CAAYC,OAAxB;AAAL,iBAAvC;AACD;AACF,aATD;AAUD;;;;;;;yBAlDUK,kB,EAAkB,0I,EAAA,qI,EAAA,gI;AAAA,O;;;cAAlBA,kB;AAAkB,uC;AAAA;AAAA;AAAA,S;AAAA;AAAA;AAAA,S;AAAA,iB;AAAA,e;AAAA,umC;AAAA;AAAA;ACL7B;;AACE;;AACE;;AACE;;AAA4D;;AAC9D;;AACF;;AACA;;AASE;;AACE;;AACI;;AACI;;AAAO;;AAAmB;;AAA0B;;AAAC;;AAAO;;AAC5D;;AAAuD;AAAA;AAAA;;AAAvD;;AACA;;AAAmC;;AAA8B;;AACrE;;AACJ;;AACA;;AACI;;AACI;;AAAO;;AAAqB;;AAA0B;;AAAC;;AAAO;;AAC9D;;AAAuD;AAAA;AAAA;;AAAvD;;AACA;;AAAmC;;AAAgC;;AACvE;;AACJ;;AACA;;AACI;;AACI;;AAAO;;AAAqB;;AAA0B;;AAAC;;AAAO;;AAC9D;;AAAwD;AAAA;AAAA;;AAAxD;;AACA;;AAAmC;;AAAkB;;AACzD;;AACJ;;AACA;;AACI;;AACI;;AAAc;;AAAY;;AAA0B;;AAAC;;AAAO;;AAC5D;;AAAuE;AAAA;AAAA;;AAAvE;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AAAc;;AAAmB;;AAA0B;;AAAC;;AAAO;;AACnE;;AAAuE;AAAA;AAAA;;AAAvE;;AACJ;;AACJ;;AACF;;AACN;;AACI;;AAEI;;AAGA;AAAA,qBAAS,IAAAU,IAAA,EAAT;AAAe,aAAf;;AAEA;;AACF;;AAEA;;AAGE;AAAA,qBAAS,IAAA/B,KAAA,UAAT;AAAwB,aAAxB;;AAEA;;AACF;;AAEF;;AACF;;;;AAnEkE;;AAAA;;AAgBG;;AAAA;;AAOA;;AAAA;;AAOC;;AAAA;;AAOe;;AAAA;;AAMA;;AAAA;;;;;;;;;wEDzC1EqB,kB,EAAkB;gBAL9B,uDAK8B;iBALpB;AACTzB,oBAAQ,EAAE,gBADD;AAETC,uBAAW,EAAE,6BAFJ;AAGTC,qBAAS,EAAE,CAAC,6BAAD;AAHF,W;AAKoB,U;;;;;;;;;AAEpBO,uBAAa;kBAArB;AAAqB,Y;AAEZiB,eAAK,EAAE,CAAF;kBAAd;AAAc,WAAE;;;;;;;;;;;;;;;;;;;AEfnB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAOaU,wB;AAEX,4CAAc;AAAA;AAAG;;;;iBAEjB,oBAAQ,CACP;;;;;;;yBALUA,wB;AAAwB,O;;;cAAxBA,wB;AAAwB,8C;AAAA,gB;AAAA,e;AAAA;AAAA;ACPrC;;AAAG;;AAAwB;;;;;;;;wEDOdA,wB,EAAwB;gBALpC,uDAKoC;iBAL1B;AACTpC,oBAAQ,EAAE,uBADD;AAETC,uBAAW,EAAE,oCAFJ;AAGTC,qBAAS,EAAE,CAAC,oCAAD;AAHF,W;AAK0B,U;;;;;;;;;;;;;;;;;;;;AEPrC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAUamC,Y;AAKX,8BACUC,IADV,EAESC,WAFT,EAEiC;AAAA;;AADvB,eAAAD,IAAA,GAAAA,IAAA;AACD,eAAAC,WAAA,GAAAA,WAAA;AAEP,eAAKC,gBAAL,GAAwB,IAAI,oDAAJ,CAA6B,KAA7B,CAAxB;AACA,eAAKC,UAAL,GAAkB,KAAKD,gBAAL,CAAsBE,YAAtB,EAAlB;AACD;;;;iBAED,kBAASC,MAAT,EAAe;AAAA;;AACb,iBAAKH,gBAAL,CAAsBI,IAAtB,CAA2B,IAA3B;AACA,gBAAIC,OAAO,GAAG,IAAI,gEAAJ,CAAgB;AAAC,uBAAS,KAAKN,WAAL,CAAiBO;AAA3B,aAAhB,CAAd;AACA,gBAAIC,GAAG,GAAG,sEAAgB,qBAAhB,GAAsCJ,MAAhD;AACA,mBAAO,KAAKL,IAAL,CAAUU,GAAV,CAAcD,GAAd,EAAkB;AAACF,qBAAO,EAAEA;AAAV,aAAlB,EAAsCI,IAAtC,CACL,gEAAS;AAAA,qBAAM,MAAI,CAACT,gBAAL,CAAsBI,IAAtB,CAA2B,KAA3B,CAAN;AAAA,aAAT,CADK,CAAP;AAGD;;;iBAED,oBAAWZ,IAAX,EAAe;AAAA;;AACb,iBAAKQ,gBAAL,CAAsBI,IAAtB,CAA2B,IAA3B;AACA,gBAAIC,OAAO,GAAG,IAAI,gEAAJ,CAAgB;AAAC,uBAAS,KAAKN,WAAL,CAAiBO;AAA3B,aAAhB,CAAd;AACA,gBAAIC,GAAG,GAAG,sEAAgB,uBAA1B;AACA,mBAAO,KAAKT,IAAL,CAAUY,IAAV,CAAeH,GAAf,EAAmBf,IAAnB,EAAwB;AAACa,qBAAO,EAAEA;AAAV,aAAxB,EAA4CI,IAA5C,CACL,gEAAS;AAAA,qBAAM,MAAI,CAACT,gBAAL,CAAsBI,IAAtB,CAA2B,KAA3B,CAAN;AAAA,aAAT,CADK,CAAP;AAGD;;;iBAED,oBAAWZ,IAAX,EAAe;AAAA;;AACb,iBAAKQ,gBAAL,CAAsBI,IAAtB,CAA2B,IAA3B;AACA,gBAAIC,OAAO,GAAG,IAAI,gEAAJ,CAAgB;AAAC,uBAAS,KAAKN,WAAL,CAAiBO;AAA3B,aAAhB,CAAd;AACA,gBAAIC,GAAG,GAAG,sEAAgB,eAA1B;AACA,mBAAO,KAAKT,IAAL,CAAUa,GAAV,CAAcJ,GAAd,EAAkBf,IAAlB,EAAuB;AAACa,qBAAO,EAAEA;AAAV,aAAvB,EAA2CI,IAA3C,CACL,gEAAS;AAAA,qBAAM,MAAI,CAACT,gBAAL,CAAsBI,IAAtB,CAA2B,KAA3B,CAAN;AAAA,aAAT,CADK,CAAP;AAGD;;;iBAED,oBAAWQ,OAAX,EAAkB;AAAA;;AAChB,iBAAKZ,gBAAL,CAAsBI,IAAtB,CAA2B,IAA3B;AACA,gBAAIC,OAAO,GAAG,IAAI,gEAAJ,CAAgB;AAAC,uBAAS,KAAKN,WAAL,CAAiBO;AAA3B,aAAhB,CAAd;AACA,gBAAIC,GAAG,GAAG,sEAAgB,oBAAhB,GAAqCK,OAA/C;AACA,mBAAO,KAAKd,IAAL,WAAiBS,GAAjB,EAAqB;AAACF,qBAAO,EAAEA;AAAV,aAArB,EAAyCI,IAAzC,CACL,gEAAS;AAAA,qBAAM,MAAI,CAACT,gBAAL,CAAsBI,IAAtB,CAA2B,KAA3B,CAAN;AAAA,aAAT,CADK,CAAP;AAGD;;;;;;;yBA/CUP,Y,EAAY,uH,EAAA,yG;AAAA,O;;;eAAZA,Y;AAAY,iBAAZA,YAAY,K;AAAA,oBAFX;;;;;wEAEDA,Y,EAAY;gBAHxB,wDAGwB;iBAHb;AACVgB,sBAAU,EAAE;AADF,W;AAGa,U;;;;;;;;;;;;;;;;;;;;;;;;ACVzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAWaC,iB;AAQX,mCACSlD,KADT,EAESC,WAFT,EAGSC,OAHT,EAGyB;AAAA;;AAFhB,eAAAF,KAAA,GAAAA,KAAA;AACA,eAAAC,WAAA,GAAAA,WAAA;AACA,eAAAC,OAAA,GAAAA,OAAA;AATC,eAAAiD,KAAA,GAA2B,IAAI,0DAAJ,EAA3B;AACV,eAAA5B,IAAA,GAAW,IAAX;AACA,eAAAC,OAAA,GAAc,IAAd;AACA,eAAAC,KAAA,GAAY,IAAZ;AACA,eAAAC,QAAA,GAAe,IAAf;AACA,eAAAC,cAAA,GAAqB,IAArB;AAKK;;;;iBAEL,oBAAQ,CACP;;;iBAED,gBAAI;AAAA;;AACF,gBAAG,CAAC,KAAKJ,IAAN,IAAc,CAAC,KAAKC,OAApB,IAA+B,CAAC,KAAKC,KAArC,IAA8C,CAAC,KAAKC,QAApD,IAAgE,CAAC,KAAKC,cAAzE,EAAwF;AACtF;AACA,mBAAKzB,OAAL,CAAaU,IAAb,CAAkB,wHAAlB,EAAuC;AAACC,oBAAI;AAAL,eAAvC;AACA;AACD;;AACD,gBAAG,KAAKa,QAAL,IAAiB,KAAKC,cAAzB,EAAwC;AACtC,mBAAKzB,OAAL,CAAaU,IAAb,CAAkB,wHAAlB,EAAuC;AAACC,oBAAI;AAAL,eAAvC;AACA;AACD;;AACD,gBAAIe,IAAI,GAAG;AACTL,kBAAI,EAAE,KAAKA,IADF;AAETC,qBAAO,EAAE,KAAKA,OAFL;AAGTC,mBAAK,EAAE,KAAKA,KAHH;AAITC,sBAAQ,EAAE,KAAKA,QAJN;AAKTC,4BAAc,EAAE,KAAKA;AALZ,aAAX;AAOA,iBAAK1B,WAAL,CAAiBmD,UAAjB,CAA4BxB,IAA5B,EAAkCrB,SAAlC,CAA4C,UAACC,IAAD,EAAc;AACxDC,qBAAO,CAACC,GAAR,CAAYF,IAAZ;;AACA,oBAAI,CAAC2C,KAAL,CAAWxC,IAAX,CAAgBH,IAAI,CAACsB,IAArB;;AACA,oBAAI,CAAC5B,OAAL,CAAaU,IAAb,CAAkB,wHAAlB,EAAuC;AAACC,oBAAI;AAAL,eAAvC;;AACA,oBAAI,CAACb,KAAL,CAAWc,KAAX;AACD,aALD,EAKG,UAACC,KAAD,EAAW;AACZ,kBAAGA,KAAK,CAACA,KAAT,EAAe;AACb,sBAAI,CAACb,OAAL,CAAaU,IAAb,CAAkB,wHAAlB,EAAuC;AAACC,sBAAI,oBAAYE,KAAK,CAACA,KAAN,CAAYC,OAAxB;AAAL,iBAAvC;AACD;AACF,aATD;AAUD;;;;;;;yBA5CUkC,iB,EAAiB,0I,EAAA,qI,EAAA,gI;AAAA,O;;;cAAjBA,iB;AAAiB,sC;AAAA;AAAA;AAAA,S;AAAA,iB;AAAA,e;AAAA,umC;AAAA;AAAA;ACL5B;;AACE;;AACE;;AACE;;AAA4D;;AAC9D;;AACF;;AACA;;AASE;;AACE;;AACI;;AACI;;AAAO;;AAAmB;;AAA0B;;AAAC;;AAAO;;AAC5D;;AAAuD;AAAA;AAAA;;AAAvD;;AACA;;AAAmC;;AAA8B;;AACrE;;AACJ;;AACA;;AACI;;AACI;;AAAO;;AAAqB;;AAA0B;;AAAC;;AAAO;;AAC9D;;AAAuD;AAAA;AAAA;;AAAvD;;AACA;;AAAmC;;AAAgC;;AACvE;;AACJ;;AACA;;AACI;;AACI;;AAAO;;AAAqB;;AAA0B;;AAAC;;AAAO;;AAC9D;;AAAwD;AAAA;AAAA;;AAAxD;;AACA;;AAAmC;;AAAkB;;AACzD;;AACJ;;AACA;;AACI;;AACI;;AAAc;;AAAY;;AAA0B;;AAAC;;AAAO;;AAC5D;;AAAuE;AAAA;AAAA;;AAAvE;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AAAc;;AAAmB;;AAA0B;;AAAC;;AAAO;;AACnE;;AAAuE;AAAA;AAAA;;AAAvE;;AACJ;;AACJ;;AACF;;AACN;;AACI;;AAEI;;AAGA;AAAA,qBAAS,IAAAnB,IAAA,EAAT;AAAe,aAAf;;AAEA;;AACF;;AAEA;;AAGE;AAAA,qBAAS,IAAA/B,KAAA,UAAT;AAAwB,aAAxB;;AAEA;;AACF;;AAEF;;AACF;;;;AAnDqE;;AAAA;;AAOA;;AAAA;;AAOC;;AAAA;;AAOe;;AAAA;;AAMA;;AAAA;;;;;;;;;wEDzC1EkD,iB,EAAiB;gBAL7B,uDAK6B;iBALnB;AACTtD,oBAAQ,EAAE,eADD;AAETC,uBAAW,EAAE,4BAFJ;AAGTC,qBAAS,EAAE,CAAC,4BAAD;AAHF,W;AAKmB,U;;;;;;;;;AAElBqD,eAAK,EAAE,CAAF;kBAAd;AAAc,WAAE;;;;;;;;;;;;;;;;;;;AEbnB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAKA,UAAME,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAE,+DAFb;AAGEC,gBAAQ,EAAE,CACR;AACEF,cAAI,EAAE,MADR;AAEEC,mBAAS,EAAE;AAFb,SADQ,EAKR;AACA;AACA;AACA;AACA;AAAED,cAAI,EAAE,EAAR;AAAYG,oBAAU,EAAE,MAAxB;AAAgCC,mBAAS,EAAE;AAA3C,SATQ,EAUR;AAAEJ,cAAI,EAAE,IAAR;AAAcG,oBAAU,EAAE,MAA1B;AAAkCC,mBAAS,EAAE;AAA7C,SAVQ;AAHZ,OADqB,CAAvB;;UAuBaC,kB;;;;;cAAAA;;;;2BAAAA,kB;AAAkB,S;AAAA,kBAHpB,CAAC,6DAAaC,QAAb,CAAsBP,MAAtB,CAAD,CAGoB,EAFnB,4DAEmB;;;;4HAAlBM,kB,EAAkB;AAAA;AAAA,oBAFnB,4DAEmB;AAAA,S;AAFP,O;;;;;wEAEXA,kB,EAAkB;gBAJ9B,sDAI8B;iBAJrB;AACRvC,mBAAO,EAAE,CAAC,6DAAawC,QAAb,CAAsBP,MAAtB,CAAD,CADD;AAERQ,mBAAO,EAAE,CAAC,4DAAD;AAFD,W;AAIqB,U;;;;;;;;;;;;;;;;;;AC5B/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACoCI;;AACI;;AACJ;;;;;;;;AAec;;AACE;;AAAI;;AAAe;;AACnB;;AAAI;;AAAkB;;AACtB;;AAAI;;AAAgB;;AACpB;;AACE;;AAAG;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACD;;AAEI;;AAAA;;AACI;;AACI;;AACA;;AACA;;AACJ;;AACJ;;AAEJ;;AACF;;AAEA;;AAAA;;AAAG;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACD;;AAEI;;AAAA;;AACI;;AACI;;AACA;;AACA;;AACJ;;AACJ;;AAEJ;;AACF;;AACF;;AACF;;;;;;AAhCM;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;;;UD5CXC,kB;AAMX,oCACSC,YADT,EAESC,YAFT,EAE+B;AAAA;;AADtB,eAAAD,YAAA,GAAAA,YAAA;AACA,eAAAC,YAAA,GAAAA,YAAA;AANT,eAAAC,KAAA,GAAY,EAAZ;AAGA,eAAA1B,MAAA,GAAa,EAAb;AAIK;;;;iBAEL,oBAAQ;AACN,iBAAKF,UAAL,GAAkB,KAAK0B,YAAL,CAAkB1B,UAApC;AACA,iBAAK6B,QAAL;AACD;;;iBACD,oBAAQ;AAAA;;AACN,iBAAKH,YAAL,CAAkBG,QAAlB,CAA2B,KAAK3B,MAAhC,EAAwChC,SAAxC,CAAkD,UAACC,IAAD,EAAc;AAC9DC,qBAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,oBAAI,CAACyD,KAAL,GAAazD,IAAI,CAACyD,KAAlB;AACD,aAHD;AAID;;;iBACD,mBAAO;AACL,iBAAK1B,MAAL,GAAc,EAAd;AACA,iBAAK2B,QAAL;AACD;;;iBACD,sBAAU;AAAA;;AACR,gBAAMC,QAAQ,GAAG,KAAKH,YAAL,CAAkBpD,IAAlB,CAAuB,2FAAvB,EAA0C;AAACwD,sBAAQ,EAAE,IAAX;AAAgBC,kBAAI,EAAE;AAAtB,aAA1C,CAAjB;AACAF,oBAAQ,CAACG,MAAT,CAAgBC,IAAhB,CACE,YAAM,CAEL,CAHH,EAGI,YAAM,CAEP,CALH;AAOAJ,oBAAQ,CAACK,iBAAT,CAA2BrB,KAA3B,CAAiC5C,SAAjC,CAA2C,UAACC,IAAD,EAAc;AACvDC,qBAAO,CAACC,GAAR,CAAYF,IAAZ;;AACA,oBAAI,CAACyD,KAAL,CAAWQ,OAAX,CAAmBjE,IAAnB;AACD,aAHD;AAID;;;iBAED,kBAASsB,IAAT,EAAa;AAAA;;AACX,gBAAMqC,QAAQ,GAAG,KAAKH,YAAL,CAAkBpD,IAAlB,CAAuB,8FAAvB,EAA2C;AAACwD,sBAAQ,EAAE,IAAX;AAAgBC,kBAAI,EAAE;AAAtB,aAA3C,CAAjB;AACAF,oBAAQ,CAACK,iBAAT,CAA2BnE,aAA3B,GAA2CyB,IAA3C;AACAqC,oBAAQ,CAACG,MAAT,CAAgBC,IAAhB,CACE,YAAM,CAEL,CAHH,EAGI,YAAM,CAEP,CALH;AAOAJ,oBAAQ,CAACK,iBAAT,CAA2BlD,KAA3B,CAAiCf,SAAjC,CAA2C,UAACC,IAAD,EAAc;AACvDC,qBAAO,CAACC,GAAR,CAAYF,IAAZ;;AACA,kBAAIkE,KAAK,GAAG,OAAI,CAACT,KAAL,CAAWU,SAAX,CAAqB,UAAAC,IAAI;AAAA,uBAAIA,IAAI,CAACtE,GAAL,IAAYE,IAAI,CAACF,GAArB;AAAA,eAAzB,CAAZ;;AACA,kBAAGoE,KAAK,IAAI,CAAC,CAAb,EAAe;AACb,uBAAI,CAACT,KAAL,CAAWS,KAAX,IAAoBlE,IAApB;AACD;AACF,aAND;AAOD;;;iBACD,iBAAOsB,IAAP,EAAW;AAAA;;AACT,gBAAMqC,QAAQ,GAAG,KAAKH,YAAL,CAAkBpD,IAAlB,CAAuB,iGAAvB,EAA4C;AAACwD,sBAAQ,EAAE,IAAX;AAAgBC,kBAAI,EAAE;AAAtB,aAA5C,CAAjB;AACAF,oBAAQ,CAACK,iBAAT,CAA2BnE,aAA3B,GAA2CyB,IAA3C;AACAqC,oBAAQ,CAACG,MAAT,CAAgBC,IAAhB,CACE,YAAM,CAEL,CAHH,EAGI,YAAM,CAEP,CALH;AAOAJ,oBAAQ,CAACK,iBAAT,CAA2BrE,KAA3B,CAAiCI,SAAjC,CAA2C,UAACC,IAAD,EAAc;AACvDC,qBAAO,CAACC,GAAR,CAAYF,IAAZ;;AACA,kBAAIkE,KAAK,GAAG,OAAI,CAACT,KAAL,CAAWU,SAAX,CAAqB,UAAAC,IAAI;AAAA,uBAAIA,IAAI,CAACtE,GAAL,IAAYwB,IAAI,CAACxB,GAArB;AAAA,eAAzB,CAAZ;;AACA,kBAAGoE,KAAK,IAAI,CAAC,CAAb,EAAe;AACb,uBAAI,CAACT,KAAL,CAAWY,MAAX,CAAkBH,KAAlB,EAAwB,CAAxB;AACD;AACF,aAND;AAOD;;;;;;;yBA3EUZ,kB,EAAkB,qI,EAAA,oI;AAAA,O;;;cAAlBA,kB;AAAkB,uC;AAAA,iB;AAAA,e;AAAA,kgG;AAAA;AAAA;ACZ/B;;AACE;;AACE;;AACE;;AAAuB;;AAAyD;;AAAc;;AAChG;;AACA;;AACE;;AAGE;AAAA,qBAAS,IAAAgB,UAAA,EAAT;AAAqB,aAArB;;AACC;;AAAsD;;AAAa;;AAExE;;AACF;;AACA;;AAEE;;AACE;;AACE;;AACE;;AAME;AAAA;AAAA,eAAoB,aAApB,EAAoB;AAAA,qBACL,IAAAZ,QAAA,EADK;AACK,aADzB;;AANF;;AAQE;;AACC;;AAAG;;AAAM;;AAAK;;AAA8B;;AAEjD;;AACA;;AACE;;AAA6B;AAAA,qBAAS,IAAAa,OAAA,EAAT;AAAkB,aAAlB;;AAAoB;;AAAO;;AAC1D;;AACF;;AACF;;AACA;;;;AAIA;;AACE;;AACE;;AACE;;AACI;;AACI;;AACI;;AAAK;;AAAQ;;AACb;;AAAK;;AAAS;;AACd;;AAAK;;AAAK;;AACV;;AAAK;;AAAM;;AACf;;AACJ;;AACA;;AACI;;AAkCJ;;AACJ;;AACF;;AACF;;AACF;;AAEF;;AACF;;;;AArEY;;AAAA;;AAWO;;AAAA;;AAiBoB;;AAAA;;;;;;;;;;wEDzC1BjB,kB,EAAkB;gBAL9B,uDAK8B;iBALpB;AACTlE,oBAAQ,EAAE,gBADD;AAETC,uBAAW,EAAE,6BAFJ;AAGTC,qBAAS,EAAE,CAAC,6BAAD;AAHF,W;AAKoB,U","file":"modules-users-users-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-edit-colaborador',\n  templateUrl: './edit-colaborador.component.html',\n  styleUrls: ['./edit-colaborador.component.scss']\n})\nexport class EditColaboradorComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>edit-colaborador works!</p>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { Toaster } from 'ngx-toast-notifications';\nimport { NoticyAlertComponent } from 'src/app/componets/notifications/noticy-alert/noticy-alert.component';\nimport { UsersService } from '../../_services/users.service';\n\n@Component({\n  selector: 'app-delete-user',\n  templateUrl: './delete-user.component.html',\n  styleUrls: ['./delete-user.component.scss']\n})\nexport class DeleteUserComponent implements OnInit {\n\n  @Output() UserD: EventEmitter<any> = new EventEmitter();\n  @Input() user_selected:any;\n\n  constructor(\n    public modal: NgbActiveModal,\n    public userService: UsersService,\n    public toaster: Toaster,\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n\n  delete(){\n    this.userService.deleteUser(this.user_selected._id).subscribe((resp:any) => {\n      console.log(resp);\n      this.UserD.emit(\"\");\n      this.toaster.open(NoticyAlertComponent,{text:`success-'EL USUARIO SE ELIMINO CORRECTAMENTE.'`});\n      this.modal.close();\n    }, (error) => {\n      if(error.error){\n        this.toaster.open(NoticyAlertComponent,{text:`danger-'${error.error.message}'`});\n      }\n    })\n  }\n}\n","<!-- <ng-container *ngIf=\"isLoading\">\n    <div class=\"progress progress-modal\">\n      <div class=\"progress-bar progress-bar-striped progress-bar-animated bg-primary\" role=\"progressbar\"\n        style=\"width: 100%\" aria-valuenow=\"100\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n    </div>\n  </ng-container> -->\n  <div class=\"modal-content\">\n    <div class=\"modal-header\">\n      <div class=\"modal-title h4\" id=\"example-modal-sizes-title-lg\">\n        <i class=\"icon-2x text-dark-50 flaticon-user-add mx-2\"></i> Usuario : {{ user_selected.name + ' ' + user_selected.surname }}\n      </div>\n    </div>\n    <div\n      class=\"overlay overlay-block cursor-default modal-body\"\n    >\n      <!-- <ng-container *ngIf=\"isLoading$ | async\">\n        <div class=\"overlay-layer bg-transparent\">\n          <div class=\"spinner spinner-lg spinner-success\"></div>\n        </div>\n      </ng-container> --> \n      <div class=\"row\">\n        <div class=\"col-12\">\n            <h5>SEGURO DE ELIMINAR AL USUARIO {{ user_selected.name + ' ' + user_selected.surname }}</h5>\n        </div>\n      </div>\n</div>\n    <div class=\"modal-footer\">\n      <button\n        type=\"button\"\n        class=\"btn btn-danger btn-elevate mr-2\"\n        (click)=\"delete()\"\n      >\n        ELIMINAR\n      </button>\n      \n      <button\n        type=\"button\"\n        class=\"btn btn-light btn-elevate mr-2\"\n        (click)=\"modal.dismiss()\"\n      >\n        Cancel\n      </button>\n\n    </div>\n  </div>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.scss']\n})\nexport class UsersComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { UsersRoutingModule } from './users-routing.module';\nimport { UsersComponent } from './users.component';\nimport { UsersListComponent } from './users-list/users-list.component';\nimport { AddUsersComponent } from './components/add-users/add-users.component';\nimport { EditUsersComponent } from './components/edit-users/edit-users.component';\nimport { EditColaboradorComponent } from './components/edit-colaborador/edit-colaborador.component';\nimport { DeleteUserComponent } from './components/delete-user/delete-user.component';\nimport { ChangeStateUserComponent } from './components/change-state-user/change-state-user.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgbModule, NgbModalModule, NgbDatepickerModule } from '@ng-bootstrap/ng-bootstrap';\nimport { InlineSVGModule } from 'ng-inline-svg';\nimport { CRUDTableModule } from 'src/app/_metronic/shared/crud-table';\n\n\n@NgModule({\n  declarations: [UsersComponent, UsersListComponent, AddUsersComponent, EditUsersComponent, EditColaboradorComponent, DeleteUserComponent, ChangeStateUserComponent],\n  imports: [\n    CommonModule,\n    UsersRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    NgbModule,\n    ReactiveFormsModule,\n    InlineSVGModule,\n    CRUDTableModule,\n    NgbModalModule,\n    NgbDatepickerModule,\n  ]\n})\nexport class UsersModule { }\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { Toaster } from 'ngx-toast-notifications';\nimport { NoticyAlertComponent } from 'src/app/componets/notifications/noticy-alert/noticy-alert.component';\nimport { UsersService } from '../../_services/users.service';\n\n@Component({\n  selector: 'app-edit-users',\n  templateUrl: './edit-users.component.html',\n  styleUrls: ['./edit-users.component.scss']\n})\nexport class EditUsersComponent implements OnInit {\n\n  @Input() user_selected:any;\n\n  @Output() UserE: EventEmitter<any> = new EventEmitter();\n  name:any = null;\n  surname:any = null;\n  email:any = null;\n  password:any = null;\n  repet_password:any = null;\n  constructor(\n    public modal: NgbActiveModal,\n    public userService: UsersService,\n    public toaster: Toaster,\n  ) { }\n\n  ngOnInit(): void {\n    this.name = this.user_selected.name;\n    this.surname = this.user_selected.surname;\n    this.email = this.user_selected.email;\n  }\n\n  save(){\n    if(!this.name || !this.surname || !this.email){\n      // TODOS LO CAMPOS SON OBLIGATORIOS\n      this.toaster.open(NoticyAlertComponent,{text:`danger-'Upps! Necesita ingresar todos los campos.'`});\n      return;\n    }\n    // if(this.password != this.repet_password){\n    //   this.toaster.open(NoticyAlertComponent,{text:`danger-'Upps! Necesita ingresar contraseñas iguales.'`});\n    //   return;\n    // }\n    let data = {\n      _id: this.user_selected._id,\n      name: this.name,\n      surname: this.surname,\n      email: this.email,\n      password: this.password,\n      repet_password: this.repet_password,\n    }\n    this.userService.updateUser(data).subscribe((resp:any) => {\n      console.log(resp);\n      this.UserE.emit(resp.user);\n      this.toaster.open(NoticyAlertComponent,{text:`success-'EL USUARIO SE ACTUALIZO CORRECTAMENTE.'`});\n      this.modal.close();\n    }, (error) => {\n      if(error.error){\n        this.toaster.open(NoticyAlertComponent,{text:`danger-'${error.error.message}'`});\n      }\n    })\n  }\n\n}\n","<!-- <ng-container *ngIf=\"isLoading\">\n    <div class=\"progress progress-modal\">\n      <div class=\"progress-bar progress-bar-striped progress-bar-animated bg-primary\" role=\"progressbar\"\n        style=\"width: 100%\" aria-valuenow=\"100\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n    </div>\n  </ng-container> -->\n  <div class=\"modal-content\">\n    <div class=\"modal-header\">\n      <div class=\"modal-title h4\" id=\"example-modal-sizes-title-lg\">\n        <i class=\"icon-2x text-dark-50 flaticon-user-add mx-2\"></i> Editar Usuario : {{ user_selected.name + ' ' + user_selected.surname }}\n      </div>\n    </div>\n    <div\n      class=\"overlay overlay-block cursor-default modal-body\" \n    >\n      <!-- <ng-container *ngIf=\"isLoading$ | async\">\n        <div class=\"overlay-layer bg-transparent\">\n          <div class=\"spinner spinner-lg spinner-success\"></div>\n        </div>\n      </ng-container> -->\n\n      <div class=\"row\">\n        <div class=\"col-6\">\n            <div class=\"form-group\">\n                <label>Nombres completos: <span class=\"text-danger\">*</span></label>\n                <input type=\"text\" class=\"form-control\" placeholder=\"\" [(ngModel)]=\"name\" name=\"name\">\n                <span class=\"form-text text-muted\">Ingresa tus nombres completos.</span>\n            </div>\n        </div>\n        <div class=\"col-6\">\n            <div class=\"form-group\">\n                <label>Apellidos completos: <span class=\"text-danger\">*</span></label>\n                <input type=\"text\" class=\"form-control\" placeholder=\"\" [(ngModel)]=\"surname\" name=\"surname\">\n                <span class=\"form-text text-muted\">Ingresa tus apellidos completos.</span>\n            </div>\n        </div>\n        <div class=\"col-12\">\n            <div class=\"form-group\">\n                <label>Dirección de correo: <span class=\"text-danger\">*</span></label>\n                <input type=\"email\" class=\"form-control\" placeholder=\"\" [(ngModel)]=\"email\" name=\"email\">\n                <span class=\"form-text text-muted\">Ingresa tus email.</span>\n            </div>\n        </div>\n        <div class=\"col-6\">\n            <div class=\"form-group\">\n                <label for=\"\">Contraseña: <span class=\"text-danger\">*</span></label>\n                <input type=\"password\" class=\"form-control\" id=\"\" placeholder=\"******\" [(ngModel)]=\"password\" name=\"password\">\n            </div>\n        </div>\n        <div class=\"col-6\">\n            <div class=\"form-group\">\n                <label for=\"\">Repetir Contraseña <span class=\"text-danger\">*</span></label>\n                <input type=\"password\" class=\"form-control\" id=\"\" placeholder=\"******\" [(ngModel)]=\"repet_password\" name=\"repet_password\">\n            </div>\n        </div>\n      </div>\n</div>\n    <div class=\"modal-footer\">\n\n        <button\n        type=\"button\"\n        class=\"btn btn-primary btn-elevate mr-2\"\n        (click)=\"save()\"\n      >\n        Guardar\n      </button>\n\n      <button\n        type=\"button\"\n        class=\"btn btn-light btn-elevate mr-2\"\n        (click)=\"modal.dismiss()\"\n      >\n        Cancel\n      </button>\n\n    </div>\n  </div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-change-state-user',\n  templateUrl: './change-state-user.component.html',\n  styleUrls: ['./change-state-user.component.scss']\n})\nexport class ChangeStateUserComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>change-state-user works!</p>\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { finalize } from 'rxjs/operators';\nimport { URL_SERVICIOS } from 'src/app/config/config';\nimport { AuthService } from '../../auth';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsersService {\n\n  isLoading$: Observable<boolean>;\n  isLoadingSubject: BehaviorSubject<boolean>;\n  \n  constructor(\n    private http: HttpClient,\n    public authservice: AuthService,\n  ) {\n    this.isLoadingSubject = new BehaviorSubject<boolean>(false);\n    this.isLoading$ = this.isLoadingSubject.asObservable();\n  }\n  \n  allUsers(search){\n    this.isLoadingSubject.next(true);\n    let headers = new HttpHeaders({'token': this.authservice.token});\n    let URL = URL_SERVICIOS + \"/users/list?search=\"+search;\n    return this.http.get(URL,{headers: headers}).pipe(\n      finalize(() => this.isLoadingSubject.next(false))\n    );\n  }\n\n  createUser(data){\n    this.isLoadingSubject.next(true);\n    let headers = new HttpHeaders({'token': this.authservice.token});\n    let URL = URL_SERVICIOS + \"/users/register_admin\";\n    return this.http.post(URL,data,{headers: headers}).pipe(\n      finalize(() => this.isLoadingSubject.next(false))\n    );\n  }\n\n  updateUser(data){\n    this.isLoadingSubject.next(true);\n    let headers = new HttpHeaders({'token': this.authservice.token});\n    let URL = URL_SERVICIOS + \"/users/update\";\n    return this.http.put(URL,data,{headers: headers}).pipe(\n      finalize(() => this.isLoadingSubject.next(false))\n    );\n  }\n\n  deleteUser(user_id){\n    this.isLoadingSubject.next(true);\n    let headers = new HttpHeaders({'token': this.authservice.token});\n    let URL = URL_SERVICIOS + \"/users/delete?_id=\"+user_id;\n    return this.http.delete(URL,{headers: headers}).pipe(\n      finalize(() => this.isLoadingSubject.next(false))\n    );\n  }\n}\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { Toaster } from 'ngx-toast-notifications';\nimport { NoticyAlertComponent } from 'src/app/componets/notifications/noticy-alert/noticy-alert.component';\nimport { UsersService } from '../../_services/users.service';\n\n@Component({\n  selector: 'app-add-users',\n  templateUrl: './add-users.component.html',\n  styleUrls: ['./add-users.component.scss']\n})\nexport class AddUsersComponent implements OnInit {\n\n  @Output() UserC: EventEmitter<any> = new EventEmitter();\n  name:any = null;\n  surname:any = null;\n  email:any = null;\n  password:any = null;\n  repet_password:any = null;\n  constructor(\n    public modal: NgbActiveModal,\n    public userService: UsersService,\n    public toaster: Toaster,\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  save(){\n    if(!this.name || !this.surname || !this.email || !this.password || !this.repet_password){\n      // TODOS LO CAMPOS SON OBLIGATORIOS\n      this.toaster.open(NoticyAlertComponent,{text:`danger-'Upps! Necesita ingresar todos los campos.'`});\n      return;\n    }\n    if(this.password != this.repet_password){\n      this.toaster.open(NoticyAlertComponent,{text:`danger-'Upps! Necesita ingresar contraseñas iguales.'`});\n      return;\n    }\n    let data = {\n      name: this.name,\n      surname: this.surname,\n      email: this.email,\n      password: this.password,\n      repet_password: this.repet_password,\n    }\n    this.userService.createUser(data).subscribe((resp:any) => {\n      console.log(resp);\n      this.UserC.emit(resp.user);\n      this.toaster.open(NoticyAlertComponent,{text:`success-'EL USUARIO SE REGISTRO CORRECTAMENTE.'`});\n      this.modal.close();\n    }, (error) => {\n      if(error.error){\n        this.toaster.open(NoticyAlertComponent,{text:`danger-'${error.error.message}'`});\n      }\n    })\n  }\n}\n","<!-- <ng-container *ngIf=\"isLoading\">\n    <div class=\"progress progress-modal\">\n      <div class=\"progress-bar progress-bar-striped progress-bar-animated bg-primary\" role=\"progressbar\"\n        style=\"width: 100%\" aria-valuenow=\"100\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n    </div>\n  </ng-container> -->\n  <div class=\"modal-content\">\n    <div class=\"modal-header\">\n      <div class=\"modal-title h4\" id=\"example-modal-sizes-title-lg\">\n        <i class=\"icon-2x text-dark-50 flaticon-user-add mx-2\"></i> Crear Usuario\n      </div>\n    </div>\n    <div\n      class=\"overlay overlay-block cursor-default modal-body\"\n    >\n      <!-- <ng-container *ngIf=\"isLoading$ | async\">\n        <div class=\"overlay-layer bg-transparent\">\n          <div class=\"spinner spinner-lg spinner-success\"></div>\n        </div>\n      </ng-container> -->\n\n      <div class=\"row\">\n        <div class=\"col-6\">\n            <div class=\"form-group\">\n                <label>Nombres completos: <span class=\"text-danger\">*</span></label>\n                <input type=\"text\" class=\"form-control\" placeholder=\"\" [(ngModel)]=\"name\" name=\"name\">\n                <span class=\"form-text text-muted\">Ingresa tus nombres completos.</span>\n            </div>\n        </div>\n        <div class=\"col-6\">\n            <div class=\"form-group\">\n                <label>Apellidos completos: <span class=\"text-danger\">*</span></label>\n                <input type=\"text\" class=\"form-control\" placeholder=\"\" [(ngModel)]=\"surname\" name=\"surname\">\n                <span class=\"form-text text-muted\">Ingresa tus apellidos completos.</span>\n            </div>\n        </div>\n        <div class=\"col-12\">\n            <div class=\"form-group\">\n                <label>Dirección de correo: <span class=\"text-danger\">*</span></label>\n                <input type=\"email\" class=\"form-control\" placeholder=\"\" [(ngModel)]=\"email\" name=\"email\">\n                <span class=\"form-text text-muted\">Ingresa tus email.</span>\n            </div>\n        </div>\n        <div class=\"col-6\">\n            <div class=\"form-group\">\n                <label for=\"\">Contraseña: <span class=\"text-danger\">*</span></label>\n                <input type=\"password\" class=\"form-control\" id=\"\" placeholder=\"******\" [(ngModel)]=\"password\" name=\"password\">\n            </div>\n        </div>\n        <div class=\"col-6\">\n            <div class=\"form-group\">\n                <label for=\"\">Repetir Contraseña <span class=\"text-danger\">*</span></label>\n                <input type=\"password\" class=\"form-control\" id=\"\" placeholder=\"******\" [(ngModel)]=\"repet_password\" name=\"repet_password\">\n            </div>\n        </div>\n      </div>\n</div>\n    <div class=\"modal-footer\">\n\n        <button\n        type=\"button\"\n        class=\"btn btn-primary btn-elevate mr-2\"\n        (click)=\"save()\"\n      >\n        Guardar\n      </button>\n\n      <button\n        type=\"button\"\n        class=\"btn btn-light btn-elevate mr-2\"\n        (click)=\"modal.dismiss()\"\n      >\n        Cancel\n      </button>\n\n    </div>\n  </div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { UsersListComponent } from './users-list/users-list.component';\nimport { UsersComponent } from './users.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UsersComponent,\n    children: [\n      {\n        path: 'list',\n        component: UsersListComponent,\n      },\n      // {\n      //   path: 'mi-perfil',\n      //   component: UsersProfileCComponent\n      // },\n      { path: '', redirectTo: 'list', pathMatch: 'full' },\n      { path: '**', redirectTo: 'list', pathMatch: 'full' },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class UsersRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { AddUsersComponent } from '../components/add-users/add-users.component';\nimport { DeleteUserComponent } from '../components/delete-user/delete-user.component';\nimport { EditUsersComponent } from '../components/edit-users/edit-users.component';\nimport { UsersService } from '../_services/users.service';\n\n@Component({\n  selector: 'app-users-list',\n  templateUrl: './users-list.component.html',\n  styleUrls: ['./users-list.component.scss']\n})\nexport class UsersListComponent implements OnInit {\n\n  users:any = [];\n\n  isLoading$:any;\n  search:any = \"\";\n  constructor(\n    public _userService:UsersService,\n    public modalService: NgbModal,\n  ) { }\n\n  ngOnInit(): void {\n    this.isLoading$ = this._userService.isLoading$;\n    this.allUsers();\n  }\n  allUsers(){\n    this._userService.allUsers(this.search).subscribe((resp:any) => {\n      console.log(resp);\n      this.users = resp.users;\n    })\n  }\n  refresh(){\n    this.search = \"\";\n    this.allUsers();\n  }\n  openCreate(){\n    const modalRef = this.modalService.open(AddUsersComponent, {centered: true,size: 'md'});\n    modalRef.result.then(\n      () => {\n\n      },() => {\n\n      }\n    );\n    modalRef.componentInstance.UserC.subscribe((resp:any) => {\n      console.log(resp);\n      this.users.unshift(resp);\n    })\n  }\n\n  editUser(user){\n    const modalRef = this.modalService.open(EditUsersComponent, {centered: true,size: 'md'});\n    modalRef.componentInstance.user_selected = user;\n    modalRef.result.then(\n      () => {\n\n      },() => {\n\n      }\n    );\n    modalRef.componentInstance.UserE.subscribe((resp:any) => {\n      console.log(resp);\n      let INDEX = this.users.findIndex(item => item._id == resp._id);\n      if(INDEX != -1){\n        this.users[INDEX] = resp;\n      }\n    })\n  }\n  delete(user){\n    const modalRef = this.modalService.open(DeleteUserComponent, {centered: true,size: 'md'});\n    modalRef.componentInstance.user_selected = user;\n    modalRef.result.then(\n      () => {\n\n      },() => {\n\n      }\n    );\n    modalRef.componentInstance.UserD.subscribe((resp:any) => {\n      console.log(resp);\n      let INDEX = this.users.findIndex(item => item._id == user._id);\n      if(INDEX != -1){\n        this.users.splice(INDEX,1);\n      }\n    })\n  }\n}\n","<div class=\"card card-custom gutter-b\">\n  <div class=\"card-header\">\n    <div class=\"card-title\">\n      <h3 class=\"card-label\"><i class=\"icon-2x text-dark-50 flaticon-users mx-2\"></i> Lista Usuarios</h3>\n    </div>\n    <div class=\"card-toolbar\">\n      <a\n        type=\"button\"\n        class=\"btn btn-primary\"\n        (click)=\"openCreate()\"\n        ><i class=\"icon-2x text-white flaticon-user-add\" ></i> Nuevo Usuario</a\n      >\n    </div>\n  </div>\n  <div class=\"card-body\">\n    <!-- begin: Filtration form -->\n    <div class=\"form form-label-right\">\n      <div class=\"form-group row\">\n        <div class=\"col-lg-3\">\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            name=\"searchText\"\n            placeholder=\"Buscar\"\n            value=\"\"\n            [(ngModel)]=\"search\"\n            (keyup.enter)=\"allUsers()\"\n          /><small class=\"form-text text-muted\"\n            ><b>Buscar</b> por correo , nombre y apellido</small\n          >\n        </div>\n        <div class=\"col-2\">\n          <button class=\"btn btn-dark\" (click)=\"refresh()\">Refresh</button>\n        </div>\n      </div>\n    </div>\n    <ng-container *ngIf=\"isLoading$ | async\">\n        <span class=\"spinner spinner-primary ml-5\"></span>\n    </ng-container>\n\n    <div class=\"row\">\n      <div class=\"col-12\">\n        <div class=\"table-responsive\">\n          <table class=\"table table-head-custom table-vertical-center\" id=\"kt_advance_table_widget_1\">\n              <thead>\n                  <tr class=\"text-left\">\n                      <th >NOMBRES </th>\n                      <th >APELLIDOS</th>\n                      <th >EMAIL</th>\n                      <th >ACCIÓN</th>\n                  </tr>\n              </thead>\n              <tbody>\n                  <tr *ngFor=\"let user of users\">\n                    <td>{{ user.name }}</td>\n                    <td>{{ user.surname }}</td>\n                    <td>{{ user.email }}</td>\n                    <td>\n                      <a (click)=\"editUser(user)\" class=\"btn btn-icon btn-light btn-hover-primary btn-sm mx-1\" ngbTooltip=\"Editar Usuario\" ngbTooltipClass=\"kt-tooltip\">\n                        <span class=\"svg-icon svg-icon-md svg-icon-primary\">\n                            <!--begin::Svg Icon | path:assets/media/svg/icons/Communication/Write.svg-->\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" version=\"1.1\">\n                                <g stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n                                    <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\n                                    <path d=\"M12.2674799,18.2323597 L12.0084872,5.45852451 C12.0004303,5.06114792 12.1504154,4.6768183 12.4255037,4.38993949 L15.0030167,1.70195304 L17.5910752,4.40093695 C17.8599071,4.6812911 18.0095067,5.05499603 18.0083938,5.44341307 L17.9718262,18.2062508 C17.9694575,19.0329966 17.2985816,19.701953 16.4718324,19.701953 L13.7671717,19.701953 C12.9505952,19.701953 12.2840328,19.0487684 12.2674799,18.2323597 Z\" fill=\"#000000\" fill-rule=\"nonzero\" transform=\"translate(14.701953, 10.701953) rotate(-135.000000) translate(-14.701953, -10.701953)\" />\n                                    <path d=\"M12.9,2 C13.4522847,2 13.9,2.44771525 13.9,3 C13.9,3.55228475 13.4522847,4 12.9,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,13 C20,12.4477153 20.4477153,12 21,12 C21.5522847,12 22,12.4477153 22,13 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,6 C2,3.790861 3.790861,2 6,2 L12.9,2 Z\" fill=\"#000000\" fill-rule=\"nonzero\" opacity=\"0.3\" />\n                                </g>\n                            </svg>\n                            <!--end::Svg Icon-->\n                        </span>\n                      </a>\n    \n                      <a (click)=\"delete(user)\" class=\"btn btn-icon btn-light btn-hover-primary btn-sm\" ngbTooltip=\"Eliminar Usuario\" ngbTooltipClass=\"kt-tooltip\">\n                        <span class=\"svg-icon svg-icon-md svg-icon-danger\">\n                            <!--begin::Svg Icon | path:assets/media/svg/icons/General/Trash.svg-->\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" version=\"1.1\">\n                                <g stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n                                    <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\n                                    <path d=\"M6,8 L6,20.5 C6,21.3284271 6.67157288,22 7.5,22 L16.5,22 C17.3284271,22 18,21.3284271 18,20.5 L18,8 L6,8 Z\" fill=\"#000000\" fill-rule=\"nonzero\" />\n                                    <path d=\"M14,4.5 L14,4 C14,3.44771525 13.5522847,3 13,3 L11,3 C10.4477153,3 10,3.44771525 10,4 L10,4.5 L5.5,4.5 C5.22385763,4.5 5,4.72385763 5,5 L5,5.5 C5,5.77614237 5.22385763,6 5.5,6 L18.5,6 C18.7761424,6 19,5.77614237 19,5.5 L19,5 C19,4.72385763 18.7761424,4.5 18.5,4.5 L14,4.5 Z\" fill=\"#000000\" opacity=\"0.3\" />\n                                </g>\n                            </svg>\n                            <!--end::Svg Icon-->\n                        </span>\n                      </a>\n                    </td>\n                  </tr>\n              </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n\n  </div>\n</div>"]}