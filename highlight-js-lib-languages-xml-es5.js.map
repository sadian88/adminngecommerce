{"version":3,"sources":["webpack:///node_modules/highlight.js/lib/languages/xml.js"],"names":["source","re","lookahead","concat","optional","args","joined","map","x","join","either","xml","hljs","TAG_NAME_RE","XML_IDENT_RE","XML_ENTITIES","className","begin","XML_META_KEYWORDS","contains","illegal","XML_META_PAR_KEYWORDS","inherit","end","APOS_META_STRING_MODE","APOS_STRING_MODE","QUOTE_META_STRING_MODE","QUOTE_STRING_MODE","TAG_INTERNALS","endsWithParent","relevance","endsParent","variants","name","aliases","case_insensitive","COMMENT","keywords","starts","returnEnd","subLanguage","module","exports"],"mappings":"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","file":"highlight-js-lib-languages-xml-es5.js","sourcesContent":["/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n\n  return re.source;\n}\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction lookahead(re) {\n  return concat('(?=', re, ')');\n}\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction optional(re) {\n  return concat('(', re, ')?');\n}\n\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\nfunction concat(...args) {\n  const joined = args.map((x) => source(x)).join(\"\");\n  return joined;\n}\n\n/**\n * Any of the passed expresssions may match\n *\n * Creates a huge this | this | that | that match\n * @param {(RegExp | string)[] } args\n * @returns {string}\n */\nfunction either(...args) {\n  const joined = '(' + args.map((x) => source(x)).join(\"|\") + \")\";\n  return joined;\n}\n\n/*\nLanguage: HTML, XML\nWebsite: https://www.w3.org/XML/\nCategory: common\nAudit: 2020\n*/\n\n/** @type LanguageFn */\nfunction xml(hljs) {\n  // Element names can contain letters, digits, hyphens, underscores, and periods\n  const TAG_NAME_RE = concat(/[A-Z_]/, optional(/[A-Z0-9_.-]*:/), /[A-Z0-9_.-]*/);\n  const XML_IDENT_RE = /[A-Za-z0-9._:-]+/;\n  const XML_ENTITIES = {\n    className: 'symbol',\n    begin: /&[a-z]+;|&#[0-9]+;|&#x[a-f0-9]+;/\n  };\n  const XML_META_KEYWORDS = {\n    begin: /\\s/,\n    contains: [\n      {\n        className: 'meta-keyword',\n        begin: /#?[a-z_][a-z1-9_-]+/,\n        illegal: /\\n/\n      }\n    ]\n  };\n  const XML_META_PAR_KEYWORDS = hljs.inherit(XML_META_KEYWORDS, {\n    begin: /\\(/,\n    end: /\\)/\n  });\n  const APOS_META_STRING_MODE = hljs.inherit(hljs.APOS_STRING_MODE, {\n    className: 'meta-string'\n  });\n  const QUOTE_META_STRING_MODE = hljs.inherit(hljs.QUOTE_STRING_MODE, {\n    className: 'meta-string'\n  });\n  const TAG_INTERNALS = {\n    endsWithParent: true,\n    illegal: /</,\n    relevance: 0,\n    contains: [\n      {\n        className: 'attr',\n        begin: XML_IDENT_RE,\n        relevance: 0\n      },\n      {\n        begin: /=\\s*/,\n        relevance: 0,\n        contains: [\n          {\n            className: 'string',\n            endsParent: true,\n            variants: [\n              {\n                begin: /\"/,\n                end: /\"/,\n                contains: [ XML_ENTITIES ]\n              },\n              {\n                begin: /'/,\n                end: /'/,\n                contains: [ XML_ENTITIES ]\n              },\n              {\n                begin: /[^\\s\"'=<>`]+/\n              }\n            ]\n          }\n        ]\n      }\n    ]\n  };\n  return {\n    name: 'HTML, XML',\n    aliases: [\n      'html',\n      'xhtml',\n      'rss',\n      'atom',\n      'xjb',\n      'xsd',\n      'xsl',\n      'plist',\n      'wsf',\n      'svg'\n    ],\n    case_insensitive: true,\n    contains: [\n      {\n        className: 'meta',\n        begin: /<![a-z]/,\n        end: />/,\n        relevance: 10,\n        contains: [\n          XML_META_KEYWORDS,\n          QUOTE_META_STRING_MODE,\n          APOS_META_STRING_MODE,\n          XML_META_PAR_KEYWORDS,\n          {\n            begin: /\\[/,\n            end: /\\]/,\n            contains: [\n              {\n                className: 'meta',\n                begin: /<![a-z]/,\n                end: />/,\n                contains: [\n                  XML_META_KEYWORDS,\n                  XML_META_PAR_KEYWORDS,\n                  QUOTE_META_STRING_MODE,\n                  APOS_META_STRING_MODE\n                ]\n              }\n            ]\n          }\n        ]\n      },\n      hljs.COMMENT(\n        /<!--/,\n        /-->/,\n        {\n          relevance: 10\n        }\n      ),\n      {\n        begin: /<!\\[CDATA\\[/,\n        end: /\\]\\]>/,\n        relevance: 10\n      },\n      XML_ENTITIES,\n      {\n        className: 'meta',\n        begin: /<\\?xml/,\n        end: /\\?>/,\n        relevance: 10\n      },\n      {\n        className: 'tag',\n        /*\n        The lookahead pattern (?=...) ensures that 'begin' only matches\n        '<style' as a single word, followed by a whitespace or an\n        ending braket. The '$' is needed for the lexeme to be recognized\n        by hljs.subMode() that tests lexemes outside the stream.\n        */\n        begin: /<style(?=\\s|>)/,\n        end: />/,\n        keywords: {\n          name: 'style'\n        },\n        contains: [ TAG_INTERNALS ],\n        starts: {\n          end: /<\\/style>/,\n          returnEnd: true,\n          subLanguage: [\n            'css',\n            'xml'\n          ]\n        }\n      },\n      {\n        className: 'tag',\n        // See the comment in the <style tag about the lookahead pattern\n        begin: /<script(?=\\s|>)/,\n        end: />/,\n        keywords: {\n          name: 'script'\n        },\n        contains: [ TAG_INTERNALS ],\n        starts: {\n          end: /<\\/script>/,\n          returnEnd: true,\n          subLanguage: [\n            'javascript',\n            'handlebars',\n            'xml'\n          ]\n        }\n      },\n      // we need this for now for jSX\n      {\n        className: 'tag',\n        begin: /<>|<\\/>/\n      },\n      // open tag\n      {\n        className: 'tag',\n        begin: concat(\n          /</,\n          lookahead(concat(\n            TAG_NAME_RE,\n            // <tag/>\n            // <tag>\n            // <tag ...\n            either(/\\/>/, />/, /\\s/)\n          ))\n        ),\n        end: /\\/?>/,\n        contains: [\n          {\n            className: 'name',\n            begin: TAG_NAME_RE,\n            relevance: 0,\n            starts: TAG_INTERNALS\n          }\n        ]\n      },\n      // close tag\n      {\n        className: 'tag',\n        begin: concat(\n          /<\\//,\n          lookahead(concat(\n            TAG_NAME_RE, />/\n          ))\n        ),\n        contains: [\n          {\n            className: 'name',\n            begin: TAG_NAME_RE,\n            relevance: 0\n          },\n          {\n            begin: />/,\n            relevance: 0,\n            endsParent: true\n          }\n        ]\n      }\n    ]\n  };\n}\n\nmodule.exports = xml;\n"]}