{"version":3,"sources":["webpack:///src/app/modules/e-commerce/e-commerce-routing.module.ts","webpack:///src/app/modules/e-commerce/e-commerce.module.ts","webpack:///src/app/modules/e-commerce/products/products.component.ts","webpack:///src/app/modules/e-commerce/products/products.component.html","webpack:///src/app/modules/e-commerce/products/components/fetch-products-modal/fetch-products-modal.component.ts","webpack:///src/app/modules/e-commerce/products/components/fetch-products-modal/fetch-products-modal.component.html","webpack:///src/app/modules/e-commerce/products/components/update-products-status-modal/update-products-status-modal.component.ts","webpack:///src/app/modules/e-commerce/products/components/update-products-status-modal/update-products-status-modal.component.html","webpack:///src/app/modules/e-commerce/products/product-edit/specifications/delete-spec-modal/delete-spec-modal.component.ts","webpack:///src/app/modules/e-commerce/products/product-edit/specifications/delete-spec-modal/delete-spec-modal.component.html","webpack:///src/app/modules/e-commerce/customers/components/delete-customers-modal/delete-customers-modal.component.ts","webpack:///src/app/modules/e-commerce/customers/components/delete-customers-modal/delete-customers-modal.component.html","webpack:///src/app/_fake/fake-helpers/http-extenstions.ts","webpack:///src/app/modules/e-commerce/customers/customers.component.ts","webpack:///src/app/modules/e-commerce/customers/customers.component.html","webpack:///src/app/modules/e-commerce/e-commerce.component.ts","webpack:///src/app/modules/e-commerce/e-commerce.component.html","webpack:///src/app/modules/e-commerce/customers/components/delete-customer-modal/delete-customer-modal.component.ts","webpack:///src/app/modules/e-commerce/customers/components/delete-customer-modal/delete-customer-modal.component.html","webpack:///src/app/modules/e-commerce/_services/fake/customers.service.ts","webpack:///src/app/modules/e-commerce/products/components/delete-product-modal/delete-product-modal.component.ts","webpack:///src/app/modules/e-commerce/products/components/delete-product-modal/delete-product-modal.component.html","webpack:///src/app/modules/e-commerce/products/product-edit/remarks/remarks.component.ts","webpack:///src/app/modules/e-commerce/products/product-edit/remarks/remarks.component.html","webpack:///src/app/modules/e-commerce/products/product-edit/remarks/edit-remark-modal/edit-remark-modal.component.ts","webpack:///src/app/modules/e-commerce/products/product-edit/remarks/edit-remark-modal/edit-remark-modal.component.html","webpack:///src/app/modules/e-commerce/products/product-edit/product-edit.component.ts","webpack:///src/app/modules/e-commerce/products/product-edit/product-edit.component.html","webpack:///src/app/modules/e-commerce/products/product-edit/remarks/fetch-remarks-modal/fetch-remarks-modal.component.ts","webpack:///src/app/modules/e-commerce/products/product-edit/remarks/fetch-remarks-modal/fetch-remarks-modal.component.html","webpack:///src/app/modules/e-commerce/products/product-edit/specifications/delete-specs-modal/delete-specs-modal.component.ts","webpack:///src/app/modules/e-commerce/products/product-edit/specifications/delete-specs-modal/delete-specs-modal.component.html","webpack:///src/app/modules/e-commerce/products/product-edit/specifications/specifications.component.ts","webpack:///src/app/modules/e-commerce/products/product-edit/specifications/specifications.component.html","webpack:///src/app/modules/e-commerce/products/components/delete-products-modal/delete-products-modal.component.ts","webpack:///src/app/modules/e-commerce/products/components/delete-products-modal/delete-products-modal.component.html","webpack:///src/app/modules/e-commerce/products/product-edit/specifications/fetch-specs-modal/fetch-specs-modal.component.ts","webpack:///src/app/modules/e-commerce/products/product-edit/specifications/fetch-specs-modal/fetch-specs-modal.component.html","webpack:///src/app/modules/e-commerce/customers/components/edit-customer-modal/edit-customer-modal.component.ts","webpack:///src/app/modules/e-commerce/customers/components/edit-customer-modal/edit-customer-modal.component.html","webpack:///src/app/modules/e-commerce/products/product-edit/remarks/delete-remarks-modal/delete-remarks-modal.component.ts","webpack:///src/app/modules/e-commerce/products/product-edit/remarks/delete-remarks-modal/delete-remarks-modal.component.html","webpack:///src/app/modules/e-commerce/products/product-edit/remarks/delete-remark-modal/delete-remark-modal.component.ts","webpack:///src/app/modules/e-commerce/products/product-edit/remarks/delete-remark-modal/delete-remark-modal.component.html","webpack:///src/app/modules/e-commerce/_services/fake/remarks.service.ts","webpack:///src/app/modules/e-commerce/_services/index.ts","webpack:///src/app/modules/e-commerce/_models/specification.dictionary.ts","webpack:///src/app/modules/e-commerce/_services/fake/products.service.ts","webpack:///src/app/modules/e-commerce/customers/components/update-customers-status-modal/update-customers-status-modal.component.ts","webpack:///src/app/modules/e-commerce/customers/components/update-customers-status-modal/update-customers-status-modal.component.html","webpack:///src/app/modules/e-commerce/_services/fake/specifications.service.ts","webpack:///src/app/modules/e-commerce/customers/components/fetch-customers-modal/fetch-customers-modal.component.ts","webpack:///src/app/modules/e-commerce/customers/components/fetch-customers-modal/fetch-customers-modal.component.html","webpack:///src/app/modules/e-commerce/products/product-edit/specifications/edit-spec-modal/edit-spec-modal.component.ts","webpack:///src/app/modules/e-commerce/products/product-edit/specifications/edit-spec-modal/edit-spec-modal.component.html"],"names":["routes","path","component","children","redirectTo","pathMatch","ECommerceRoutingModule","forChild","imports","exports","ECommerceModule","declarations","entryComponents","grouping","ProductsComponent","fb","modalService","productsService","subscriptions","filterForm","searchForm","fetch","sb","isLoading$","subscribe","res","isLoading","push","paginator","sorting","forEach","unsubscribe","filterGroup","group","status","condition","searchTerm","controls","valueChanges","filter","get","value","patchState","searchGroup","searchEvent","pipe","val","search","column","isActiveColumn","direction","id","modalRef","open","componentInstance","result","then","ids","getSelectedRows","sort","paginate","selector","templateUrl","styleUrls","FetchProductsModalComponent","modal","products","loadProducts","items$","c","indexOf","errorMessage","dismiss","close","fetchSelected","UpdateProductsStatusModalComponent","updateStatusForItems","undefined","updateProductsStatus","DeleteSpecModalComponent","specsService","err","deleteSpec","DeleteCustomersModalComponent","customersService","deleteItems","deleteCustomers","baseFilter","entities","requestObj","entitiesResult","filterArray","searchInArray","sortArray","totalCount","length","startPosition","page","pageSize","endPosition","slice","responseObj","items","total","incomingArray","sortField","sortOrder","a","b","filtrationFields","Object","keys","keyName","el","acceptableForSearchTypes","number","string","row","termIsFoundInRow","toString","toLowerCase","CustomersComponent","customerService","type","edit","size","create","ECommerceComponent","DeleteCustomerModalComponent","deleteCustomer","DEFAULT_STATE","entityId","CustomersService","http","API_URL","apiUrl","tableState","response","filteredResult","tasks$","customers","map","customer","update","providedIn","DeleteProductModalComponent","deleteProduct","RemarksComponent","remarksService","productId","EMPTY_REMARK","carId","text","dueDate","EditRemarkModalComponent","loadRemarks","remark","loadForm","getItemById","empty","formGroup","compose","required","minLength","maxLength","nullValidator","prepareRemark","sbUpdate","sbCreate","formData","controlName","control","valid","dirty","touched","invalid","validation","hasError","provide","useClass","providers","EMPTY_PRODUCT","model","manufacture","modelYear","mileage","description","color","price","VINCode","ProductEditComponent","router","route","tabs","BASIC_TAB","REMARKS_TAB","SPECIFICATIONS_TAB","activeTabId","loadProduct","paramMap","params","Number","navigate","relativeTo","product","previous","assign","min","max","markAllAsTouched","formValues","console","error","tabId","reset","changeTab","FetchRemarksModalComponent","remarks","DeleteSpecsModalComponent","deleteSpecs","SpecificationsComponent","specs","DeleteProductsModalComponent","deleteProducts","FetchSpecsModalComponent","specifications","loadSpecs","EMPTY_CUSTOMER","firstName","lastName","email","userName","gender","dob","dateOfBbirth","ipAddress","EditCustomerModalComponent","loadCustomer","prepareCustomer","Date","DeleteRemarksModalComponent","deleteRemarks","DeleteRemarkModalComponent","remraksService","deleteRemark","RemarksService","SPECIFICATIONS_DICTIONARY","ProductsService","UpdateCustomersStatusModalComponent","loadCustomers","updateCustomersStatus","SpecificationsService","FetchCustomersModalComponent","setTimeout","EMPTY_SPEC","specId","specName","EditSpecModalComponent","spec","prepareSpec"],"mappings":"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","file":"modules-e-commerce-e-commerce-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { ECommerceComponent } from './e-commerce.component';\r\nimport { CustomersComponent } from './customers/customers.component';\r\nimport { ProductsComponent } from './products/products.component';\r\nimport { ProductEditComponent } from './products/product-edit/product-edit.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ECommerceComponent,\r\n    children: [\r\n      {\r\n        path: 'customers',\r\n        component: CustomersComponent,\r\n      },\r\n      {\r\n        path: 'products',\r\n        component: ProductsComponent,\r\n      },\r\n      {\r\n        path: 'product/add',\r\n        component: ProductEditComponent\r\n      },\r\n      {\r\n        path: 'product/edit',\r\n        component: ProductEditComponent\r\n      },\r\n      {\r\n        path: 'product/edit/:id',\r\n        component: ProductEditComponent\r\n      },\r\n      { path: '', redirectTo: 'customers', pathMatch: 'full' },\r\n      { path: '**', redirectTo: 'customers', pathMatch: 'full' },\r\n    ],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ECommerceRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { InlineSVGModule } from 'ng-inline-svg';\r\nimport { CustomersComponent } from './customers/customers.component';\r\nimport { ProductsComponent } from './products/products.component';\r\nimport { ECommerceComponent } from './e-commerce.component';\r\nimport { ECommerceRoutingModule } from './e-commerce-routing.module';\r\nimport { CRUDTableModule } from '../../_metronic/shared/crud-table';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { DeleteCustomerModalComponent } from './customers/components/delete-customer-modal/delete-customer-modal.component';\r\nimport { DeleteCustomersModalComponent } from './customers/components/delete-customers-modal/delete-customers-modal.component';\r\nimport { FetchCustomersModalComponent } from './customers/components/fetch-customers-modal/fetch-customers-modal.component';\r\nimport { UpdateCustomersStatusModalComponent } from './customers/components/update-customers-status-modal/update-customers-status-modal.component';\r\nimport { EditCustomerModalComponent } from './customers/components/edit-customer-modal/edit-customer-modal.component';\r\nimport { NgbDatepickerModule, NgbModalModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { DeleteProductModalComponent } from './products/components/delete-product-modal/delete-product-modal.component';\r\nimport { DeleteProductsModalComponent } from './products/components/delete-products-modal/delete-products-modal.component';\r\nimport { UpdateProductsStatusModalComponent } from './products/components/update-products-status-modal/update-products-status-modal.component';\r\nimport { FetchProductsModalComponent } from './products/components/fetch-products-modal/fetch-products-modal.component';\r\nimport { ProductEditComponent } from './products/product-edit/product-edit.component';\r\nimport { RemarksComponent } from './products/product-edit/remarks/remarks.component';\r\nimport { SpecificationsComponent } from './products/product-edit/specifications/specifications.component';\r\nimport { DeleteRemarkModalComponent } from './products/product-edit/remarks/delete-remark-modal/delete-remark-modal.component';\r\nimport { DeleteRemarksModalComponent } from './products/product-edit/remarks/delete-remarks-modal/delete-remarks-modal.component';\r\nimport { FetchRemarksModalComponent } from './products/product-edit/remarks/fetch-remarks-modal/fetch-remarks-modal.component';\r\nimport { DeleteSpecModalComponent } from './products/product-edit/specifications/delete-spec-modal/delete-spec-modal.component';\r\nimport { DeleteSpecsModalComponent } from './products/product-edit/specifications/delete-specs-modal/delete-specs-modal.component';\r\nimport { FetchSpecsModalComponent } from './products/product-edit/specifications/fetch-specs-modal/fetch-specs-modal.component';\r\nimport { EditRemarkModalComponent } from './products/product-edit/remarks/edit-remark-modal/edit-remark-modal.component';\r\nimport { EditSpecModalComponent } from './products/product-edit/specifications/edit-spec-modal/edit-spec-modal.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    CustomersComponent,\r\n    ProductsComponent,\r\n    ECommerceComponent,\r\n    DeleteCustomerModalComponent,\r\n    DeleteCustomersModalComponent,\r\n    FetchCustomersModalComponent,\r\n    UpdateCustomersStatusModalComponent,\r\n    EditCustomerModalComponent,\r\n    DeleteProductModalComponent,\r\n    DeleteProductsModalComponent,\r\n    UpdateProductsStatusModalComponent,\r\n    FetchProductsModalComponent,\r\n    ProductEditComponent,\r\n    RemarksComponent,\r\n    SpecificationsComponent,\r\n    DeleteRemarkModalComponent,\r\n    DeleteRemarksModalComponent,\r\n    FetchRemarksModalComponent,\r\n    DeleteSpecModalComponent,\r\n    DeleteSpecsModalComponent,\r\n    FetchSpecsModalComponent,\r\n    EditRemarkModalComponent,\r\n    EditSpecModalComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    HttpClientModule,\r\n    ECommerceRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    InlineSVGModule,\r\n    CRUDTableModule,\r\n    NgbModalModule,\r\n    NgbDatepickerModule\r\n  ],\r\n  entryComponents: [\r\n    DeleteCustomerModalComponent,\r\n    DeleteCustomersModalComponent,\r\n    UpdateCustomersStatusModalComponent,\r\n    FetchCustomersModalComponent,\r\n    EditCustomerModalComponent,\r\n    DeleteProductModalComponent,\r\n    DeleteProductsModalComponent,\r\n    UpdateProductsStatusModalComponent,\r\n    FetchProductsModalComponent,\r\n    DeleteRemarkModalComponent,\r\n    DeleteRemarksModalComponent,\r\n    FetchRemarksModalComponent,\r\n    DeleteSpecModalComponent,\r\n    DeleteSpecsModalComponent,\r\n    FetchSpecsModalComponent,\r\n    EditRemarkModalComponent,\r\n    EditSpecModalComponent\r\n  ]\r\n})\r\nexport class ECommerceModule {}\r\n","// tslint:disable:no-string-literal\r\nimport { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ProductsService } from '../_services';\r\nimport {\r\n  GroupingState,\r\n  PaginatorState,\r\n  SortState,\r\n  IDeleteAction,\r\n  IDeleteSelectedAction,\r\n  IFetchSelectedAction,\r\n  IUpdateStatusForSelectedAction,\r\n  ISortView,\r\n  IFilterView,\r\n  IGroupingView,\r\n  ISearchView,\r\n} from '../../../_metronic/shared/crud-table';\r\nimport { DeleteProductModalComponent } from './components/delete-product-modal/delete-product-modal.component';\r\nimport { DeleteProductsModalComponent } from './components/delete-products-modal/delete-products-modal.component';\r\nimport { UpdateProductsStatusModalComponent } from './components/update-products-status-modal/update-products-status-modal.component';\r\nimport { FetchProductsModalComponent } from './components/fetch-products-modal/fetch-products-modal.component';\r\n\r\n@Component({\r\n  selector: 'app-products',\r\n  templateUrl: './products.component.html',\r\n  styleUrls: ['./products.component.scss'],\r\n})\r\nexport class ProductsComponent\r\n  implements\r\n  OnInit,\r\n  OnDestroy,\r\n  IDeleteAction,\r\n  IDeleteSelectedAction,\r\n  IFetchSelectedAction,\r\n  IUpdateStatusForSelectedAction,\r\n  ISortView,\r\n  IFilterView,\r\n  IGroupingView,\r\n  ISearchView,\r\n  IFilterView {\r\n  paginator: PaginatorState;\r\n  sorting: SortState;\r\n  grouping: GroupingState;\r\n  isLoading: boolean;\r\n  filterGroup: FormGroup;\r\n  searchGroup: FormGroup;\r\n  private subscriptions: Subscription[] = []; // Read more: => https://brianflove.com/2016/12/11/anguar-2-unsubscribe-observables/\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private modalService: NgbModal,\r\n    public productsService: ProductsService\r\n  ) { }\r\n\r\n  // angular lifecircle hooks\r\n  ngOnInit(): void {\r\n    this.filterForm();\r\n    this.searchForm();\r\n    this.productsService.fetch();\r\n    const sb = this.productsService.isLoading$.subscribe(res => this.isLoading = res);\r\n    this.subscriptions.push(sb);\r\n    this.grouping = this.productsService.grouping;\r\n    this.paginator = this.productsService.paginator;\r\n    this.sorting = this.productsService.sorting;\r\n    this.productsService.fetch();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscriptions.forEach((sb) => sb.unsubscribe());\r\n  }\r\n\r\n  // filtration\r\n  filterForm() {\r\n    this.filterGroup = this.fb.group({\r\n      status: [''],\r\n      condition: [''],\r\n      searchTerm: [''],\r\n    });\r\n    this.subscriptions.push(\r\n      this.filterGroup.controls.status.valueChanges.subscribe(() =>\r\n        this.filter()\r\n      )\r\n    );\r\n    this.subscriptions.push(\r\n      this.filterGroup.controls.condition.valueChanges.subscribe(() => this.filter())\r\n    );\r\n  }\r\n\r\n  filter() {\r\n    const filter = {};\r\n    const status = this.filterGroup.get('status').value;\r\n    if (status) {\r\n      filter['status'] = status;\r\n    }\r\n\r\n    const condition = this.filterGroup.get('condition').value;\r\n    if (condition) {\r\n      filter['condition'] = condition;\r\n    }\r\n    this.productsService.patchState({ filter });\r\n  }\r\n\r\n  // search\r\n  searchForm() {\r\n    this.searchGroup = this.fb.group({\r\n      searchTerm: [''],\r\n    });\r\n    const searchEvent = this.searchGroup.controls.searchTerm.valueChanges\r\n      .pipe(\r\n        /*\r\n  The user can type quite quickly in the input box, and that could trigger a lot of server requests. With this operator,\r\n  we are limiting the amount of server requests emitted to a maximum of one every 150ms\r\n  */\r\n        debounceTime(150),\r\n        distinctUntilChanged()\r\n      )\r\n      .subscribe((val) => this.search(val));\r\n    this.subscriptions.push(searchEvent);\r\n  }\r\n\r\n  search(searchTerm: string) {\r\n    this.productsService.patchState({ searchTerm });\r\n  }\r\n\r\n  // sorting\r\n  sort(column: string) {\r\n    const sorting = this.sorting;\r\n    const isActiveColumn = sorting.column === column;\r\n    if (!isActiveColumn) {\r\n      sorting.column = column;\r\n      sorting.direction = 'asc';\r\n    } else {\r\n      sorting.direction = sorting.direction === 'asc' ? 'desc' : 'asc';\r\n    }\r\n    this.productsService.patchState({ sorting });\r\n  }\r\n\r\n  // pagination\r\n  paginate(paginator: PaginatorState) {\r\n    this.productsService.patchState({ paginator });\r\n  }\r\n  // actions\r\n  delete(id: number) {\r\n    const modalRef = this.modalService.open(DeleteProductModalComponent);\r\n    modalRef.componentInstance.id = id;\r\n    modalRef.result.then(\r\n      () => this.productsService.fetch(),\r\n      () => { }\r\n    );\r\n  }\r\n\r\n  deleteSelected() {\r\n    const modalRef = this.modalService.open(DeleteProductsModalComponent);\r\n    modalRef.componentInstance.ids = this.grouping.getSelectedRows();\r\n    modalRef.result.then(\r\n      () => this.productsService.fetch(),\r\n      () => { }\r\n    );\r\n  }\r\n\r\n  updateStatusForSelected() {\r\n    const modalRef = this.modalService.open(\r\n      UpdateProductsStatusModalComponent\r\n    );\r\n    modalRef.componentInstance.ids = this.grouping.getSelectedRows();\r\n    modalRef.result.then(\r\n      () => this.productsService.fetch(),\r\n      () => { }\r\n    );\r\n  }\r\n\r\n  fetchSelected() {\r\n    const modalRef = this.modalService.open(FetchProductsModalComponent);\r\n    modalRef.componentInstance.ids = this.grouping.getSelectedRows();\r\n    modalRef.result.then(\r\n      () => this.productsService.fetch(),\r\n      () => { }\r\n    );\r\n  }\r\n}\r\n","<div class=\"card card-custom gutter-b\">\r\n  <div class=\"card-header\">\r\n    <div class=\"card-title\">\r\n      <h3 class=\"card-label\">Products list</h3>\r\n    </div>\r\n    <div class=\"card-toolbar\">\r\n      <a\r\n        type=\"button\"\r\n        class=\"btn btn-primary\"\r\n        routerLink=\"/ecommerce/product/add\"\r\n        >New Product</a\r\n      >\r\n    </div>\r\n  </div>\r\n  <div class=\"card-body\">\r\n    <!-- begin: Filtration form -->\r\n    <div class=\"form form-label-right\">\r\n      <div class=\"form-group row\">\r\n        <div class=\"col-lg-4\">\r\n          <div class=\"row\" [formGroup]=\"filterGroup\">\r\n            <div class=\"col-lg-6\">\r\n              <select\r\n                class=\"form-control\"\r\n                name=\"status\"\r\n                placeholder=\"Filter by Status\"\r\n                formControlName=\"status\"\r\n              >\r\n                <option value=\"\">All</option>\r\n                <option value=\"1\">Selling</option>\r\n                <option value=\"2\">Sold</option></select\r\n              ><small class=\"form-text text-muted\"\r\n                ><b>Filter</b> by Status</small\r\n              >\r\n            </div>\r\n            <div class=\"col-lg-6\">\r\n              <select\r\n                class=\"form-control\"\r\n                placeholder=\"Filter by Contition\"\r\n                name=\"condition\"\r\n                formControlName=\"condition\"\r\n              >\r\n                <option value=\"\">All</option>\r\n                <option value=\"1\">New</option>\r\n                <option value=\"2\">Used</option></select\r\n              ><small class=\"form-text text-muted\"\r\n                ><b>Filter</b> by Condition</small\r\n              >\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-lg-2\" [formGroup]=\"searchGroup\">\r\n          <input\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            name=\"searchText\"\r\n            placeholder=\"Search\"\r\n            value=\"\"\r\n            formControlName=\"searchTerm\"\r\n          /><small class=\"form-text text-muted\"\r\n            ><b>Search</b> in all fields</small\r\n          >\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- end: Filtration form -->\r\n\r\n    <!-- begin: Grouping -->\r\n    <ng-container *ngIf=\"grouping.getSelectedRowsCount()\">\r\n      <div class=\"form\">\r\n        <div\r\n          class=\"row align-items-center form-group-actions margin-top-20 margin-bottom-20\"\r\n        >\r\n          <div class=\"col-xl-12\">\r\n            <div class=\"form-group form-group-inline\">\r\n              <div class=\"form-label form-label-no-wrap\">\r\n                <label class=\"font-bold font-danger\"\r\n                  ><span\r\n                    >Selected records count:\r\n                    <b>{{ grouping.getSelectedRowsCount() }}</b></span\r\n                  ></label\r\n                >\r\n              </div>\r\n              <div>\r\n                <button\r\n                  type=\"button\"\r\n                  class=\"btn btn-danger font-weight-bolder font-size-sm mr-1\"\r\n                  (click)=\"deleteSelected()\"\r\n                >\r\n                  <i class=\"fa fa-trash\"></i> Delete All</button\r\n                >&nbsp;\r\n                <button\r\n                  type=\"button\"\r\n                  class=\"btn btn-light-primary font-weight-bolder font-size-sm mr-1\"\r\n                  (click)=\"fetchSelected()\"\r\n                >\r\n                  <i class=\"fa fa-stream\"></i> Fetch Selected</button\r\n                >&nbsp;\r\n                <button\r\n                  type=\"button\"\r\n                  class=\"btn btn-light-primary font-weight-bolder font-size-sm\"\r\n                  (click)=\"updateStatusForSelected()\"\r\n                >\r\n                  <i class=\"fa fa-sync-alt\"></i> Update Status\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </ng-container>\r\n    <!-- end: Grouping -->\r\n    <!-- begin:Table -->\r\n    <div class=\"table-responsive angular-bootstrap-table\">\r\n      <table\r\n        class=\"table table-head-custom table-vertical-center overflow-hidden\"\r\n      >\r\n        <thead>\r\n          <th class=\"selection-cell-header\" data-row-selection=\"true\">\r\n            <label class=\"checkbox checkbox-single\"\r\n              ><input\r\n                type=\"checkbox\"\r\n                (click)=\"grouping.selectAllRows()\"\r\n                [checked]=\"grouping.checkAreAllRowsSelected()\" /><span></span\r\n            ></label>\r\n          </th>\r\n          <th>\r\n            VIN CODE (ID)\r\n            <app-sort-icon\r\n              column=\"VINCode\"\r\n              [activeColumn]=\"sorting.column\"\r\n              [activeDirection]=\"sorting.direction\"\r\n              (sort)=\"sort($event)\"\r\n            ></app-sort-icon>\r\n          </th>\r\n          <th>\r\n            MANUFACTURE\r\n            <app-sort-icon\r\n              column=\"manufacture\"\r\n              [activeColumn]=\"sorting.column\"\r\n              [activeDirection]=\"sorting.direction\"\r\n              (sort)=\"sort($event)\"\r\n            ></app-sort-icon>\r\n          </th>\r\n          <th>\r\n            MODEL\r\n            <app-sort-icon\r\n              column=\"model\"\r\n              [activeColumn]=\"sorting.column\"\r\n              [activeDirection]=\"sorting.direction\"\r\n              (sort)=\"sort($event)\"\r\n            ></app-sort-icon>\r\n          </th>\r\n          <th>\r\n            YEAR\r\n            <app-sort-icon\r\n              column=\"modelYear\"\r\n              [activeColumn]=\"sorting.column\"\r\n              [activeDirection]=\"sorting.direction\"\r\n              (sort)=\"sort($event)\"\r\n            ></app-sort-icon>\r\n          </th>\r\n          <th>\r\n            COLOR\r\n            <app-sort-icon\r\n              column=\"color\"\r\n              [activeColumn]=\"sorting.column\"\r\n              [activeDirection]=\"sorting.direction\"\r\n              (sort)=\"sort($event)\"\r\n            ></app-sort-icon>\r\n          </th>\r\n          <th>\r\n            PRICE\r\n            <app-sort-icon\r\n              column=\"price\"\r\n              [activeColumn]=\"sorting.column\"\r\n              [activeDirection]=\"sorting.direction\"\r\n              (sort)=\"sort($event)\"\r\n            ></app-sort-icon>\r\n          </th>\r\n          <th>\r\n            STATUS\r\n            <app-sort-icon\r\n              column=\"status\"\r\n              [activeColumn]=\"sorting.column\"\r\n              [activeDirection]=\"sorting.direction\"\r\n              (sort)=\"sort($event)\"\r\n            ></app-sort-icon>\r\n          </th>\r\n          <th>\r\n            CONDITION\r\n            <app-sort-icon\r\n              column=\"condition\"\r\n              [activeColumn]=\"sorting.column\"\r\n              [activeDirection]=\"sorting.direction\"\r\n              (sort)=\"sort($event)\"\r\n            ></app-sort-icon>\r\n          </th>\r\n          <th>ACTIONS</th>\r\n        </thead>\r\n        <tbody>\r\n          <tr *ngFor=\"let product of productsService.items$ | async\">\r\n            <td class=\"selection-cell\">\r\n              <label class=\"checkbox checkbox-single\"\r\n                ><input\r\n                  type=\"checkbox\"\r\n                  (click)=\"grouping.selectRow(product.id)\"\r\n                  [checked]=\"grouping.isRowSelected(product.id)\"\r\n                />\r\n                <span></span>\r\n              </label>\r\n            </td>\r\n            <td>{{ product.VINCode }}</td>\r\n            <td>{{ product.manufacture }}</td>\r\n            <td>{{ product.model }}</td>\r\n            <td>{{ product.modelYear }}</td>\r\n            <td>\r\n              <span [style.color]=\"product.color\">{{ product.color }}</span>\r\n            </td>\r\n            <td>$ {{ product.price }}</td>\r\n            <td>\r\n              <span\r\n                class=\"label label-lg label-inline\"\r\n                [class.label-light-success]=\"product.status === 1\"\r\n                [class.label-light-primary]=\"product.status === 2\"\r\n              >\r\n                <ng-container *ngIf=\"product.status === 1\"\r\n                  >Selling</ng-container\r\n                >\r\n                <ng-container *ngIf=\"product.status === 2\">Sold</ng-container>\r\n              </span>\r\n            </td>\r\n            <td>\r\n              <ng-container *ngIf=\"product.condition === 1\">NEW</ng-container>\r\n              <ng-container *ngIf=\"product.condition === 2\">USED</ng-container>\r\n            </td>\r\n            <td>\r\n              <a\r\n                title=\"Edit product\"\r\n                class=\"btn btn-icon btn-light btn-hover-primary btn-sm mx-3\"\r\n                [routerLink]=\"'/ecommerce/product/edit/' + product.id\"\r\n              >\r\n                <span\r\n                  [inlineSVG]=\"\r\n                    './assets/media/svg/icons/Communication/Write.svg'\r\n                  \"\r\n                  cacheSVG=\"true\"\r\n                  class=\"svg-icon svg-icon-md svg-icon-primary\"\r\n                >\r\n                </span>\r\n              </a>\r\n              <a\r\n                title=\"Delete product\"\r\n                class=\"btn btn-icon btn-light btn-hover-danger btn-sm\"\r\n                (click)=\"delete(product.id)\"\r\n              >\r\n                <span\r\n                  [inlineSVG]=\"'./assets/media/svg/icons/General/Trash.svg'\"\r\n                  cacheSVG=\"true\"\r\n                  class=\"svg-icon svg-icon-md svg-icon-danger\"\r\n                >\r\n                </span>\r\n              </a>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n    <!-- end: Table -->\r\n    <app-paginator\r\n      class=\"d-flex justify-content-between align-items-center flex-wrap\"\r\n      [paginator]=\"paginator\"\r\n      [isLoading]=\"isLoading\"\r\n      (paginate)=\"paginate($event)\"\r\n    ></app-paginator>\r\n  </div>\r\n</div>\r\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { from, of, Subscription } from 'rxjs';\r\nimport { catchError, delay, finalize, first, tap } from 'rxjs/operators';\r\nimport { Product } from '../../../_models/product.model';\r\nimport { ProductsService } from '../../../_services';\r\n\r\n@Component({\r\n  selector: 'app-fetch-products-modal',\r\n  templateUrl: './fetch-products-modal.component.html',\r\n  styleUrls: ['./fetch-products-modal.component.scss']\r\n})\r\nexport class FetchProductsModalComponent implements OnInit, OnDestroy {\r\n  @Input() ids: number[];\r\n  products: Product[] = [];\r\n  isLoading = false;\r\n  subscriptions: Subscription[] = [];\r\n\r\n  constructor(private productsService: ProductsService, public modal: NgbActiveModal) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loadProducts();\r\n  }\r\n\r\n  loadProducts() {\r\n    const sb = this.productsService.items$.pipe(\r\n      first()\r\n    ).subscribe((res: Product[]) => {\r\n      this.products = res.filter(c => this.ids.indexOf(c.id) > -1);\r\n    });\r\n    this.subscriptions.push(sb);\r\n  }\r\n\r\n  fetchSelected() {\r\n    this.isLoading = true;\r\n    const sb = from([]).pipe( // fake => update to call request method from your server\r\n      delay(1000), // Remove it from your code (just for showing loading)\r\n      tap(() => {}),\r\n      catchError((errorMessage) => {\r\n        this.modal.dismiss(errorMessage);\r\n        return of(errorMessage);\r\n      }),\r\n      finalize(() => {\r\n        this.isLoading = false;\r\n        if (this.modal) {\r\n          this.modal.close();\r\n        }\r\n      })\r\n    ).subscribe();\r\n    this.subscriptions.push(sb);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscriptions.forEach(sb => sb.unsubscribe());\r\n  }\r\n}\r\n","<div class=\"modal-header\">\r\n  <div class=\"modal-title h4\">Fetch selected products</div>\r\n</div>\r\n<div class=\"modal-body overlay overlay-block cursor-default\">\r\n  <ng-container *ngIf=\"isLoading\">\r\n    <div class=\"overlay-layer\">\r\n      <div class=\"spinner spinner-lg spinner-primary\"></div>\r\n    </div>\r\n  </ng-container>\r\n\r\n  <div class=\"table-responsive angular-bootstrap-table\">\r\n    <table class=\"table table-head-custom table-vertical-center overflow-hidden\">\r\n      <thead>\r\n        <th>VIN CODE</th>\r\n        <th>MANUFACTURE</th>\r\n        <th>MODEL</th>\r\n        <th>STATUS</th>\r\n      </thead>\r\n      <tbody>\r\n        <tr *ngFor=\"let product of products\">\r\n          <td>{{product.VINCode}}</td>\r\n          <td>{{product.manufacture}}</td>\r\n          <td>{{product.model}}</td>\r\n          <td>\r\n            <span class=\"label label-lg label-inline\" \r\n              [class.label-light-success]=\"product.status === 1\"\r\n              [class.label-light-primary]=\"product.status === 2\"\r\n            >\r\n              <ng-container *ngIf=\"product.status === 1\">Selling</ng-container>\r\n              <ng-container *ngIf=\"product.status === 2\">Sold</ng-container>\r\n            </span>\r\n          </td>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n\r\n</div>\r\n\r\n<div class=\"modal-footer\">\r\n  <div>\r\n    <button type=\"button\" class=\"btn btn-light btn-elevate mr-3\" (click)=\"modal.dismiss()\">Cancel</button>\r\n    <button type=\"button\" class=\"btn btn-primary btn-elevate\" (click)=\"fetchSelected()\">Fetch</button>\r\n  </div>\r\n</div>","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { of, Subscription } from 'rxjs';\r\nimport { catchError, delay, finalize, first, tap } from 'rxjs/operators';\r\nimport { Product } from '../../../_models/product.model';\r\nimport { ProductsService } from '../../../_services';\r\n\r\n@Component({\r\n  selector: 'app-update-products-status-modal',\r\n  templateUrl: './update-products-status-modal.component.html',\r\n  styleUrls: ['./update-products-status-modal.component.scss']\r\n})\r\nexport class UpdateProductsStatusModalComponent implements OnInit, OnDestroy {\r\n  @Input() ids: number[];\r\n  status = 2;\r\n  products: Product[] = [];\r\n  isLoading = false;\r\n  subscriptions: Subscription[] = [];\r\n\r\n  constructor(private productsService: ProductsService, public modal: NgbActiveModal) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loadProducts();\r\n  }\r\n\r\n  loadProducts() {\r\n    const sb = this.productsService.items$.pipe(\r\n      first()\r\n    ).subscribe((res: Product[]) => {\r\n      this.products = res.filter(c => this.ids.indexOf(c.id) > -1);\r\n    });\r\n    this.subscriptions.push(sb);\r\n  }\r\n\r\n  updateProductsStatus() {\r\n    this.isLoading = true;\r\n    const sb = this.productsService.updateStatusForItems(this.ids, +this.status).pipe(\r\n      delay(1000), // Remove it from your code (just for showing loading)\r\n      tap(() => this.modal.close()),\r\n      catchError((errorMessage) => {\r\n        this.modal.dismiss(errorMessage);\r\n        return of(undefined);\r\n      }),\r\n      finalize(() => {\r\n        this.isLoading = false;\r\n      })\r\n    ).subscribe();\r\n    this.subscriptions.push(sb);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscriptions.forEach(sb => sb.unsubscribe());\r\n  }\r\n}\r\n","<div class=\"modal-header\">\r\n  <div class=\"modal-title h4\">Status update for selected products</div>\r\n</div>\r\n<div class=\"modal-body overlay overlay-block cursor-default\">\r\n  <ng-container *ngIf=\"isLoading\">\r\n    <div class=\"overlay-layer\">\r\n      <div class=\"spinner spinner-lg spinner-primary\"></div>\r\n    </div>\r\n  </ng-container>\r\n\r\n  <div class=\"table-responsive angular-bootstrap-table\">\r\n    <table class=\"table table-head-custom table-vertical-center overflow-hidden\">\r\n      <thead>\r\n        <th>VIN CODE</th>\r\n        <th>MANUFACTURE</th>\r\n        <th>MODEL</th>\r\n        <th>STATUS</th>\r\n      </thead>\r\n      <tbody>\r\n        <tr *ngFor=\"let product of products\">\r\n          <td>{{product.VINCode}}</td>\r\n          <td>{{product.manufacture}}</td>\r\n          <td>{{product.model}}</td>\r\n          <td>\r\n            <span class=\"label label-lg label-inline\" [class.label-light-success]=\"product.status === 1\"\r\n              [class.label-light-primary]=\"product.status === 2\">\r\n              <ng-container *ngIf=\"product.status === 1\">Selling</ng-container>\r\n              <ng-container *ngIf=\"product.status === 2\">Sold</ng-container>\r\n            </span>\r\n          </td>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n\r\n</div>\r\n\r\n<div class=\"form modal-footer\">\r\n  <div class=\"form-group mr-2\">\r\n    <select class=\"form-control\" [(ngModel)]=\"status\" name=\"status\">\r\n      <option value=\"1\">Selling</option>\r\n      <option value=\"2\">Sold</option>\r\n    </select>\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <button type=\"button\" class=\"btn btn-light btn-elevate mr-3\" (click)=\"modal.dismiss()\">Cancel</button>\r\n    <button type=\"button\" class=\"btn btn-primary btn-elevate\" (click)=\"updateProductsStatus()\">Update Status</button>\r\n  </div>\r\n</div>","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { of, Subscription } from 'rxjs';\r\nimport { catchError, delay, finalize, tap } from 'rxjs/operators';\r\nimport { SpecificationsService } from '../../../../_services';\r\n\r\n@Component({\r\n  selector: 'app-delete-spec-modal',\r\n  templateUrl: './delete-spec-modal.component.html',\r\n  styleUrls: ['./delete-spec-modal.component.scss']\r\n})\r\nexport class DeleteSpecModalComponent implements OnInit, OnDestroy {\r\n  @Input() id: number;\r\n  isLoading = false;\r\n  subscriptions: Subscription[] = [];\r\n\r\n  constructor(private specsService: SpecificationsService, public modal: NgbActiveModal) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  deleteSpec() {\r\n    this.isLoading = true;\r\n    const sb = this.specsService.delete(this.id).pipe(\r\n      delay(1000), // Remove it from your code (just for showing loading)\r\n      tap(() => this.modal.close()),\r\n      catchError((err) => {\r\n        this.modal.dismiss(err);\r\n        return of(undefined);\r\n      }),\r\n      finalize(() => {\r\n        this.isLoading = false;\r\n      })\r\n    ).subscribe();\r\n    this.subscriptions.push(sb);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscriptions.forEach(sb => sb.unsubscribe());\r\n  }\r\n}\r\n","<ng-container *ngIf=\"isLoading\">\r\n  <div class=\"progress progress-modal\">\r\n    <div class=\"progress-bar progress-bar-striped progress-bar-animated bg-primary\" role=\"progressbar\"\r\n      style=\"width: 100%\" aria-valuenow=\"100\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\r\n  </div>\r\n</ng-container>\r\n\r\n<div class=\"modal-header\">\r\n  <div class=\"modal-title h4\">Specification Delete</div>\r\n</div>\r\n<div class=\"modal-body\">\r\n  <ng-container *ngIf=\"isLoading\">\r\n    <span>Specification is deleting...</span>\r\n  </ng-container>\r\n\r\n  <ng-container *ngIf=\"!isLoading\">\r\n    <span>Are you sure to permanently delete this specification?</span>\r\n  </ng-container>\r\n</div>\r\n\r\n<div class=\"modal-footer\">\r\n  <div>\r\n    <button type=\"button\" class=\"btn btn-light btn-elevate mr-1\" (click)=\"modal.dismiss()\">\r\n      Cancel\r\n    </button>&nbsp;\r\n    <button type=\"button\" class=\"btn btn-primary btn-elevate\" (click)=\"deleteSpec()\">\r\n      Delete\r\n    </button>\r\n  </div>\r\n</div>","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { of, Subscription } from 'rxjs';\r\nimport { catchError, delay, finalize, tap } from 'rxjs/operators';\r\nimport { CustomersService } from '../../../_services';\r\n\r\n@Component({\r\n  selector: 'app-delete-customers-modal',\r\n  templateUrl: './delete-customers-modal.component.html',\r\n  styleUrls: ['./delete-customers-modal.component.scss']\r\n})\r\nexport class DeleteCustomersModalComponent implements OnInit, OnDestroy {\r\n  @Input() ids: number[];\r\n  isLoading = false;\r\n  subscriptions: Subscription[] = [];\r\n\r\n  constructor(private customersService: CustomersService, public modal: NgbActiveModal) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  deleteCustomers() {\r\n    this.isLoading = true;\r\n    const sb = this.customersService.deleteItems(this.ids).pipe(\r\n      delay(1000), // Remove it from your code (just for showing loading)\r\n      tap(() => this.modal.close()),\r\n      catchError((errorMessage) => {\r\n        this.modal.dismiss(errorMessage);\r\n        return of(undefined);\r\n      }),\r\n      finalize(() => {\r\n        this.isLoading = false;\r\n      })\r\n    ).subscribe();\r\n    this.subscriptions.push(sb);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscriptions.forEach(sb => sb.unsubscribe());\r\n  }\r\n}\r\n","<ng-container *ngIf=\"isLoading\">\r\n  <div class=\"progress progress-modal\">\r\n    <div class=\"progress-bar progress-bar-striped progress-bar-animated bg-primary\" role=\"progressbar\"\r\n      style=\"width: 100%\" aria-valuenow=\"100\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\r\n  </div>\r\n</ng-container>\r\n\r\n<div class=\"modal-header\">\r\n  <div class=\"modal-title h4\">Customers Delete</div>\r\n</div>\r\n<div class=\"modal-body\">\r\n  <ng-container *ngIf=\"isLoading\">\r\n    <span>Customers are deleting...</span>\r\n  </ng-container>\r\n\r\n  <ng-container *ngIf=\"!isLoading\">\r\n    <span>Are you sure to permanently delete selected customers?</span>\r\n  </ng-container>\r\n</div>\r\n\r\n<div class=\"modal-footer\">\r\n  <div>\r\n    <button type=\"button\" class=\"btn btn-light btn-elevate mr-1\" (click)=\"modal.dismiss()\">\r\n      Cancel\r\n    </button>&nbsp;\r\n    <button type=\"button\" class=\"btn btn-primary btn-elevate\" (click)=\"deleteCustomers()\">\r\n      Delete\r\n    </button>\r\n  </div>\r\n</div>","import { ITableState } from '../../_metronic/shared/crud-table';\r\n\r\nexport function baseFilter(entities: any[], requestObj: ITableState) {\r\n  // Filtration\r\n  let entitiesResult = filterArray(entities, requestObj);\r\n  // Search\r\n  entitiesResult = searchInArray(entitiesResult, requestObj.searchTerm);\r\n\r\n  // Sorting\r\n  // start\r\n  if (requestObj.sorting.column) {\r\n    entitiesResult = sortArray(entitiesResult, requestObj.sorting.column, requestObj.sorting.direction);\r\n  }\r\n  // end\r\n\r\n  // Paginator\r\n  // start\r\n  const totalCount = entitiesResult.length;\r\n  const startPosition = (requestObj.paginator.page - 1) * requestObj.paginator.pageSize;\r\n  const endPosition = startPosition + requestObj.paginator.pageSize;\r\n  entitiesResult = entitiesResult.slice(startPosition, endPosition);\r\n  // end\r\n\r\n  const responseObj = {\r\n    items: entitiesResult,\r\n    total: totalCount\r\n  };\r\n  return responseObj;\r\n}\r\n\r\nexport function sortArray(incomingArray: any[], sortField: string = '', sortOrder: string = 'asc'): any[] {\r\n  if (!sortField) {\r\n    return incomingArray;\r\n  }\r\n\r\n  let result: any[] = [];\r\n  result = incomingArray.sort((a, b) => {\r\n    if (a[sortField] < b[sortField]) {\r\n      return sortOrder === 'asc' ? -1 : 1;\r\n    }\r\n\r\n    if (a[sortField] > b[sortField]) {\r\n      return sortOrder === 'asc' ? 1 : -1;\r\n    }\r\n\r\n    return 0;\r\n  });\r\n  return result;\r\n}\r\n\r\nexport function filterArray(incomingArray: any[], requestObj: ITableState): any[] {\r\n  if (!requestObj || !requestObj.filter) {\r\n    return incomingArray;\r\n  }\r\n\r\n  let result: any[] = incomingArray;\r\n  const filtrationFields = Object.keys(requestObj.filter);\r\n  filtrationFields.forEach((keyName: string) => {\r\n    // tslint:disable-next-line:triple-equals\r\n    result = result.filter(el => el[keyName] == requestObj.filter[keyName]);\r\n  });\r\n  return result;\r\n}\r\n\r\nexport function searchInArray(incomingArray: any[], searchTerm: string = ''): any[] {\r\n  if (!searchTerm) {\r\n    return incomingArray;\r\n  }\r\n\r\n  const acceptableForSearchTypes = { number: 1, string: 2 };\r\n  const result = incomingArray.filter(row => {\r\n    let termIsFoundInRow = false;\r\n    const keys = Object.keys(row).filter(keyName => acceptableForSearchTypes[typeof row[keyName]] && row[keyName]);\r\n    for (const keyName of keys) {\r\n      if (row[keyName].toString().toLowerCase().indexOf(searchTerm) > -1) {\r\n        termIsFoundInRow = true;\r\n        break;\r\n      }\r\n    }\r\n    return termIsFoundInRow;\r\n  });\r\n  return result;\r\n}\r\n","// tslint:disable:no-string-literal\r\nimport { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { CustomersService } from '../_services';\r\nimport {\r\n  GroupingState,\r\n  PaginatorState,\r\n  SortState,\r\n  ICreateAction,\r\n  IEditAction,\r\n  IDeleteAction,\r\n  IDeleteSelectedAction,\r\n  IFetchSelectedAction,\r\n  IUpdateStatusForSelectedAction,\r\n  ISortView,\r\n  IFilterView,\r\n  IGroupingView,\r\n  ISearchView,\r\n} from '../../../_metronic/shared/crud-table';\r\nimport { DeleteCustomerModalComponent } from './components/delete-customer-modal/delete-customer-modal.component';\r\nimport { DeleteCustomersModalComponent } from './components/delete-customers-modal/delete-customers-modal.component';\r\nimport { UpdateCustomersStatusModalComponent } from './components/update-customers-status-modal/update-customers-status-modal.component';\r\nimport { FetchCustomersModalComponent } from './components/fetch-customers-modal/fetch-customers-modal.component';\r\nimport { EditCustomerModalComponent } from './components/edit-customer-modal/edit-customer-modal.component';\r\n\r\n@Component({\r\n  selector: 'app-customers',\r\n  templateUrl: './customers.component.html',\r\n  styleUrls: ['./customers.component.scss'],\r\n})\r\nexport class CustomersComponent\r\n  implements\r\n  OnInit,\r\n  OnDestroy,\r\n  ICreateAction,\r\n  IEditAction,\r\n  IDeleteAction,\r\n  IDeleteSelectedAction,\r\n  IFetchSelectedAction,\r\n  IUpdateStatusForSelectedAction,\r\n  ISortView,\r\n  IFilterView,\r\n  IGroupingView,\r\n  ISearchView,\r\n  IFilterView {\r\n  paginator: PaginatorState;\r\n  sorting: SortState;\r\n  grouping: GroupingState;\r\n  isLoading: boolean;\r\n  filterGroup: FormGroup;\r\n  searchGroup: FormGroup;\r\n  private subscriptions: Subscription[] = []; // Read more: => https://brianflove.com/2016/12/11/anguar-2-unsubscribe-observables/\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private modalService: NgbModal,\r\n    public customerService: CustomersService\r\n  ) { }\r\n\r\n  // angular lifecircle hooks\r\n  ngOnInit(): void {\r\n    this.filterForm();\r\n    this.searchForm();\r\n    this.customerService.fetch();\r\n    this.grouping = this.customerService.grouping;\r\n    this.paginator = this.customerService.paginator;\r\n    this.sorting = this.customerService.sorting;\r\n    const sb = this.customerService.isLoading$.subscribe(res => this.isLoading = res);\r\n    this.subscriptions.push(sb);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscriptions.forEach((sb) => sb.unsubscribe());\r\n  }\r\n\r\n  // filtration\r\n  filterForm() {\r\n    this.filterGroup = this.fb.group({\r\n      status: [''],\r\n      type: [''],\r\n      searchTerm: [''],\r\n    });\r\n    this.subscriptions.push(\r\n      this.filterGroup.controls.status.valueChanges.subscribe(() =>\r\n        this.filter()\r\n      )\r\n    );\r\n    this.subscriptions.push(\r\n      this.filterGroup.controls.type.valueChanges.subscribe(() => this.filter())\r\n    );\r\n  }\r\n\r\n  filter() {\r\n    const filter = {};\r\n    const status = this.filterGroup.get('status').value;\r\n    if (status) {\r\n      filter['status'] = status;\r\n    }\r\n\r\n    const type = this.filterGroup.get('type').value;\r\n    if (type) {\r\n      filter['type'] = type;\r\n    }\r\n    this.customerService.patchState({ filter });\r\n  }\r\n\r\n  // search\r\n  searchForm() {\r\n    this.searchGroup = this.fb.group({\r\n      searchTerm: [''],\r\n    });\r\n    const searchEvent = this.searchGroup.controls.searchTerm.valueChanges\r\n      .pipe(\r\n        /*\r\n      The user can type quite quickly in the input box, and that could trigger a lot of server requests. With this operator,\r\n      we are limiting the amount of server requests emitted to a maximum of one every 150ms\r\n      */\r\n        debounceTime(150),\r\n        distinctUntilChanged()\r\n      )\r\n      .subscribe((val) => this.search(val));\r\n    this.subscriptions.push(searchEvent);\r\n  }\r\n\r\n  search(searchTerm: string) {\r\n    this.customerService.patchState({ searchTerm });\r\n  }\r\n\r\n  // sorting\r\n  sort(column: string) {\r\n    const sorting = this.sorting;\r\n    const isActiveColumn = sorting.column === column;\r\n    if (!isActiveColumn) {\r\n      sorting.column = column;\r\n      sorting.direction = 'asc';\r\n    } else {\r\n      sorting.direction = sorting.direction === 'asc' ? 'desc' : 'asc';\r\n    }\r\n    this.customerService.patchState({ sorting });\r\n  }\r\n\r\n  // pagination\r\n  paginate(paginator: PaginatorState) {\r\n    this.customerService.patchState({ paginator });\r\n  }\r\n\r\n  // form actions\r\n  create() {\r\n    this.edit(undefined);\r\n  }\r\n\r\n  edit(id: number) {\r\n    const modalRef = this.modalService.open(EditCustomerModalComponent, { size: 'xl' });\r\n    modalRef.componentInstance.id = id;\r\n    modalRef.result.then(() =>\r\n      this.customerService.fetch(),\r\n      () => { }\r\n    );\r\n  }\r\n\r\n  delete(id: number) {\r\n    const modalRef = this.modalService.open(DeleteCustomerModalComponent);\r\n    modalRef.componentInstance.id = id;\r\n    modalRef.result.then(() => this.customerService.fetch(), () => { });\r\n  }\r\n\r\n  deleteSelected() {\r\n    const modalRef = this.modalService.open(DeleteCustomersModalComponent);\r\n    modalRef.componentInstance.ids = this.grouping.getSelectedRows();\r\n    modalRef.result.then(() => this.customerService.fetch(), () => { });\r\n  }\r\n\r\n  updateStatusForSelected() {\r\n    const modalRef = this.modalService.open(UpdateCustomersStatusModalComponent);\r\n    modalRef.componentInstance.ids = this.grouping.getSelectedRows();\r\n    modalRef.result.then(() => this.customerService.fetch(), () => { });\r\n  }\r\n\r\n  fetchSelected() {\r\n    const modalRef = this.modalService.open(FetchCustomersModalComponent);\r\n    modalRef.componentInstance.ids = this.grouping.getSelectedRows();\r\n    modalRef.result.then(() => this.customerService.fetch(), () => { });\r\n  }\r\n}\r\n","<div class=\"card card-custom gutter-b\">\r\n  <div class=\"card-header\">\r\n    <div class=\"card-title\">\r\n      <h3 class=\"card-label\">Customers list</h3>\r\n    </div>\r\n    <div class=\"card-toolbar\">\r\n      <button type=\"button\" class=\"btn btn-primary\" (click)=\"create()\">New Customer</button>\r\n    </div>\r\n  </div>\r\n  <div class=\"card-body\">\r\n    <!-- begin: Filtration form -->\r\n    <div class=\"form form-label-right\">\r\n      <div class=\"form-group row\">\r\n        <div class=\"col-lg-4\">\r\n          <div class=\"row\" [formGroup]=\"filterGroup\">\r\n            <div class=\"col-lg-6\">\r\n              <select class=\"form-control\" name=\"status\" placeholder=\"Filter by Status\" formControlName=\"status\">\r\n                <option value=\"\">All</option>\r\n                <option value=\"1\">Susspended</option>\r\n                <option value=\"2\">Active</option>\r\n                <option value=\"3\">Pending</option>\r\n              </select><small class=\"form-text text-muted\"><b>Filter</b> by Status</small>\r\n            </div>\r\n            <div class=\"col-lg-6\">\r\n              <select class=\"form-control\" placeholder=\"Filter by Type\" name=\"type\" formControlName=\"type\">\r\n                <option value=\"\">All</option>\r\n                <option value=\"1\">Business</option>\r\n                <option value=\"2\">Individual</option>\r\n              </select><small class=\"form-text text-muted\"><b>Filter</b> by Type</small>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-lg-2\" [formGroup]=\"searchGroup\">\r\n          <input type=\"text\" class=\"form-control\" name=\"searchText\" placeholder=\"Search\" value=\"\"\r\n            formControlName=\"searchTerm\" /><small class=\"form-text text-muted\"><b>Search</b> in all fields</small>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- end: Filtration form -->\r\n\r\n    <!-- begin: Grouping -->\r\n    <ng-container *ngIf=\"grouping.getSelectedRowsCount()\">\r\n      <div class=\"form\">\r\n        <div class=\"row align-items-center form-group-actions margin-top-20 margin-bottom-20\">\r\n          <div class=\"col-xl-12\">\r\n            <div class=\"form-group form-group-inline\">\r\n              <div class=\"form-label form-label-no-wrap\">\r\n                <label class=\"font-bold font-danger\"><span>Selected records count:\r\n                    <b>{{ grouping.getSelectedRowsCount() }}</b></span></label>\r\n              </div>\r\n              <div>\r\n                <button type=\"button\" class=\"btn btn-danger font-weight-bolder font-size-sm mr-1\"\r\n                  (click)=\"deleteSelected()\">\r\n                  <i class=\"fa fa-trash\"></i> Delete All\r\n                </button>&nbsp;\r\n                <button type=\"button\" class=\"btn btn-light-primary font-weight-bolder font-size-sm mr-1\"\r\n                  (click)=\"fetchSelected()\">\r\n                  <i class=\"fa fa-stream\"></i> Fetch Selected\r\n                </button>&nbsp;\r\n                <button type=\"button\" class=\"btn btn-light-primary font-weight-bolder font-size-sm mr-1\"\r\n                  (click)=\"updateStatusForSelected()\">\r\n                  <i class=\"fa fa-sync-alt\"></i> Update Status\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </ng-container>\r\n    <!-- end: Grouping -->\r\n\r\n    <!-- begin:Table -->\r\n    <div class=\"table-responsive angular-bootstrap-table\">\r\n      <table class=\"table table-head-custom table-vertical-center overflow-hidden\">\r\n        <thead>\r\n          <th class=\"selection-cell-header\" data-row-selection=\"true\">\r\n            <label class=\"checkbox checkbox-single\"><input type=\"checkbox\" (click)=\"grouping.selectAllRows()\"\r\n                [checked]=\"grouping.checkAreAllRowsSelected()\" /><span></span></label>\r\n          </th>\r\n          <th>\r\n            ID\r\n            <app-sort-icon column=\"id\" [activeColumn]=\"sorting.column\" [activeDirection]=\"sorting.direction\"\r\n              (sort)=\"sort($event)\"></app-sort-icon>\r\n          </th>\r\n          <th>\r\n            FIRSTNAME\r\n            <app-sort-icon column=\"firstName\" [activeColumn]=\"sorting.column\" [activeDirection]=\"sorting.direction\"\r\n              (sort)=\"sort($event)\"></app-sort-icon>\r\n          </th>\r\n          <th>\r\n            LASTNAME\r\n            <app-sort-icon column=\"lastName\" [activeColumn]=\"sorting.column\" [activeDirection]=\"sorting.direction\"\r\n              (sort)=\"sort($event)\"></app-sort-icon>\r\n          </th>\r\n          <th>\r\n            EMAIL\r\n            <app-sort-icon column=\"email\" [activeColumn]=\"sorting.column\" [activeDirection]=\"sorting.direction\"\r\n              (sort)=\"sort($event)\"></app-sort-icon>\r\n          </th>\r\n          <th>\r\n            GENDER\r\n            <app-sort-icon column=\"gender\" [activeColumn]=\"sorting.column\" [activeDirection]=\"sorting.direction\"\r\n              (sort)=\"sort($event)\"></app-sort-icon>\r\n          </th>\r\n          <th>\r\n            STATUS\r\n            <app-sort-icon column=\"status\" [activeColumn]=\"sorting.column\" [activeDirection]=\"sorting.direction\"\r\n              (sort)=\"sort($event)\"></app-sort-icon>\r\n          </th>\r\n          <th>\r\n            TYPE\r\n            <app-sort-icon column=\"type\" [activeColumn]=\"sorting.column\" [activeDirection]=\"sorting.direction\"\r\n              (sort)=\"sort($event)\"></app-sort-icon>\r\n          </th>\r\n          <th>ACTIONS</th>\r\n        </thead>\r\n        <tbody>\r\n          <tr *ngFor=\"let customer of customerService.items$ | async\">\r\n            <td class=\"selection-cell\">\r\n              <label class=\"checkbox checkbox-single\"><input type=\"checkbox\" (click)=\"grouping.selectRow(customer.id)\"\r\n                  [checked]=\"grouping.isRowSelected(customer.id)\" />\r\n                <span></span>\r\n              </label>\r\n            </td>\r\n            <td>{{ customer.id }}</td>\r\n            <td>{{ customer.firstName }}</td>\r\n            <td>{{ customer.lastName }}</td>\r\n            <td>{{ customer.email }}</td>\r\n            <td>{{ customer.gender }}</td>\r\n            <td>\r\n              <span class=\"label label-lg label-inline\" [class.label-light-danger]=\"customer.status === 1\"\r\n                [class.label-light-success]=\"customer.status === 2\" [class.label-light-primary]=\"customer.status === 3\">\r\n                <ng-container *ngIf=\"customer.status === 1\">Suspended</ng-container>\r\n                <ng-container *ngIf=\"customer.status === 2\">Active</ng-container>\r\n                <ng-container *ngIf=\"customer.status === 3\">Pending</ng-container>\r\n              </span>\r\n            </td>\r\n            <td>\r\n              <span class=\"label label-dot label-primary mr-2\" [class.label-success]=\"customer.type === 1\"\r\n                [class.label-primary]=\"customer.type === 2\"></span>&nbsp;<span class=\"font-bold font-primary\">\r\n                <ng-container *ngIf=\"customer.type === 1\">Business</ng-container>\r\n                <ng-container *ngIf=\"customer.type === 2\">Individual</ng-container>\r\n              </span>\r\n            </td>\r\n            <td>\r\n\r\n              <a title=\"Edit customer\" class=\"btn btn-icon btn-light btn-hover-primary btn-sm mx-3\"\r\n                (click)=\"edit(customer.id)\">\r\n                <span [inlineSVG]=\"'./assets/media/svg/icons/Communication/Write.svg'\" cacheSVG=\"true\"\r\n                  class=\"svg-icon svg-icon-md svg-icon-primary\">\r\n                </span>\r\n              </a>\r\n\r\n              <a title=\"Delete customer\" class=\"btn btn-icon btn-light btn-hover-danger btn-sm\"\r\n                (click)=\"delete(customer.id)\">\r\n                <span [inlineSVG]=\"'./assets/media/svg/icons/General/Trash.svg'\" cacheSVG=\"true\"\r\n                  class=\"svg-icon svg-icon-md svg-icon-danger\">\r\n                </span>\r\n              </a>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n    <!-- end: Table -->\r\n    <app-paginator class=\"d-flex justify-content-between align-items-center flex-wrap\" [paginator]=\"paginator\"\r\n      [isLoading]=\"isLoading\" (paginate)=\"paginate($event)\"></app-paginator>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-e-commerce',\r\n  templateUrl: './e-commerce.component.html',\r\n})\r\nexport class ECommerceComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n","<router-outlet></router-outlet>\r\n","import { Component, OnInit, Input, OnDestroy } from '@angular/core';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { of, Subscription } from 'rxjs';\r\nimport { catchError, delay, finalize, tap } from 'rxjs/operators';\r\nimport { CustomersService } from '../../../_services';\r\n\r\n@Component({\r\n  selector: 'app-delete-customer-modal',\r\n  templateUrl: './delete-customer-modal.component.html',\r\n  styleUrls: ['./delete-customer-modal.component.scss']\r\n})\r\nexport class DeleteCustomerModalComponent implements OnInit, OnDestroy {\r\n  @Input() id: number;\r\n  isLoading = false;\r\n  subscriptions: Subscription[] = [];\r\n\r\n  constructor(private customersService: CustomersService, public modal: NgbActiveModal) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  deleteCustomer() {\r\n    this.isLoading = true;\r\n    const sb = this.customersService.delete(this.id).pipe(\r\n      delay(1000), // Remove it from your code (just for showing loading)\r\n      tap(() => this.modal.close()),\r\n      catchError((err) => {\r\n        this.modal.dismiss(err);\r\n        return of(undefined);\r\n      }),\r\n      finalize(() => {\r\n        this.isLoading = false;\r\n      })\r\n    ).subscribe();\r\n    this.subscriptions.push(sb);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscriptions.forEach(sb => sb.unsubscribe());\r\n  }\r\n}\r\n","<ng-container *ngIf=\"isLoading\">\r\n  <div class=\"progress progress-modal\">\r\n    <div class=\"progress-bar progress-bar-striped progress-bar-animated bg-primary\" role=\"progressbar\"\r\n      style=\"width: 100%\" aria-valuenow=\"100\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\r\n  </div>\r\n</ng-container>\r\n\r\n<div class=\"modal-header\">\r\n  <div class=\"modal-title h4\">Customer Delete</div>\r\n</div>\r\n<div class=\"modal-body\">\r\n  <ng-container *ngIf=\"isLoading\">\r\n    <span>Customer is deleting...</span>\r\n  </ng-container>\r\n\r\n  <ng-container *ngIf=\"!isLoading\">\r\n    <span>Are you sure to permanently delete this customer?</span>\r\n  </ng-container>\r\n</div>\r\n\r\n<div class=\"modal-footer\">\r\n  <div>\r\n    <button type=\"button\" class=\"btn btn-light btn-elevate mr-1\" (click)=\"modal.dismiss()\">\r\n      Cancel\r\n    </button>&nbsp;\r\n    <button type=\"button\" class=\"btn btn-primary btn-elevate\" (click)=\"deleteCustomer()\">\r\n      Delete\r\n    </button>\r\n  </div>\r\n</div>","import { Injectable, OnDestroy, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, forkJoin, Observable } from 'rxjs';\r\nimport { exhaustMap, map } from 'rxjs/operators';\r\nimport { TableService, TableResponseModel, ITableState, BaseModel, PaginatorState, SortState, GroupingState } from '../../../../_metronic/shared/crud-table';\r\nimport { Customer } from '../../_models/customer.model';\r\nimport { baseFilter } from '../../../../_fake/fake-helpers/http-extenstions';\r\nimport { environment } from '../../../../../environments/environment';\r\nimport { Router } from '@angular/router';\r\n\r\nconst DEFAULT_STATE: ITableState = {\r\n  filter: {},\r\n  paginator: new PaginatorState(),\r\n  sorting: new SortState(),\r\n  searchTerm: '',\r\n  grouping: new GroupingState(),\r\n  entityId: undefined\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CustomersService extends TableService<Customer> implements OnDestroy {\r\n  API_URL = `${environment.apiUrl}/customers`;\r\n  constructor(@Inject(HttpClient) http) {\r\n    super(http);\r\n  }\r\n\r\n  // READ\r\n  find(tableState: ITableState): Observable<TableResponseModel<Customer>> {\r\n    return this.http.get<Customer[]>(this.API_URL).pipe(\r\n      map((response: Customer[]) => {\r\n        const filteredResult = baseFilter(response, tableState);\r\n        const result: TableResponseModel<Customer> = {\r\n          items: filteredResult.items,\r\n          total: filteredResult.total\r\n        };\r\n        return result;\r\n      })\r\n    );\r\n  }\r\n\r\n  deleteItems(ids: number[] = []): Observable<any> {\r\n    const tasks$ = [];\r\n    ids.forEach(id => {\r\n      tasks$.push(this.delete(id));\r\n    });\r\n    return forkJoin(tasks$);\r\n  }\r\n\r\n  updateStatusForItems(ids: number[], status: number): Observable<any> {\r\n    return this.http.get<Customer[]>(this.API_URL).pipe(\r\n      map((customers: Customer[]) => {\r\n        return customers.filter(c => ids.indexOf(c.id) > -1).map(c => {\r\n          c.status = status;\r\n          return c;\r\n        });\r\n      }),\r\n      exhaustMap((customers: Customer[]) => {\r\n        const tasks$ = [];\r\n        customers.forEach(customer => {\r\n          tasks$.push(this.update(customer));\r\n        });\r\n        return forkJoin(tasks$);\r\n      })\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscriptions.forEach(sb => sb.unsubscribe());\r\n  }\r\n}\r\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { of, Subscription } from 'rxjs';\r\nimport { catchError, delay, finalize, tap } from 'rxjs/operators';\r\nimport { ProductsService } from '../../../_services';\r\n\r\n@Component({\r\n  selector: 'app-delete-product-modal',\r\n  templateUrl: './delete-product-modal.component.html',\r\n  styleUrls: ['./delete-product-modal.component.scss']\r\n})\r\nexport class DeleteProductModalComponent implements OnInit, OnDestroy {\r\n\r\n  @Input() id: number;\r\n  isLoading = false;\r\n  subscriptions: Subscription[] = [];\r\n\r\n  constructor(private productsService: ProductsService, public modal: NgbActiveModal) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  deleteProduct() {\r\n    this.isLoading = true;\r\n    const sb = this.productsService.delete(this.id).pipe(\r\n      delay(1000), // Remove it from your code (just for showing loading)\r\n      tap(() => this.modal.close()),\r\n      catchError((err) => {\r\n        this.modal.dismiss(err);\r\n        return of(undefined);\r\n      }),\r\n      finalize(() => {\r\n        this.isLoading = false;\r\n      })\r\n    ).subscribe();\r\n    this.subscriptions.push(sb);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscriptions.forEach(sb => sb.unsubscribe());\r\n  }\r\n}\r\n","<ng-container *ngIf=\"isLoading\">\r\n  <div class=\"progress progress-modal\">\r\n    <div class=\"progress-bar progress-bar-striped progress-bar-animated bg-primary\" role=\"progressbar\"\r\n      style=\"width: 100%\" aria-valuenow=\"100\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\r\n  </div>\r\n</ng-container>\r\n\r\n<div class=\"modal-header\">\r\n  <div class=\"modal-title h4\">Product Delete</div>\r\n</div>\r\n<div class=\"modal-body\">\r\n  <ng-container *ngIf=\"isLoading\">\r\n    <span>Product is deleting...</span>\r\n  </ng-container>\r\n\r\n  <ng-container *ngIf=\"!isLoading\">\r\n    <span>Are you sure to permanently delete this product?</span>\r\n  </ng-container>\r\n</div>\r\n\r\n<div class=\"modal-footer\">\r\n  <div>\r\n    <button type=\"button\" class=\"btn btn-light btn-elevate mr-1\" (click)=\"modal.dismiss()\">\r\n      Cancel\r\n    </button>&nbsp;\r\n    <button type=\"button\" class=\"btn btn-primary btn-elevate\" (click)=\"deleteProduct()\">\r\n      Delete\r\n    </button>\r\n  </div>\r\n</div>","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Subscription } from 'rxjs';\r\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\r\nimport {\r\n  GroupingState,\r\n  ICreateAction,\r\n  IDeleteAction,\r\n  IDeleteSelectedAction,\r\n  IEditAction,\r\n  IFetchSelectedAction,\r\n  IGroupingView,\r\n  ISearchView,\r\n  ISortView,\r\n  PaginatorState,\r\n  SortState,\r\n} from '../../../../../_metronic/shared/crud-table';\r\nimport { RemarksService } from '../../../_services';\r\nimport { DeleteRemarkModalComponent } from './delete-remark-modal/delete-remark-modal.component';\r\nimport { DeleteRemarksModalComponent } from './delete-remarks-modal/delete-remarks-modal.component';\r\nimport { EditRemarkModalComponent } from './edit-remark-modal/edit-remark-modal.component';\r\nimport { FetchRemarksModalComponent } from './fetch-remarks-modal/fetch-remarks-modal.component';\r\n\r\n@Component({\r\n  selector: 'app-remarks',\r\n  templateUrl: './remarks.component.html',\r\n  styleUrls: ['./remarks.component.scss'],\r\n})\r\nexport class RemarksComponent\r\n  implements\r\n    OnInit,\r\n    OnDestroy,\r\n    IDeleteAction,\r\n    IDeleteSelectedAction,\r\n    IFetchSelectedAction,\r\n    ISortView,\r\n    IGroupingView,\r\n    ISearchView,\r\n    IEditAction,\r\n    ICreateAction {\r\n  @Input() productId: number;\r\n  paginator: PaginatorState;\r\n  sorting: SortState;\r\n  grouping: GroupingState;\r\n  isLoading: boolean;\r\n  searchGroup: FormGroup;\r\n  private subscriptions: Subscription[] = [];\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private modalService: NgbModal,\r\n    public remarksService: RemarksService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.searchForm();\r\n    const sb = this.remarksService.isLoading$.subscribe(\r\n      (res) => (this.isLoading = res)\r\n    );\r\n    this.subscriptions.push(sb);\r\n    this.remarksService.patchState({ entityId: this.productId });\r\n    this.grouping = this.remarksService.grouping;\r\n    this.paginator = this.remarksService.paginator;\r\n    this.sorting = this.remarksService.sorting;\r\n    this.remarksService.fetch();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscriptions.forEach((sb) => sb.unsubscribe());\r\n  }\r\n  //\r\n  searchForm() {\r\n    this.searchGroup = this.fb.group({\r\n      searchTerm: [''],\r\n    });\r\n    const searchEvent = this.searchGroup.controls.searchTerm.valueChanges\r\n      .pipe(\r\n        /*\r\n  The user can type quite quickly in the input box, and that could trigger a lot of server requests. With this operator,\r\n  we are limiting the amount of server requests emitted to a maximum of one every 150ms\r\n  */\r\n        debounceTime(150),\r\n        distinctUntilChanged()\r\n      )\r\n      .subscribe((val) => this.search(val));\r\n    this.subscriptions.push(searchEvent);\r\n  }\r\n\r\n  search(searchTerm: string) {\r\n    this.remarksService.patchState({ searchTerm });\r\n  }\r\n  // sorting\r\n  sort(column: string) {\r\n    const sorting = this.sorting;\r\n    const isActiveColumn = sorting.column === column;\r\n    if (!isActiveColumn) {\r\n      sorting.column = column;\r\n      sorting.direction = 'asc';\r\n    } else {\r\n      sorting.direction = sorting.direction === 'asc' ? 'desc' : 'asc';\r\n    }\r\n    this.remarksService.patchState({ sorting });\r\n  }\r\n  // pagination\r\n  paginate(paginator: PaginatorState) {\r\n    this.remarksService.patchState({ paginator });\r\n  }\r\n  // actions\r\n  delete(id: number) {\r\n    const modalRef = this.modalService.open(DeleteRemarkModalComponent);\r\n    modalRef.componentInstance.id = id;\r\n    modalRef.result.then(\r\n      () => this.remarksService.fetch(),\r\n      () => {}\r\n    );\r\n  }\r\n\r\n  deleteSelected() {\r\n    const modalRef = this.modalService.open(DeleteRemarksModalComponent);\r\n    modalRef.componentInstance.ids = this.grouping.getSelectedRows();\r\n    modalRef.result.then(\r\n      () => this.remarksService.fetch(),\r\n      () => {}\r\n    );\r\n  }\r\n\r\n  fetchSelected() {\r\n    const modalRef = this.modalService.open(FetchRemarksModalComponent);\r\n    modalRef.componentInstance.ids = this.grouping.getSelectedRows();\r\n    modalRef.result.then(\r\n      () => this.remarksService.fetch(),\r\n      () => {}\r\n    );\r\n  }\r\n\r\n  edit(id: number): void {\r\n    const modalRef = this.modalService.open(EditRemarkModalComponent);\r\n    modalRef.componentInstance.id = id;\r\n    modalRef.componentInstance.productId = this.productId;\r\n    modalRef.result.then(() =>\r\n      this.remarksService.fetch(),\r\n      () => {}\r\n    );\r\n  }\r\n\r\n  create(): void {\r\n    this.edit(undefined);\r\n  }\r\n}\r\n","<div class=\"mt-5\">\r\n  <!-- begin: Filtration form -->\r\n  <div class=\"form margin-b-30\">\r\n    <div class=\"form-filtration\">\r\n      <div class=\"row align-items-center\">\r\n        <div class=\"col-md-2 margin-bottom-10-mobile\">\r\n          <form [formGroup]=\"searchGroup\">\r\n            <div>\r\n              <input type=\"text\" class=\"form-control\" name=\"searchText\" placeholder=\"Search\"\r\n                formControlName=\"searchTerm\" />\r\n              <small class=\"form-text text-muted\"><b>Search</b> in all fields</small></div>\r\n          </form>\r\n        </div>\r\n        <div class=\"col-md-8 margin-bottom-10-mobile\"></div>\r\n        <div class=\"col-md-2 text-right margin-bottom-10-mobile\">\r\n          <button type=\"button\" class=\"btn btn-primary\" (click)=\"create()\">\r\n            Create new remark\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <!-- end: Filtration form -->\r\n\r\n  <!-- begin: Grouping -->\r\n  <ng-container *ngIf=\"grouping.getSelectedRowsCount()\">\r\n    <div class=\"form\">\r\n      <div class=\"row align-items-center form-group-actions margin-top-20 margin-bottom-20\">\r\n        <div class=\"col-xl-12\">\r\n          <div class=\"form-group form-group-inline\">\r\n            <div class=\"form-label form-label-no-wrap\">\r\n              <label class=\"font-bold font-danger\"><span>Selected records count:\r\n                  <b>{{ grouping.getSelectedRowsCount() }}</b></span></label>\r\n            </div>\r\n            <div>\r\n              <button type=\"button\" class=\"btn btn-danger font-weight-bolder font-size-sm mr-1\"\r\n                (click)=\"deleteSelected()\">\r\n                <i class=\"fa fa-trash\"></i> Delete All\r\n              </button>&nbsp;\r\n              <button type=\"button\" class=\"btn btn-light-primary font-weight-bolder font-size-sm\"\r\n                (click)=\"fetchSelected()\">\r\n                <i class=\"fa fa-stream\"></i> Fetch Selected\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </ng-container>\r\n  <!-- end: Grouping -->\r\n  <!-- begin:Table -->\r\n  <div class=\"table-responsive angular-bootstrap-table\">\r\n    <table class=\"table table-head-custom table-vertical-center overflow-hidden\">\r\n      <thead>\r\n        <th class=\"selection-cell-header\" data-row-selection=\"true\">\r\n          <label class=\"checkbox checkbox-single\"><input type=\"checkbox\" (click)=\"grouping.selectAllRows()\"\r\n              [checked]=\"grouping.checkAreAllRowsSelected()\" /><span></span></label>\r\n        </th>\r\n        <th>\r\n          ID\r\n          <app-sort-icon column=\"id\" [activeColumn]=\"sorting.column\" [activeDirection]=\"sorting.direction\"\r\n            (sort)=\"sort($event)\"></app-sort-icon>\r\n        </th>\r\n        <th>\r\n          TEXT\r\n          <app-sort-icon column=\"text\" [activeColumn]=\"sorting.column\" [activeDirection]=\"sorting.direction\"\r\n            (sort)=\"sort($event)\"></app-sort-icon>\r\n        </th>\r\n        <th>\r\n          DUE DATE\r\n          <app-sort-icon column=\"dueDate\" [activeColumn]=\"sorting.column\" [activeDirection]=\"sorting.direction\"\r\n            (sort)=\"sort($event)\"></app-sort-icon>\r\n        </th>\r\n        <th>ACTIONS</th>\r\n      </thead>\r\n      <tbody>\r\n        <tr *ngFor=\"let remark of remarksService.items$ | async\">\r\n          <td class=\"selection-cell\">\r\n            <label class=\"checkbox checkbox-single\"><input type=\"checkbox\" (click)=\"grouping.selectRow(remark.id)\"\r\n                [checked]=\"grouping.isRowSelected(remark.id)\" />\r\n              <span></span>\r\n            </label>\r\n          </td>\r\n          <td>{{ remark.id }}</td>\r\n          <td>{{ remark.text }}</td>\r\n          <td>{{ remark.dueDate }}</td>\r\n          <td>\r\n            <button title=\"Edit remark\" class=\"btn btn-icon btn-light btn-hover-primary btn-sm mx-3\"\r\n              (click)=\"edit(remark.id)\">\r\n              <span [inlineSVG]=\"'./assets/media/svg/icons/Communication/Write.svg'\" cacheSVG=\"true\"\r\n                class=\"svg-icon svg-icon-md svg-icon-primary\">\r\n              </span>\r\n            </button>\r\n            <button title=\"Delete remark\" class=\"btn btn-icon btn-light btn-hover-danger btn-sm\"\r\n              (click)=\"delete(remark.id)\">\r\n              <span [inlineSVG]=\"'./assets/media/svg/icons/General/Trash.svg'\" cacheSVG=\"true\"\r\n                class=\"svg-icon svg-icon-md svg-icon-danger\">\r\n              </span>\r\n            </button>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n  <!-- end: Table -->\r\n  <app-paginator class=\"d-flex justify-content-between align-items-center flex-wrap\" [paginator]=\"paginator\"\r\n    [isLoading]=\"isLoading\" (paginate)=\"paginate($event)\"></app-paginator>\r\n</div>","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { NgbActiveModal, NgbDateAdapter, NgbDateParserFormatter } from '@ng-bootstrap/ng-bootstrap';\r\nimport { of, Subscription } from 'rxjs';\r\nimport { RemarksService } from '../../../../_services';\r\nimport { CustomAdapter, CustomDateParserFormatter } from '../../../../../../_metronic/core';\r\nimport { ProductRemark } from '../../../../_models/product-remark.model';\r\nimport { catchError, first, tap } from 'rxjs/operators';\r\n\r\nconst EMPTY_REMARK: ProductRemark = {\r\n  id: undefined,\r\n  carId: undefined,\r\n  text: '',\r\n  type: 1, // Info 1, Note 2, Reminder 3\r\n  dueDate: ''\r\n};\r\n\r\n@Component({\r\n  selector: 'app-edit-remark-modal',\r\n  templateUrl: './edit-remark-modal.component.html',\r\n  styleUrls: ['./edit-remark-modal.component.scss'],\r\n  providers: [\r\n    {provide: NgbDateAdapter, useClass: CustomAdapter},\r\n    {provide: NgbDateParserFormatter, useClass: CustomDateParserFormatter}\r\n  ]\r\n})\r\nexport class EditRemarkModalComponent implements OnInit, OnDestroy {\r\n  @Input() id: number;\r\n  @Input() productId: number;\r\n  isLoading$;\r\n  remark: ProductRemark;\r\n  formGroup: FormGroup;\r\n  private subscriptions: Subscription[] = [];\r\n  constructor(\r\n    private remarksService: RemarksService,\r\n    private fb: FormBuilder, public modal: NgbActiveModal\r\n    ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.isLoading$ = this.remarksService.isLoading$;\r\n    this.loadRemarks();\r\n  }\r\n\r\n  loadRemarks() {\r\n    if (!this.id) {\r\n      this.remark = EMPTY_REMARK;\r\n      this.remark.carId = this.productId;\r\n      this.loadForm();\r\n    } else {\r\n      const sb = this.remarksService.getItemById(this.id).pipe(\r\n        first(),\r\n        catchError((errorMessage) => {\r\n          this.modal.dismiss(errorMessage);\r\n          const empty = EMPTY_REMARK;\r\n          empty.carId = this.productId;\r\n          return of(empty);\r\n        })\r\n      ).subscribe((remark: ProductRemark) => {\r\n        this.remark = remark;\r\n        this.loadForm();\r\n      });\r\n      this.subscriptions.push(sb);\r\n    }\r\n  }\r\n\r\n  loadForm() {\r\n    this.formGroup = this.fb.group({\r\n      text: [this.remark.text, Validators.compose([Validators.required, Validators.minLength(3), Validators.maxLength(10000)])],\r\n      dueDate: [this.remark.dueDate, Validators.compose([Validators.nullValidator])],\r\n      type: [this.remark.type, Validators.compose([Validators.required])]\r\n    });\r\n  }\r\n\r\n  save() {\r\n    this.prepareRemark();\r\n    if (this.remark.id) {\r\n      this.edit();\r\n    } else {\r\n      this.create();\r\n    }\r\n  }\r\n\r\n  edit() {\r\n    const sbUpdate = this.remarksService.update(this.remark).pipe(\r\n      tap(() => {\r\n        this.modal.close();\r\n      }),\r\n      catchError((errorMessage) => {\r\n        this.modal.dismiss(errorMessage);\r\n        return of(this.remark);\r\n      }),\r\n    ).subscribe(res => this.remark = res);\r\n    this.subscriptions.push(sbUpdate);\r\n  }\r\n\r\n  create() {\r\n    const sbCreate = this.remarksService.create(this.remark).pipe(\r\n      tap(() => {\r\n        this.modal.close();\r\n      }),\r\n      catchError((errorMessage) => {\r\n        this.modal.dismiss(errorMessage);\r\n        return of(this.remark);\r\n      }),\r\n    ).subscribe((res: ProductRemark) => this.remark = res);\r\n    this.subscriptions.push(sbCreate);\r\n  }\r\n\r\n  private prepareRemark() {\r\n    const formData = this.formGroup.value;\r\n    this.remark.carId = this.productId;\r\n    this.remark.dueDate = formData.dueDate;\r\n    this.remark.type = +formData.type;\r\n    this.remark.text = formData.text;\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscriptions.forEach(sb => sb.unsubscribe());\r\n  }\r\n\r\n  // helpers for View\r\n  isControlValid(controlName: string): boolean {\r\n    const control = this.formGroup.controls[controlName];\r\n    return control.valid && (control.dirty || control.touched);\r\n  }\r\n\r\n  isControlInvalid(controlName: string): boolean {\r\n    const control = this.formGroup.controls[controlName];\r\n    return control.invalid && (control.dirty || control.touched);\r\n  }\r\n\r\n  controlHasError(validation, controlName): boolean {\r\n    const control = this.formGroup.controls[controlName];\r\n    return control.hasError(validation) && (control.dirty || control.touched);\r\n  }\r\n\r\n  isControlTouched(controlName): boolean {\r\n    const control = this.formGroup.controls[controlName];\r\n    return control.dirty || control.touched;\r\n  }\r\n}\r\n","<div class=\"modal-content\">\r\n  <div class=\"modal-header\">\r\n    <div class=\"modal-title h4\" id=\"example-modal-sizes-title-lg\">\r\n      <ng-container *ngIf=\"remark\">\r\n        <ng-container *ngIf=\"remark.id\">Edit</ng-container>\r\n        <ng-container *ngIf=\"!remark.id\">Create</ng-container>\r\n        remark\r\n        <ng-container *ngIf=\"remark.id\"> with ID '{{remark.id}}</ng-container>\r\n      </ng-container>\r\n    </div>\r\n  </div>\r\n  <div class=\"overlay overlay-block cursor-default modal-body\">\r\n    <ng-container *ngIf=\"isLoading$ | async\">\r\n      <div class=\"overlay-layer bg-transparent\">\r\n        <div class=\"spinner spinner-lg spinner-success\"></div>\r\n      </div>\r\n    </ng-container>\r\n\r\n    <ng-container *ngIf=\"remark\">\r\n      <form action=\"#\" class=\"form form-label-right\" [formGroup]=\"formGroup\">\r\n        <div class=\"form-group row\">\r\n          <div class=\"col-xl-12\">\r\n\r\n            <label class=\"form-label\">Enter Text</label>\r\n            <input type=\"text\" class=\"form-control form-control-lg form-control-solid\" name=\"text\" placeholder=\"Text\"\r\n              autocomplete=\"off\" [class.is-invalid]=\"isControlInvalid('text')\" [class.is-valid]=\"isControlValid('text')\"\r\n              formControlName=\"text\" />\r\n            <div class=\"valid-feedback\" *ngIf=\"isControlValid('text')\">Text was entered correct</div>\r\n            <div class=\"invalid-feedback\" *ngIf=\"controlHasError('required', 'text')\">Text is required</div>\r\n            <div class=\"invalid-feedback\" *ngIf=\"controlHasError('minlength', 'text')\">Text should have at least 3\r\n              symbols</div>\r\n            <div class=\"invalid-feedback\" *ngIf=\"controlHasError('maxLength', 'text')\">Text should have maximum 10000\r\n              symbols</div>\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group row\">\r\n          <div class=\"col-xl-12\">\r\n            <label>Dute date</label>\r\n            <div class=\"input-group input-group-solid\">\r\n              <input type=\"text\" name=\"dueDate\" class=\"form-control form-control-lg form-control-solid\"\r\n                autocomplete=\"off\" placeholder=\"dd/mm/yyyy\" ngbDatepicker #d=\"ngbDatepicker\"\r\n                [class.is-invalid]=\"isControlInvalid('dueDate')\" [class.is-valid]=\"isControlValid('dueDate')\"\r\n                formControlName=\"dueDate\" readonly=\"true\" />\r\n              <div class=\"input-group-append\" (click)=\"d.toggle()\">\r\n                <span class=\"input-group-text\">\r\n                  <i class=\"text-dark-50 flaticon-calendar\"></i>\r\n                </span>\r\n              </div>\r\n            </div>\r\n            <div class=\"valid-feedback\" *ngIf=\"isControlValid('dueDate')\">Due date was entered correct</div>\r\n            <div class=\"invalid-feedback\" *ngIf=\"controlHasError('required', 'dueDate')\">Please enter <b>Due date</b> in\r\n              'mm/dd/yyyy' format</div>\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group row\">\r\n          <div class=\"col-lg-12\">\r\n            <label>Select Type</label>\r\n            <select class=\"form-control form-control-lg form-control-solid\" name=\"type\" formControlName=\"type\">\r\n              <option value=\"1\">Info</option>\r\n              <option value=\"2\">Note</option>\r\n              <option value=\"3\">Reminder</option>\r\n            </select>\r\n            <div class=\"feedback\">Please select <b>Type</b></div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </ng-container>\r\n  </div>\r\n  <div class=\"modal-footer\">\r\n    <button type=\"button\" class=\"btn btn-light btn-elevate mr-2\" (click)=\"modal.dismiss()\">Cancel</button>\r\n    <ng-container *ngIf=\"remark\">\r\n\r\n      <button type=\"submit\" class=\"btn btn-primary btn-elevate\" (click)=\"save()\"\r\n        [disabled]=\"formGroup.invalid\">Save</button>\r\n    </ng-container>\r\n  </div>\r\n</div>","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Observable, of, Subscription } from 'rxjs';\r\nimport { catchError, switchMap, tap } from 'rxjs/operators';\r\nimport { Product } from '../../_models/product.model';\r\nimport { ProductsService } from '../../_services';\r\n\r\nconst EMPTY_PRODUCT: Product = {\r\n  id: undefined,\r\n  model: '',\r\n  manufacture: 'Pontiac',\r\n  modelYear: 2020,\r\n  mileage: 0,\r\n  description: '',\r\n  color: 'Red',\r\n  price: 0,\r\n  condition: 1,\r\n  status: 1,\r\n  VINCode: '',\r\n};\r\n\r\n@Component({\r\n  selector: 'app-product-edit',\r\n  templateUrl: './product-edit.component.html',\r\n  styleUrls: ['./product-edit.component.scss']\r\n})\r\nexport class ProductEditComponent implements OnInit, OnDestroy {\r\n  id: number;\r\n  product: Product;\r\n  previous: Product;\r\n  formGroup: FormGroup;\r\n  isLoading$: Observable<boolean>;\r\n  errorMessage = '';\r\n  tabs = {\r\n    BASIC_TAB: 0,\r\n    REMARKS_TAB: 1,\r\n    SPECIFICATIONS_TAB: 2\r\n  };\r\n  activeTabId = this.tabs.BASIC_TAB; // 0 => Basic info | 1 => Remarks | 2 => Specifications\r\n  private subscriptions: Subscription[] = [];\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private productsService: ProductsService,\r\n    private router: Router,\r\n    private route: ActivatedRoute\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.isLoading$ = this.productsService.isLoading$;\r\n    this.loadProduct();\r\n  }\r\n\r\n  loadProduct() {\r\n    const sb = this.route.paramMap.pipe(\r\n      switchMap(params => {\r\n        // get id from URL\r\n        this.id = Number(params.get('id'));\r\n        if (this.id || this.id > 0) {\r\n          return this.productsService.getItemById(this.id);\r\n        }\r\n        return of(EMPTY_PRODUCT);\r\n      }),\r\n      catchError((errorMessage) => {\r\n        this.errorMessage = errorMessage;\r\n        return of(undefined);\r\n      }),\r\n    ).subscribe((res: Product) => {\r\n      if (!res) {\r\n        this.router.navigate(['/products'], { relativeTo: this.route });\r\n      }\r\n\r\n      this.product = res;\r\n      this.previous = Object.assign({}, res);\r\n      this.loadForm();\r\n    });\r\n    this.subscriptions.push(sb);\r\n  }\r\n\r\n  loadForm() {\r\n    if (!this.product) {\r\n      return;\r\n    }\r\n\r\n    this.formGroup = this.fb.group({\r\n      model: [this.product.model, Validators.compose([Validators.required, Validators.minLength(3), Validators.maxLength(100)])],\r\n      manufacture: [this.product.manufacture],\r\n      modelYear: [this.product.modelYear, Validators.compose([\r\n        Validators.required,\r\n        Validators.minLength(1),\r\n        Validators.min(1900),\r\n        Validators.maxLength(4),\r\n        Validators.max(2023)\r\n      ])],\r\n      mileage: [this.product.mileage, Validators.compose([\r\n        Validators.required,\r\n        Validators.minLength(1),\r\n        Validators.min(0),\r\n        Validators.maxLength(100),\r\n        Validators.max(1000000)\r\n      ])],\r\n      color: [this.product.color],\r\n      price: [this.product.price],\r\n      description: [this.product.description],\r\n      status: [this.product.status],\r\n      condition: [this.product.condition],\r\n      VINCode: [this.product.VINCode, Validators.required]\r\n    });\r\n  }\r\n\r\n  reset() {\r\n    if (!this.previous) {\r\n      return;\r\n    }\r\n\r\n    this.product = Object.assign({}, this.previous);\r\n    this.loadForm();\r\n  }\r\n\r\n  save() {\r\n    this.formGroup.markAllAsTouched();\r\n    if (!this.formGroup.valid) {\r\n      return;\r\n    }\r\n\r\n    const formValues = this.formGroup.value;\r\n    this.product = Object.assign(this.product, formValues);\r\n    if (this.id) {\r\n      this.edit();\r\n    } else {\r\n      this.create();\r\n    }\r\n  }\r\n\r\n  edit() {\r\n    const sbUpdate = this.productsService.update(this.product).pipe(\r\n      tap(() => this.router.navigate(['/ecommerce/products'])),\r\n      catchError((errorMessage) => {\r\n        console.error('UPDATE ERROR', errorMessage);\r\n        return of(this.product);\r\n      })\r\n    ).subscribe(res => this.product = res);\r\n    this.subscriptions.push(sbUpdate);\r\n  }\r\n\r\n  create() {\r\n    const sbCreate = this.productsService.create(this.product).pipe(\r\n      tap(() => this.router.navigate(['/ecommerce/products'])),\r\n      catchError((errorMessage) => {\r\n        console.error('UPDATE ERROR', errorMessage);\r\n        return of(this.product);\r\n      })\r\n    ).subscribe(res => this.product = res as Product);\r\n    this.subscriptions.push(sbCreate);\r\n  }\r\n\r\n  changeTab(tabId: number) {\r\n    this.activeTabId = tabId;\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscriptions.forEach(sb => sb.unsubscribe());\r\n  }\r\n\r\n  // helpers for View\r\n  isControlValid(controlName: string): boolean {\r\n    const control = this.formGroup.controls[controlName];\r\n    return control.valid && (control.dirty || control.touched);\r\n  }\r\n\r\n  isControlInvalid(controlName: string): boolean {\r\n    const control = this.formGroup.controls[controlName];\r\n    return control.invalid && (control.dirty || control.touched);\r\n  }\r\n\r\n  controlHasError(validation: string, controlName: string) {\r\n    const control = this.formGroup.controls[controlName];\r\n    return control.hasError(validation) && (control.dirty || control.touched);\r\n  }\r\n\r\n  isControlTouched(controlName: string): boolean {\r\n    const control = this.formGroup.controls[controlName];\r\n    return control.dirty || control.touched;\r\n  }\r\n}\r\n","<div class=\"card card-custom gutter-b\">\r\n  <ng-container *ngIf=\"isLoading$ | async\">\r\n    <div class=\"progress progress-modal\">\r\n      <div\r\n        class=\"progress-bar progress-bar-striped progress-bar-animated bg-primary\"\r\n        role=\"progressbar\"\r\n        style=\"width: 100%\"\r\n        aria-valuenow=\"100\"\r\n        aria-valuemin=\"0\"\r\n        aria-valuemax=\"100\"\r\n      ></div>\r\n    </div>\r\n  </ng-container>\r\n\r\n  <div class=\"card-header\">\r\n    <div class=\"card-title\">\r\n      <h3 class=\"card-label\">\r\n        <ng-container *ngIf=\"product\">\r\n          {{ id ? \"Edit\" : \"New\" }} product\r\n          <span *ngIf=\"product && product.id\"\r\n            >'{{ product.manufacture }} {{ product.model }} -\r\n            {{ product.modelYear }}'</span\r\n          >\r\n        </ng-container>\r\n        {{ product?.manufacture }}\r\n      </h3>\r\n    </div>\r\n    <div class=\"card-toolbar\">\r\n      <a type=\"button\" class=\"btn btn-light\" routerLink=\"/ecommerce/products\">\r\n        <i class=\"fa fa-arrow-left\"></i>Back\r\n      </a>\r\n      <button class=\"btn btn-secondary ml-2\" (click)=\"reset()\">\r\n        <i class=\"fa fa-redo\"></i>Reset\r\n      </button>\r\n    </div>\r\n  </div>\r\n  <div class=\"card-body\">\r\n    <ul class=\"nav nav-tabs nav-tabs-line\" role=\"tablist\">\r\n      <li class=\"nav-item cursor-pointer\" (click)=\"changeTab(tabs.BASIC_TAB)\">\r\n        <a\r\n          class=\"nav-link\"\r\n          data-toggle=\"tab\"\r\n          role=\"tab\"\r\n          [attr.aria-selected]=\"activeTabId === tabs.BASIC_TAB\"\r\n          [class.active]=\"activeTabId === tabs.BASIC_TAB\"\r\n        >\r\n          Basic info\r\n        </a>\r\n      </li>\r\n      <li\r\n        *ngIf=\"product && product.id\"\r\n        class=\"nav-item cursor-pointer\"\r\n        (click)=\"changeTab(tabs.REMARKS_TAB)\"\r\n      >\r\n        <a\r\n          class=\"nav-link\"\r\n          data-toggle=\"tab\"\r\n          role=\"button\"\r\n          [attr.aria-selected]=\"activeTabId === tabs.REMARKS_TAB\"\r\n          [class.active]=\"activeTabId === tabs.REMARKS_TAB\"\r\n          >Product remarks</a\r\n        >\r\n      </li>\r\n      <li\r\n        *ngIf=\"product && product.id\"\r\n        class=\"nav-item cursor-pointer\"\r\n        (click)=\"changeTab(tabs.SPECIFICATIONS_TAB)\"\r\n      >\r\n        <a\r\n          class=\"nav-link\"\r\n          data-toggle=\"tab\"\r\n          role=\"tab\"\r\n          [attr.aria-selected]=\"activeTabId === tabs.SPECIFICATIONS_TAB\"\r\n          [class.active]=\"activeTabId === tabs.SPECIFICATIONS_TAB\"\r\n          >Product specifications</a\r\n        >\r\n      </li>\r\n    </ul>\r\n\r\n    <ng-container *ngIf=\"activeTabId === tabs.BASIC_TAB\">\r\n      <div class=\"mt-5\" *ngIf=\"product\">\r\n        <form\r\n          action=\"#\"\r\n          class=\"form form-label-right\"\r\n          [formGroup]=\"formGroup\"\r\n          (ngSubmit)=\"save()\"\r\n        >\r\n          <div class=\"form-group row\">\r\n            <div class=\"col-lg-4\">\r\n              <label>Enter Model</label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control form-control-lg form-control-solid\"\r\n                autocomplete=\"off\"\r\n                placeholder=\"Model\"\r\n                name=\"model\"\r\n                [class.is-invalid]=\"isControlInvalid('model')\"\r\n                [class.is-valid]=\"isControlValid('model')\"\r\n                formControlName=\"model\"\r\n              />\r\n              <div class=\"feedback\" *ngIf=\"!isControlTouched('model')\">\r\n                Please enter <b>Model</b>\r\n              </div>\r\n              <div class=\"valid-feedback\" *ngIf=\"isControlValid('model')\">\r\n                Model was entered correct\r\n              </div>\r\n              <div\r\n                class=\"invalid-feedback\"\r\n                *ngIf=\"controlHasError('required', 'model')\"\r\n              >\r\n                Model is required\r\n              </div>\r\n              <div\r\n                class=\"invalid-feedback\"\r\n                *ngIf=\"controlHasError('minlength', 'model')\"\r\n              >\r\n                Model should have at least 3 symbols\r\n              </div>\r\n              <div\r\n                class=\"invalid-feedback\"\r\n                *ngIf=\"controlHasError('maxLength', 'model')\"\r\n              >\r\n                Model should have maximum 100 symbols\r\n              </div>\r\n            </div>\r\n            <div class=\"col-lg-4\">\r\n              <label>Select Manufacture</label>\r\n              <select\r\n                class=\"form-control form-control-lg form-control-solid\"\r\n                name=\"manufacture\"\r\n                formControlName=\"manufacture\"\r\n              >\r\n                <option value=\"Pontiac\">Pontiac</option>\r\n                <option value=\"Kia\">Kia</option>\r\n                <option value=\"Lotus\">Lotus</option>\r\n                <option value=\"Subaru\">Subaru</option>\r\n                <option value=\"Jeep\">Jeep</option>\r\n                <option value=\"Isuzu\">Isuzu</option>\r\n                <option value=\"Mitsubishi\">Mitsubishi</option>\r\n                <option value=\"Oldsmobile\">Oldsmobile</option>\r\n                <option value=\"Chevrolet\">Chevrolet</option>\r\n                <option value=\"Chrysler\">Chrysler</option>\r\n                <option value=\"Audi\">Audi</option>\r\n                <option value=\"Suzuki\">Suzuki</option>\r\n                <option value=\"GMC\">GMC</option>\r\n                <option value=\"Cadillac\">Cadillac</option>\r\n                <option value=\"Infinity\">Infinity</option>\r\n                <option value=\"Mercury\">Mercury</option>\r\n                <option value=\"Dodge\">Dodge</option>\r\n                <option value=\"Ram\">Ram</option>\r\n                <option value=\"Lexus\">Lexus</option>\r\n                <option value=\"Lamborghini\">Lamborghini</option>\r\n                <option value=\"Honda\">Honda</option>\r\n                <option value=\"Nissan\">Nissan</option>\r\n                <option value=\"Ford\">Ford</option>\r\n                <option value=\"Hyundai\">Hyundai</option>\r\n                <option value=\"Saab\">Saab</option>\r\n                <option value=\"Toyota\">Toyota</option>\r\n              </select>\r\n              <div class=\"feedback\">Please select <b>Color</b></div>\r\n            </div>\r\n            <div class=\"col-lg-4\">\r\n              <label>Enter Model year</label>\r\n              <input\r\n                type=\"number\"\r\n                class=\"form-control form-control-lg form-control-solid\"\r\n                placeholder=\"Model Year\"\r\n                name=\"modelYear\"\r\n                [class.is-invalid]=\"isControlInvalid('modelYear')\"\r\n                [class.is-valid]=\"isControlValid('modelYear')\"\r\n                formControlName=\"modelYear\"\r\n              />\r\n              <div class=\"feedback\" *ngIf=\"!isControlTouched('modelYear')\">\r\n                Please enter <b>Model</b>\r\n              </div>\r\n              <div class=\"valid-feedback\" *ngIf=\"isControlValid('modelYear')\">\r\n                Model year was entered correct\r\n              </div>\r\n              <div\r\n                class=\"invalid-feedback\"\r\n                *ngIf=\"controlHasError('required', 'modelYear')\"\r\n              >\r\n                Model year is required\r\n              </div>\r\n              <div\r\n                class=\"invalid-feedback\"\r\n                *ngIf=\"controlHasError('minlength', 'modelYear')\"\r\n              >\r\n                Model year should have at least 3 symbols\r\n              </div>\r\n              <div\r\n                class=\"invalid-feedback\"\r\n                *ngIf=\"controlHasError('min', 'modelYear')\"\r\n              >\r\n                Model year can't be less than 1900\r\n              </div>\r\n              <div\r\n                class=\"invalid-feedback\"\r\n                *ngIf=\"controlHasError('max', 'modelYear')\"\r\n              >\r\n                Model year can't be more than 2023\r\n              </div>\r\n              <div\r\n                class=\"invalid-feedback\"\r\n                *ngIf=\"controlHasError('maxLength', 'modelYear')\"\r\n              >\r\n                Model year should have maximum 100 symbols\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group row\">\r\n            <div class=\"col-lg-4\">\r\n              <label>Enter Mileage</label>\r\n              <input\r\n                type=\"number\"\r\n                class=\"form-control form-control-lg form-control-solid\"\r\n                placeholder=\"Mileage\"\r\n                name=\"mileage\"\r\n                [class.is-invalid]=\"isControlInvalid('mileage')\"\r\n                [class.is-valid]=\"isControlValid('mileage')\"\r\n                formControlName=\"mileage\"\r\n              />\r\n              <div class=\"feedback\" *ngIf=\"!isControlTouched('mileage')\">\r\n                Please enter <b>Mileage</b>\r\n              </div>\r\n              <div class=\"valid-feedback\" *ngIf=\"isControlValid('mileage')\">\r\n                Mileage was entered correct\r\n              </div>\r\n              <div\r\n                class=\"invalid-feedback\"\r\n                *ngIf=\"controlHasError('required', 'mileage')\"\r\n              >\r\n                Mileage is required\r\n              </div>\r\n              <div\r\n                class=\"invalid-feedback\"\r\n                *ngIf=\"controlHasError('minlength', 'mileage')\"\r\n              >\r\n                Mileage should have at least 1 symbol\r\n              </div>\r\n              <div\r\n                class=\"invalid-feedback\"\r\n                *ngIf=\"controlHasError('maxLength', 'mileage')\"\r\n              >\r\n                Mileage year should have maximum 100 symbols\r\n              </div>\r\n            </div>\r\n            <div class=\"col-lg-4\">\r\n              <label>Select Color</label>\r\n              <select\r\n                class=\"form-control form-control-lg form-control-solid\"\r\n                name=\"color\"\r\n                formControlName=\"color\"\r\n              >\r\n                <option value=\"Red\">Red</option>\r\n                <option value=\"CadetBlue\">CadetBlue</option>\r\n                <option value=\"Eagle\">Eagle</option>\r\n                <option value=\"Gold\">Gold</option>\r\n                <option value=\"LightSlateGrey\">LightSlateGrey</option>\r\n                <option value=\"RoyalBlue\">RoyalBlue</option>\r\n                <option value=\"Crimson\">Crimson</option>\r\n                <option value=\"Blue\">Blue</option>\r\n                <option value=\"Sienna\">Sienna</option>\r\n                <option value=\"Indigo\">Indigo</option>\r\n                <option value=\"Green\">Green</option>\r\n                <option value=\"Violet\">Violet</option>\r\n                <option value=\"GoldenRod\">GoldenRod</option>\r\n                <option value=\"OrangeRed\">OrangeRed</option>\r\n                <option value=\"Khaki\">Khaki</option>\r\n                <option value=\"Teal\">Teal</option>\r\n                <option value=\"Purple\">Purple</option>\r\n                <option value=\"Orange\">Orange</option>\r\n                <option value=\"Pink\">Pink</option>\r\n                <option value=\"Black\">Black</option>\r\n                <option value=\"DarkTurquoise\">DarkTurquoise</option>\r\n              </select>\r\n              <div class=\"feedback\">Please select <b>Color</b></div>\r\n            </div>\r\n            <div class=\"col-lg-4\">\r\n              <label>Enter Price ($)</label>\r\n              <input\r\n                type=\"number\"\r\n                class=\"form-control form-control-lg form-control-solid\"\r\n                autocomplete=\"off\"\r\n                placeholder=\"Price\"\r\n                name=\"price\"\r\n                [class.is-invalid]=\"isControlInvalid('price')\"\r\n                [class.is-valid]=\"isControlValid('price')\"\r\n                formControlName=\"price\"\r\n              />\r\n              <div class=\"feedback\" *ngIf=\"!isControlTouched('price')\">\r\n                Please enter <b>Price</b>\r\n              </div>\r\n              <div class=\"valid-feedback\" *ngIf=\"isControlValid('price')\">\r\n                Price was entered correct\r\n              </div>\r\n              <div\r\n                class=\"invalid-feedback\"\r\n                *ngIf=\"controlHasError('required', 'price')\"\r\n              >\r\n                Price is required\r\n              </div>\r\n              <div\r\n                class=\"invalid-feedback\"\r\n                *ngIf=\"controlHasError('minlength', 'price')\"\r\n              >\r\n                Price should have at least 3 symbols\r\n              </div>\r\n              <div\r\n                class=\"invalid-feedback\"\r\n                *ngIf=\"controlHasError('maxLength', 'price')\"\r\n              >\r\n                Price should have maximum 100 symbols\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group row\">\r\n            <div class=\"col-lg-4\">\r\n              <label>Enter VIN code</label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control form-control-lg form-control-solid\"\r\n                autocomplete=\"off\"\r\n                placeholder=\"VIN Code\"\r\n                name=\"VINCode\"\r\n                [class.is-invalid]=\"isControlInvalid('VINCode')\"\r\n                [class.is-valid]=\"isControlValid('VINCode')\"\r\n                formControlName=\"VINCode\"\r\n              />\r\n              <div class=\"feedback\" *ngIf=\"!isControlTouched('VINCode')\">\r\n                Please enter <b>VIN code</b>\r\n              </div>\r\n              <div class=\"valid-feedback\" *ngIf=\"isControlValid('VINCode')\">\r\n                VIN code was entered correct\r\n              </div>\r\n              <div\r\n                class=\"invalid-feedback\"\r\n                *ngIf=\"controlHasError('required', 'VINCode')\"\r\n              >\r\n                VIN code is required\r\n              </div>\r\n            </div>\r\n            <div class=\"col-lg-4\">\r\n              <label>Select Status</label>\r\n              <select\r\n                class=\"form-control form-control-lg form-control-solid\"\r\n                name=\"status\"\r\n                formControlName=\"status\"\r\n              >\r\n                <option value=\"1\">Selling</option>\r\n                <option value=\"2\">Sold</option>\r\n              </select>\r\n              <div class=\"feedback\">Please select <b>Status</b></div>\r\n            </div>\r\n            <div class=\"col-lg-4\">\r\n              <label>Select Condition</label>\r\n              <select\r\n                class=\"form-control form-control-lg form-control-solid\"\r\n                name=\"condition\"\r\n                formControlName=\"condition\"\r\n              >\r\n                <option value=\"1\">New</option>\r\n                <option value=\"2\">Used</option>\r\n              </select>\r\n              <div class=\"feedback\">Please select <b>Condition</b></div>\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label>Description</label>\r\n            <textarea\r\n              name=\"description\"\r\n              class=\"form-control form-control-solid\"\r\n              formControlName=\"description\"\r\n            ></textarea>\r\n          </div>\r\n          <div class=\"float-right\">\r\n            <a\r\n              class=\"btn btn-default font-weight-bold mr-2\"\r\n              routerLink=\"/ecommerce/products\"\r\n              >Cancel</a\r\n            >\r\n            <button\r\n              type=\"submit\"\r\n              class=\"btn btn-primary font-weight-bold mr-2\"\r\n              [disabled]=\"formGroup.invalid\"\r\n            >\r\n              Save\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </ng-container>\r\n\r\n    <ng-container\r\n      *ngIf=\"activeTabId === tabs.REMARKS_TAB && product && product.id\"\r\n    >\r\n      <app-remarks [productId]=\"product.id\"></app-remarks>\r\n    </ng-container>\r\n\r\n    <ng-container\r\n      *ngIf=\"activeTabId === tabs.SPECIFICATIONS_TAB && product && product.id\"\r\n    >\r\n      <app-specifications [productId]=\"product.id\"></app-specifications>\r\n    </ng-container>\r\n  </div>\r\n</div>\r\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { from, of, Subscription } from 'rxjs';\r\nimport { RemarksService } from '../../../../_services';\r\nimport { ProductRemark } from '../../../../_models/product-remark.model';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { catchError, delay, finalize, first, tap } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-fetch-remarks-modal',\r\n  templateUrl: './fetch-remarks-modal.component.html',\r\n  styleUrls: ['./fetch-remarks-modal.component.scss']\r\n})\r\nexport class FetchRemarksModalComponent implements OnInit, OnDestroy {\r\n  @Input() ids: number[];\r\n  remarks: ProductRemark[] = [];\r\n  isLoading = false;\r\n  subscriptions: Subscription[] = [];\r\n\r\n  constructor(private remarksService: RemarksService, public modal: NgbActiveModal) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loadRemarks();\r\n  }\r\n\r\n  loadRemarks() {\r\n    const sb = this.remarksService.items$.pipe(\r\n      first()\r\n    ).subscribe((res: ProductRemark[]) => {\r\n      this.remarks = res.filter(c => this.ids.indexOf(c.id) > -1);\r\n    });\r\n    this.subscriptions.push(sb);\r\n  }\r\n\r\n  fetchSelected() {\r\n    this.isLoading = true;\r\n    const sb = from([]).pipe( // fake => update to call request method from your server\r\n      delay(1000), // Remove it from your code (just for showing loading)\r\n      tap(() => this.modal.close()),\r\n      catchError((errorMessage) => {\r\n        this.modal.dismiss(errorMessage);\r\n        return of(undefined);\r\n      }),\r\n      finalize(() => {\r\n        this.isLoading = false;\r\n      })\r\n    ).subscribe();\r\n    this.subscriptions.push(sb);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscriptions.forEach(sb => sb.unsubscribe());\r\n  }\r\n}\r\n","<div class=\"modal-header\">\r\n  <div class=\"modal-title h4\">Fetch selected remarks</div>\r\n</div>\r\n<div class=\"modal-body overlay overlay-block cursor-default\">\r\n  <ng-container *ngIf=\"isLoading\">\r\n    <div class=\"overlay-layer\">\r\n      <div class=\"spinner spinner-lg spinner-primary\"></div>\r\n    </div>\r\n  </ng-container>\r\n\r\n  <div class=\"table-responsive angular-bootstrap-table\">\r\n    <table class=\"table table-head-custom table-vertical-center overflow-hidden\">\r\n      <thead>\r\n        <th>ID</th>\r\n        <th>TEXT</th>\r\n      </thead>\r\n      <tbody>\r\n        <tr *ngFor=\"let remark of remarks\">\r\n          <td>{{remark.id}}</td>\r\n          <td>{{remark.text}}</td>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n\r\n</div>\r\n\r\n<div class=\"modal-footer\">\r\n  <div>\r\n    <button type=\"button\" class=\"btn btn-light btn-elevate mr-3\" (click)=\"modal.dismiss()\">Cancel</button>\r\n    <button type=\"button\" class=\"btn btn-primary btn-elevate\" (click)=\"fetchSelected()\">Fetch</button>\r\n  </div>\r\n</div>","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { of, Subscription } from 'rxjs';\r\nimport { catchError, delay, finalize, tap } from 'rxjs/operators';\r\nimport { SpecificationsService } from '../../../../_services';\r\n\r\n@Component({\r\n  selector: 'app-delete-specs-modal',\r\n  templateUrl: './delete-specs-modal.component.html',\r\n  styleUrls: ['./delete-specs-modal.component.scss']\r\n})\r\nexport class DeleteSpecsModalComponent implements OnInit, OnDestroy {\r\n  @Input() ids: number[];\r\n  isLoading = false;\r\n  subscriptions: Subscription[] = [];\r\n\r\n  constructor(private specsService: SpecificationsService, public modal: NgbActiveModal) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  deleteSpecs() {\r\n    this.isLoading = true;\r\n    const sb = this.specsService.deleteItems(this.ids).pipe(\r\n      delay(1000), // Remove it from your code (just for showing loading)\r\n      tap(() => this.modal.close()),\r\n      catchError((errorMessage) => {\r\n        this.modal.dismiss(errorMessage);\r\n        return of(undefined);\r\n      }),\r\n      finalize(() => {\r\n        this.isLoading = false;\r\n      })\r\n    ).subscribe();\r\n    this.subscriptions.push(sb);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscriptions.forEach(sb => sb.unsubscribe());\r\n  }\r\n}\r\n","<ng-container *ngIf=\"isLoading\">\r\n  <div class=\"progress progress-modal\">\r\n    <div class=\"progress-bar progress-bar-striped progress-bar-animated bg-primary\" role=\"progressbar\"\r\n      style=\"width: 100%\" aria-valuenow=\"100\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\r\n  </div>\r\n</ng-container>\r\n\r\n<div class=\"modal-header\">\r\n  <div class=\"modal-title h4\">Specifications Delete</div>\r\n</div>\r\n<div class=\"modal-body\">\r\n  <ng-container *ngIf=\"isLoading\">\r\n    <span>Specifications are deleting...</span>\r\n  </ng-container>\r\n\r\n  <ng-container *ngIf=\"!isLoading\">\r\n    <span>Are you sure to permanently delete selected specifications?</span>\r\n  </ng-container>\r\n</div>\r\n\r\n<div class=\"modal-footer\">\r\n  <div>\r\n    <button type=\"button\" class=\"btn btn-light btn-elevate mr-1\" (click)=\"modal.dismiss()\">\r\n      Cancel\r\n    </button>&nbsp;\r\n    <button type=\"button\" class=\"btn btn-primary btn-elevate\" (click)=\"deleteSpecs()\">\r\n      Delete\r\n    </button>\r\n  </div>\r\n</div>","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Subscription } from 'rxjs';\r\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\r\nimport {\r\n  GroupingState,\r\n  ICreateAction,\r\n  IDeleteAction,\r\n  IDeleteSelectedAction,\r\n  IEditAction,\r\n  IFetchSelectedAction,\r\n  IGroupingView,\r\n  ISearchView,\r\n  ISortView,\r\n  PaginatorState,\r\n  SortState,\r\n} from '../../../../../_metronic/shared/crud-table';\r\nimport { SPECIFICATIONS_DICTIONARY } from '../../../_models/specification.dictionary';\r\nimport { SpecificationsService } from '../../../_services';\r\nimport { DeleteSpecModalComponent } from './delete-spec-modal/delete-spec-modal.component';\r\nimport { DeleteSpecsModalComponent } from './delete-specs-modal/delete-specs-modal.component';\r\nimport { EditSpecModalComponent } from './edit-spec-modal/edit-spec-modal.component';\r\nimport { FetchSpecsModalComponent } from './fetch-specs-modal/fetch-specs-modal.component';\r\n\r\n@Component({\r\n  selector: 'app-specifications',\r\n  templateUrl: './specifications.component.html',\r\n  styleUrls: ['./specifications.component.scss'],\r\n})\r\nexport class SpecificationsComponent\r\n  implements\r\n    OnInit,\r\n    OnDestroy,\r\n    IDeleteAction,\r\n    IDeleteSelectedAction,\r\n    IFetchSelectedAction,\r\n    ISortView,\r\n    IGroupingView,\r\n    ISearchView,\r\n    IEditAction,\r\n    ICreateAction {\r\n  @Input() productId: number;\r\n  specs: string[] = SPECIFICATIONS_DICTIONARY;\r\n  paginator: PaginatorState;\r\n  sorting: SortState;\r\n  grouping: GroupingState;\r\n  isLoading: boolean;\r\n  searchGroup: FormGroup;\r\n  private subscriptions: Subscription[] = [];\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private modalService: NgbModal,\r\n    public specsService: SpecificationsService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.searchForm();\r\n    const sb = this.specsService.isLoading$.subscribe(\r\n      (res) => (this.isLoading = res)\r\n    );\r\n    this.subscriptions.push(sb);\r\n    this.specsService.patchState({ entityId: this.productId });\r\n    this.grouping = this.specsService.grouping;\r\n    this.paginator = this.specsService.paginator;\r\n    this.sorting = this.specsService.sorting;\r\n    this.specsService.fetch();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscriptions.forEach((sb) => sb.unsubscribe());\r\n  }\r\n  //\r\n  searchForm() {\r\n    this.searchGroup = this.fb.group({\r\n      searchTerm: [''],\r\n    });\r\n    const searchEvent = this.searchGroup.controls.searchTerm.valueChanges\r\n      .pipe(\r\n        /*\r\n  The user can type quite quickly in the input box, and that could trigger a lot of server requests. With this operator,\r\n  we are limiting the amount of server requests emitted to a maximum of one every 150ms\r\n  */\r\n        debounceTime(150),\r\n        distinctUntilChanged()\r\n      )\r\n      .subscribe((val) => this.search(val));\r\n    this.subscriptions.push(searchEvent);\r\n  }\r\n\r\n  search(searchTerm: string) {\r\n    this.specsService.patchState({ searchTerm });\r\n  }\r\n  // sorting\r\n  sort(column: string) {\r\n    const sorting = this.sorting;\r\n    const isActiveColumn = sorting.column === column;\r\n    if (!isActiveColumn) {\r\n      sorting.column = column;\r\n      sorting.direction = 'asc';\r\n    } else {\r\n      sorting.direction = sorting.direction === 'asc' ? 'desc' : 'asc';\r\n    }\r\n    this.specsService.patchState({ sorting });\r\n  }\r\n  // pagination\r\n  paginate(paginator: PaginatorState) {\r\n    this.specsService.patchState({ paginator });\r\n  }\r\n  // actions\r\n  delete(id: number) {\r\n    const modalRef = this.modalService.open(DeleteSpecModalComponent);\r\n    modalRef.componentInstance.id = id;\r\n    modalRef.result.then(\r\n      () => this.specsService.fetch(),\r\n      () => {}\r\n    );\r\n  }\r\n\r\n  deleteSelected() {\r\n    const modalRef = this.modalService.open(DeleteSpecsModalComponent);\r\n    modalRef.componentInstance.ids = this.grouping.getSelectedRows();\r\n    modalRef.result.then(\r\n      () => this.specsService.fetch(),\r\n      () => {}\r\n    );\r\n  }\r\n\r\n  fetchSelected() {\r\n    const modalRef = this.modalService.open(FetchSpecsModalComponent);\r\n    modalRef.componentInstance.ids = this.grouping.getSelectedRows();\r\n    modalRef.result.then(\r\n      () => this.specsService.fetch(),\r\n      () => {}\r\n    );\r\n  }\r\n\r\n  edit(id: number): void {\r\n    const modalRef = this.modalService.open(EditSpecModalComponent);\r\n    modalRef.componentInstance.id = id;\r\n    modalRef.componentInstance.productId = this.productId;\r\n    modalRef.result.then(() =>\r\n      this.specsService.fetch(),\r\n      () => {}\r\n    );\r\n  }\r\n\r\n  create(): void {\r\n    this.edit(undefined);\r\n  }\r\n}\r\n","<div class=\"mt-5\">\r\n  <!-- begin: Filtration form -->\r\n  <div class=\"form margin-b-30\">\r\n    <div class=\"form-filtration\">\r\n      <div class=\"row align-items-center\">\r\n        <div class=\"col-md-2 margin-bottom-10-mobile\">\r\n          <form [formGroup]=\"searchGroup\">\r\n            <div>\r\n              <input type=\"text\" class=\"form-control\" name=\"searchText\" placeholder=\"Search\"\r\n                formControlName=\"searchTerm\" />\r\n              <small class=\"form-text text-muted\"><b>Search</b> by VALUE</small></div>\r\n          </form>\r\n        </div>\r\n        <div class=\"col-md-6 margin-bottom-10-mobile\"></div>\r\n        <div class=\"col-md-4 text-right margin-bottom-10-mobile\">\r\n          <button type=\"button\" class=\"btn btn-primary\" (click)=\"create()\">\r\n            Create new specification\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <!-- end: Filtration form -->\r\n\r\n  <!-- begin: Grouping -->\r\n  <ng-container *ngIf=\"grouping.getSelectedRowsCount()\">\r\n    <div class=\"form\">\r\n      <div class=\"row align-items-center form-group-actions margin-top-20 margin-bottom-20\">\r\n        <div class=\"col-xl-12\">\r\n          <div class=\"form-group form-group-inline\">\r\n            <div class=\"form-label form-label-no-wrap\">\r\n              <label class=\"font-bold font-danger\"><span>Selected records count:\r\n                  <b>{{ grouping.getSelectedRowsCount() }}</b></span></label>\r\n            </div>\r\n            <div>\r\n              <button type=\"button\" class=\"btn btn-danger font-weight-bolder font-size-sm mr-1\"\r\n                (click)=\"deleteSelected()\">\r\n                <i class=\"fa fa-trash\"></i> Delete All\r\n              </button>&nbsp;\r\n              <button type=\"button\" class=\"btn btn-light-primary font-weight-bolder font-size-sm\"\r\n                (click)=\"fetchSelected()\">\r\n                <i class=\"fa fa-stream\"></i> Fetch Selected\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </ng-container>\r\n  <!-- end: Grouping -->\r\n  <!-- begin:Table -->\r\n  <div class=\"table-responsive angular-bootstrap-table\">\r\n    <table class=\"table table-head-custom table-vertical-center overflow-hidden\">\r\n      <thead>\r\n        <th class=\"selection-cell-header\" data-row-selection=\"true\">\r\n          <label class=\"checkbox checkbox-single\"><input type=\"checkbox\" (click)=\"grouping.selectAllRows()\"\r\n              [checked]=\"grouping.checkAreAllRowsSelected()\" /><span></span></label>\r\n        </th>\r\n        <th>\r\n          ID\r\n          <app-sort-icon column=\"id\" [activeColumn]=\"sorting.column\" [activeDirection]=\"sorting.direction\"\r\n            (sort)=\"sort($event)\"></app-sort-icon>\r\n        </th>\r\n        <th>\r\n          SPECIFICATION TYPE\r\n          <app-sort-icon column=\"specId\" [activeColumn]=\"sorting.column\" [activeDirection]=\"sorting.direction\"\r\n            (sort)=\"sort($event)\"></app-sort-icon>\r\n        </th>\r\n        <th>\r\n          VALUE\r\n          <app-sort-icon column=\"value\" [activeColumn]=\"sorting.column\" [activeDirection]=\"sorting.direction\"\r\n            (sort)=\"sort($event)\"></app-sort-icon>\r\n        </th>\r\n        <th>ACTIONS</th>\r\n      </thead>\r\n      <tbody>\r\n        <tr *ngFor=\"let spec of specsService.items$ | async\">\r\n          <td class=\"selection-cell\">\r\n            <label class=\"checkbox checkbox-single\"><input type=\"checkbox\" (click)=\"grouping.selectRow(spec.id)\"\r\n                [checked]=\"grouping.isRowSelected(spec.id)\" />\r\n              <span></span>\r\n            </label>\r\n          </td>\r\n          <td>{{ spec.id }}</td>\r\n          <td>{{ specs[spec.specId] }}</td>\r\n          <td>{{ spec.value }}</td>\r\n          <td>\r\n            <button title=\"Edit spec\" class=\"btn btn-icon btn-light btn-hover-primary btn-sm mx-3\"\r\n              (click)=\"edit(spec.id)\">\r\n              <span [inlineSVG]=\"'./assets/media/svg/icons/Communication/Write.svg'\" cacheSVG=\"true\"\r\n                class=\"svg-icon svg-icon-md svg-icon-primary\">\r\n              </span>\r\n            </button>\r\n            <button title=\"Delete specification\" class=\"btn btn-icon btn-light btn-hover-danger btn-sm\"\r\n              (click)=\"delete(spec.id)\">\r\n              <span [inlineSVG]=\"'./assets/media/svg/icons/General/Trash.svg'\" cacheSVG=\"true\"\r\n                class=\"svg-icon svg-icon-md svg-icon-danger\">\r\n              </span>\r\n            </button>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n  <!-- end: Table -->\r\n  <app-paginator class=\"d-flex justify-content-between align-items-center flex-wrap\" [paginator]=\"paginator\"\r\n    [isLoading]=\"isLoading\" (paginate)=\"paginate($event)\"></app-paginator>\r\n</div>","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { of, Subscription } from 'rxjs';\r\nimport { catchError, delay, finalize, tap } from 'rxjs/operators';\r\nimport { ProductsService } from '../../../_services';\r\n\r\n@Component({\r\n  selector: 'app-delete-products-modal',\r\n  templateUrl: './delete-products-modal.component.html',\r\n  styleUrls: ['./delete-products-modal.component.scss']\r\n})\r\nexport class DeleteProductsModalComponent implements OnInit, OnDestroy {\r\n  @Input() ids: number[];\r\n  isLoading = false;\r\n  subscriptions: Subscription[] = [];\r\n\r\n  constructor(private productsService: ProductsService, public modal: NgbActiveModal) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  deleteProducts() {\r\n    this.isLoading = true;\r\n    const sb = this.productsService.deleteItems(this.ids).pipe(\r\n      delay(1000), // Remove it from your code (just for showing loading)\r\n      tap(() => this.modal.close()),\r\n      catchError((errorMessage) => {\r\n        this.modal.dismiss(errorMessage);\r\n        return of(undefined);\r\n      }),\r\n      finalize(() => {\r\n        this.isLoading = false;\r\n      })\r\n    ).subscribe();\r\n    this.subscriptions.push(sb);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscriptions.forEach(sb => sb.unsubscribe());\r\n  }\r\n}\r\n","<ng-container *ngIf=\"isLoading\">\r\n  <div class=\"progress progress-modal\">\r\n    <div class=\"progress-bar progress-bar-striped progress-bar-animated bg-primary\" role=\"progressbar\"\r\n      style=\"width: 100%\" aria-valuenow=\"100\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\r\n  </div>\r\n</ng-container>\r\n\r\n<div class=\"modal-header\">\r\n  <div class=\"modal-title h4\">Products Delete</div>\r\n</div>\r\n<div class=\"modal-body\">\r\n  <ng-container *ngIf=\"isLoading\">\r\n    <span>Products are deleting...</span>\r\n  </ng-container>\r\n\r\n  <ng-container *ngIf=\"!isLoading\">\r\n    <span>Are you sure to permanently delete selected products?</span>\r\n  </ng-container>\r\n</div>\r\n\r\n<div class=\"modal-footer\">\r\n  <div>\r\n    <button type=\"button\" class=\"btn btn-light btn-elevate mr-1\" (click)=\"modal.dismiss()\">\r\n      Cancel\r\n    </button>&nbsp;\r\n    <button type=\"button\" class=\"btn btn-primary btn-elevate\" (click)=\"deleteProducts()\">\r\n      Delete\r\n    </button>\r\n  </div>\r\n</div>","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { from, of, Subscription } from 'rxjs';\r\nimport { catchError, delay, finalize, first, tap } from 'rxjs/operators';\r\nimport { ProductSpecification } from '../../../../_models/product-specification.model';\r\nimport { SPECIFICATIONS_DICTIONARY } from '../../../../_models/specification.dictionary';\r\nimport { SpecificationsService } from '../../../../_services';\r\n\r\n@Component({\r\n  selector: 'app-fetch-specs-modal',\r\n  templateUrl: './fetch-specs-modal.component.html',\r\n  styleUrls: ['./fetch-specs-modal.component.scss']\r\n})\r\nexport class FetchSpecsModalComponent implements OnInit, OnDestroy {\r\n  @Input() ids: number[];\r\n  specs: string[] = SPECIFICATIONS_DICTIONARY;\r\n  specifications: ProductSpecification[] = [];\r\n  isLoading = false;\r\n  subscriptions: Subscription[] = [];\r\n\r\n  constructor(private specsService: SpecificationsService, public modal: NgbActiveModal) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loadSpecs();\r\n  }\r\n\r\n  loadSpecs() {\r\n    const sb = this.specsService.items$.pipe(\r\n      first()\r\n    ).subscribe((res: ProductSpecification[]) => {\r\n      this.specifications = res.filter(c => this.ids.indexOf(c.id) > -1);\r\n    });\r\n    this.subscriptions.push(sb);\r\n  }\r\n\r\n  fetchSelected() {\r\n    this.isLoading = true;\r\n    const sb = from([]).pipe( // fake => update to call request method from your server\r\n      delay(1000), // Remove it from your code (just for showing loading)\r\n      tap(() => this.modal.close()),\r\n      catchError((errorMessage) => {\r\n        this.modal.dismiss(errorMessage);\r\n        return of(undefined);\r\n      }),\r\n      finalize(() => {\r\n        this.isLoading = false;\r\n      })\r\n    ).subscribe();\r\n    this.subscriptions.push(sb);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscriptions.forEach(sb => sb.unsubscribe());\r\n  }\r\n}\r\n","<div class=\"modal-header\">\r\n  <div class=\"modal-title h4\">Fetch selected specifications</div>\r\n</div>\r\n<div class=\"modal-body overlay overlay-block cursor-default\">\r\n  <ng-container *ngIf=\"isLoading\">\r\n    <div class=\"overlay-layer\">\r\n      <div class=\"spinner spinner-lg spinner-primary\"></div>\r\n    </div>\r\n  </ng-container>\r\n\r\n  <div class=\"table-responsive angular-bootstrap-table\">\r\n    <table class=\"table table-head-custom table-vertical-center overflow-hidden\">\r\n      <thead>\r\n        <th>ID</th>\r\n        <th>SPECIFICATION TYPE</th>\r\n      </thead>\r\n      <tbody>\r\n        <tr *ngFor=\"let spec of specifications\">\r\n          <td>{{spec.id}}</td>\r\n          <td>{{specs[spec.specId]}}</td>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n\r\n</div>\r\n\r\n<div class=\"modal-footer\">\r\n  <div>\r\n    <button type=\"button\" class=\"btn btn-light btn-elevate mr-3\" (click)=\"modal.dismiss()\">Cancel</button>\r\n    <button type=\"button\" class=\"btn btn-primary btn-elevate\" (click)=\"fetchSelected()\">Fetch</button>\r\n  </div>\r\n</div>","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { NgbActiveModal, NgbDateAdapter, NgbDateParserFormatter } from '@ng-bootstrap/ng-bootstrap';\r\nimport { of, Subscription } from 'rxjs';\r\nimport { catchError, finalize, first, tap } from 'rxjs/operators';\r\nimport { Customer } from '../../../_models/customer.model';\r\nimport { CustomersService } from '../../../_services';\r\nimport { CustomAdapter, CustomDateParserFormatter, getDateFromString } from '../../../../../_metronic/core';\r\n\r\nconst EMPTY_CUSTOMER: Customer = {\r\n  id: undefined,\r\n  firstName: '',\r\n  lastName: '',\r\n  email: '',\r\n  userName: '',\r\n  gender: 'Female',\r\n  status: 2,\r\n  dob: undefined,\r\n  dateOfBbirth: '',\r\n  ipAddress: '251.237.126.210',\r\n  type: 2\r\n};\r\n\r\n@Component({\r\n  selector: 'app-edit-customer-modal',\r\n  templateUrl: './edit-customer-modal.component.html',\r\n  styleUrls: ['./edit-customer-modal.component.scss'],\r\n  // NOTE: For this example we are only providing current component, but probably\r\n  // NOTE: you will w  ant to provide your main App Module\r\n  providers: [\r\n    {provide: NgbDateAdapter, useClass: CustomAdapter},\r\n    {provide: NgbDateParserFormatter, useClass: CustomDateParserFormatter}\r\n  ]\r\n})\r\nexport class EditCustomerModalComponent implements OnInit, OnDestroy {\r\n  @Input() id: number;\r\n  isLoading$;\r\n  customer: Customer;\r\n  formGroup: FormGroup;\r\n  private subscriptions: Subscription[] = [];\r\n  constructor(\r\n    private customersService: CustomersService,\r\n    private fb: FormBuilder, public modal: NgbActiveModal\r\n    ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.isLoading$ = this.customersService.isLoading$;\r\n    this.loadCustomer();\r\n  }\r\n\r\n  loadCustomer() {\r\n    if (!this.id) {\r\n      this.customer = EMPTY_CUSTOMER;\r\n      this.loadForm();\r\n    } else {\r\n      const sb = this.customersService.getItemById(this.id).pipe(\r\n        first(),\r\n        catchError((errorMessage) => {\r\n          this.modal.dismiss(errorMessage);\r\n          return of(EMPTY_CUSTOMER);\r\n        })\r\n      ).subscribe((customer: Customer) => {\r\n        this.customer = customer;\r\n        this.loadForm();\r\n      });\r\n      this.subscriptions.push(sb);\r\n    }\r\n  }\r\n\r\n  loadForm() {\r\n    this.formGroup = this.fb.group({\r\n      firstName: [this.customer.firstName, Validators.compose([Validators.required, Validators.minLength(3), Validators.maxLength(100)])],\r\n      lastName: [this.customer.lastName, Validators.compose([Validators.required, Validators.minLength(3), Validators.maxLength(100)])],\r\n      email: [this.customer.email, Validators.compose([Validators.required, Validators.email])],\r\n      dob: [this.customer.dateOfBbirth, Validators.compose([Validators.nullValidator])],\r\n      userName: [this.customer.userName, Validators.compose([Validators.required])],\r\n      gender: [this.customer.gender, Validators.compose([Validators.required])],\r\n      ipAddress: [this.customer.ipAddress],\r\n      type: [this.customer.type, Validators.compose([Validators.required])]\r\n    });\r\n  }\r\n\r\n  save() {\r\n    this.prepareCustomer();\r\n    if (this.customer.id) {\r\n      this.edit();\r\n    } else {\r\n      this.create();\r\n    }\r\n  }\r\n\r\n  edit() {\r\n    const sbUpdate = this.customersService.update(this.customer).pipe(\r\n      tap(() => {\r\n        this.modal.close();\r\n      }),\r\n      catchError((errorMessage) => {\r\n        this.modal.dismiss(errorMessage);\r\n        return of(this.customer);\r\n      }),\r\n    ).subscribe(res => this.customer = res);\r\n    this.subscriptions.push(sbUpdate);\r\n  }\r\n\r\n  create() {\r\n    const sbCreate = this.customersService.create(this.customer).pipe(\r\n      tap(() => {\r\n        this.modal.close();\r\n      }),\r\n      catchError((errorMessage) => {\r\n        this.modal.dismiss(errorMessage);\r\n        return of(this.customer);\r\n      }),\r\n    ).subscribe((res: Customer) => this.customer = res);\r\n    this.subscriptions.push(sbCreate);\r\n  }\r\n\r\n  private prepareCustomer() {\r\n    const formData = this.formGroup.value;\r\n    this.customer.dob = new Date(formData.dob);\r\n    this.customer.email = formData.email;\r\n    this.customer.firstName = formData.firstName;\r\n    this.customer.dateOfBbirth = formData.dob;\r\n    this.customer.ipAddress = formData.ipAddress;\r\n    this.customer.lastName = formData.lastName;\r\n    this.customer.type = +formData.type;\r\n    this.customer.userName = formData.userName;\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscriptions.forEach(sb => sb.unsubscribe());\r\n  }\r\n\r\n  // helpers for View\r\n  isControlValid(controlName: string): boolean {\r\n    const control = this.formGroup.controls[controlName];\r\n    return control.valid && (control.dirty || control.touched);\r\n  }\r\n\r\n  isControlInvalid(controlName: string): boolean {\r\n    const control = this.formGroup.controls[controlName];\r\n    return control.invalid && (control.dirty || control.touched);\r\n  }\r\n\r\n  controlHasError(validation, controlName): boolean {\r\n    const control = this.formGroup.controls[controlName];\r\n    return control.hasError(validation) && (control.dirty || control.touched);\r\n  }\r\n\r\n  isControlTouched(controlName): boolean {\r\n    const control = this.formGroup.controls[controlName];\r\n    return control.dirty || control.touched;\r\n  }\r\n}\r\n","<div class=\"modal-content\">\r\n  <div class=\"modal-header\">\r\n    <div class=\"modal-title h4\" id=\"example-modal-sizes-title-lg\">\r\n      <ng-container *ngIf=\"customer\">\r\n        <ng-container *ngIf=\"customer.id\">Edit</ng-container>\r\n        <ng-container *ngIf=\"!customer.id\">Create</ng-container>\r\n        customer\r\n        <ng-container *ngIf=\"customer.id\"\r\n          >'{{ customer.firstName }} {{ customer.lastName }}'</ng-container\r\n        >\r\n      </ng-container>\r\n    </div>\r\n  </div>\r\n  <div\r\n    class=\"overlay overlay-block cursor-default modal-body\"\r\n    style=\"min-height: 404px\"\r\n  >\r\n    <ng-container *ngIf=\"isLoading$ | async\">\r\n      <div class=\"overlay-layer bg-transparent\">\r\n        <div class=\"spinner spinner-lg spinner-success\"></div>\r\n      </div>\r\n    </ng-container>\r\n\r\n    <ng-container *ngIf=\"customer\">\r\n      <form action=\"#\" class=\"form form-label-right\" [formGroup]=\"formGroup\">\r\n        <div class=\"form-group row\">\r\n          <div class=\"col-lg-4\">\r\n            <label class=\"form-label\">Enter First name</label>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control form-control-lg form-control-solid\"\r\n              name=\"firstName\"\r\n              placeholder=\"First Name\"\r\n              autocomplete=\"off\"\r\n              [class.is-invalid]=\"isControlInvalid('firstName')\"\r\n              [class.is-valid]=\"isControlValid('firstName')\"\r\n              formControlName=\"firstName\"\r\n            />\r\n            <div class=\"valid-feedback\" *ngIf=\"isControlValid('firstName')\">\r\n              First name was entered correct\r\n            </div>\r\n            <div\r\n              class=\"invalid-feedback\"\r\n              *ngIf=\"controlHasError('required', 'firstName')\"\r\n            >\r\n              First name is required\r\n            </div>\r\n            <div\r\n              class=\"invalid-feedback\"\r\n              *ngIf=\"controlHasError('minlength', 'firstName')\"\r\n            >\r\n              First name should have at least 3 symbols\r\n            </div>\r\n            <div\r\n              class=\"invalid-feedback\"\r\n              *ngIf=\"controlHasError('maxlength', 'firstName')\"\r\n            >\r\n              First name should have maximum 100 symbols\r\n            </div>\r\n          </div>\r\n          <div class=\"col-lg-4\">\r\n            <label class=\"form-label\">Enter Last name</label>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control form-control-lg form-control-solid is-invalid\"\r\n              name=\"lastName\"\r\n              placeholder=\"Last Name\"\r\n              autocomplete=\"off\"\r\n              [class.is-invalid]=\"isControlInvalid('lastName')\"\r\n              [class.is-valid]=\"isControlValid('lastName')\"\r\n              formControlName=\"lastName\"\r\n            />\r\n            <div class=\"valid-feedback\" *ngIf=\"isControlValid('lastName')\">\r\n              Last name was entered correct\r\n            </div>\r\n            <div\r\n              class=\"invalid-feedback\"\r\n              *ngIf=\"controlHasError('required', 'lastName')\"\r\n            >\r\n              Last name is required\r\n            </div>\r\n            <div\r\n              class=\"invalid-feedback\"\r\n              *ngIf=\"controlHasError('minlength', 'lastName')\"\r\n            >\r\n              Last name should have at least 3 symbols\r\n            </div>\r\n            <div\r\n              class=\"invalid-feedback\"\r\n              *ngIf=\"controlHasError('maxLength', 'lastName')\"\r\n            >\r\n              Last name should have maximum 100 symbols\r\n            </div>\r\n          </div>\r\n          <div class=\"col-lg-4\">\r\n            <label class=\"form-label\">Enter Login</label>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control form-control-lg form-control-solid\"\r\n              name=\"userName\"\r\n              placeholder=\"Login\"\r\n              autocomplete=\"off\"\r\n              [class.is-invalid]=\"isControlInvalid('userName')\"\r\n              [class.is-valid]=\"isControlValid('userName')\"\r\n              formControlName=\"userName\"\r\n            />\r\n            <div class=\"valid-feedback\" *ngIf=\"isControlValid('userName')\">\r\n              Login was entered correct\r\n            </div>\r\n            <div\r\n              class=\"invalid-feedback\"\r\n              *ngIf=\"controlHasError('required', 'userName')\"\r\n            >\r\n              Login is required\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group row\">\r\n          <div class=\"col-lg-4\">\r\n            <label class=\"form-label\">Enter Email</label>\r\n            <input\r\n              type=\"email\"\r\n              class=\"form-control form-control-lg form-control-solid\"\r\n              name=\"email\"\r\n              placeholder=\"Email\"\r\n              autocomplete=\"off\"\r\n              [class.is-invalid]=\"isControlInvalid('email')\"\r\n              [class.is-valid]=\"isControlValid('email')\"\r\n              formControlName=\"email\"\r\n            />\r\n            <div class=\"valid-feedback\" *ngIf=\"isControlValid('email')\">\r\n              Email was entered correct\r\n            </div>\r\n            <div\r\n              class=\"invalid-feedback\"\r\n              *ngIf=\"controlHasError('required', 'email')\"\r\n            >\r\n              Email is required\r\n            </div>\r\n            <div\r\n              class=\"invalid-feedback\"\r\n              *ngIf=\"controlHasError('email', 'email')\"\r\n            >\r\n              Email format is incorrect\r\n            </div>\r\n          </div>\r\n          <div class=\"col-lg-4\">\r\n            <label>Date of Birth</label>\r\n            <div class=\"input-group input-group-solid\">\r\n              <input\r\n                type=\"text\"\r\n                name=\"dob\"\r\n                class=\"form-control form-control-lg form-control-solid\"\r\n                autocomplete=\"off\"\r\n                placeholder=\"dd/mm/yyyy\"\r\n                ngbDatepicker\r\n                #d=\"ngbDatepicker\"\r\n                [class.is-invalid]=\"isControlInvalid('dob')\"\r\n                [class.is-valid]=\"isControlValid('dob')\"\r\n                formControlName=\"dob\"\r\n                readonly=\"true\"\r\n              />\r\n              <div class=\"input-group-append\" (click)=\"d.toggle()\">\r\n                <span class=\"input-group-text\">\r\n                  <i class=\"text-dark-50 flaticon-calendar\"></i>\r\n                </span>\r\n              </div>\r\n            </div>\r\n            <div class=\"valid-feedback\" *ngIf=\"isControlValid('dob')\">\r\n              Date of Birth was entered correct\r\n            </div>\r\n            <div\r\n              class=\"invalid-feedback\"\r\n              *ngIf=\"controlHasError('required', 'dob')\"\r\n            >\r\n              Please enter <b>Date of Birth</b> in 'mm/dd/yyyy' format\r\n            </div>\r\n          </div>\r\n          <div class=\"col-lg-4\">\r\n            <label class=\"form-label\">Enter IP Address</label>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control form-control-lg form-control-solid\"\r\n              name=\"ipAddress\"\r\n              placeholder=\"255.255.255.0\"\r\n              autocomplete=\"off\"\r\n              [class.is-invalid]=\"isControlInvalid('ipAddress')\"\r\n              [class.is-valid]=\"isControlValid('ipAddress')\"\r\n              formControlName=\"ipAddress\"\r\n            />\r\n            <div class=\"valid-feedback\" *ngIf=\"isControlValid('ipAddress')\">\r\n              Login was entered correct\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group row\">\r\n          <div class=\"col-lg-4\">\r\n            <label>Select Gender</label>\r\n            <select\r\n              class=\"form-control form-control-lg form-control-solid\"\r\n              name=\"gender\"\r\n              [class.is-invalid]=\"isControlInvalid('gender')\"\r\n              formControlName=\"gender\"\r\n            >\r\n              <option value=\"Female\">Female</option>\r\n              <option value=\"Male\">Male</option>\r\n            </select>\r\n            <div class=\"feedback\">Please select <b>Gender</b></div>\r\n          </div>\r\n          <div class=\"col-lg-4\">\r\n            <label>Select Type</label>\r\n            <select\r\n              class=\"form-control form-control-lg form-control-solid\"\r\n              name=\"type\"\r\n              formControlName=\"type\"\r\n            >\r\n              <option value=\"1\">Business</option>\r\n              <option value=\"2\">Individual</option>\r\n            </select>\r\n            <div class=\"feedback\">Please select <b>Type</b></div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </ng-container>\r\n  </div>\r\n  <div class=\"modal-footer\">\r\n    <button\r\n      type=\"button\"\r\n      class=\"btn btn-light btn-elevate mr-2\"\r\n      (click)=\"modal.dismiss()\"\r\n    >\r\n      Cancel\r\n    </button>\r\n    <ng-container *ngIf=\"customer\">\r\n      <button\r\n        type=\"submit\"\r\n        class=\"btn btn-primary btn-elevate\"\r\n        (click)=\"save()\"\r\n        [disabled]=\"formGroup.invalid\"\r\n      >\r\n        Save\r\n      </button>\r\n    </ng-container>\r\n  </div>\r\n</div>\r\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Subscription, of } from 'rxjs';\r\nimport { catchError, delay, finalize, tap } from 'rxjs/operators';\r\nimport { RemarksService } from '../../../../_services';\r\n\r\n@Component({\r\n  selector: 'app-delete-remarks-modal',\r\n  templateUrl: './delete-remarks-modal.component.html',\r\n  styleUrls: ['./delete-remarks-modal.component.scss']\r\n})\r\nexport class DeleteRemarksModalComponent implements OnInit, OnDestroy {\r\n  @Input() ids: number[];\r\n  isLoading = false;\r\n  subscriptions: Subscription[] = [];\r\n\r\n  constructor(private remarksService: RemarksService, public modal: NgbActiveModal) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  deleteRemarks() {\r\n    this.isLoading = true;\r\n    const sb = this.remarksService.deleteItems(this.ids).pipe(\r\n      delay(1000), // Remove it from your code (just for showing loading)\r\n      tap(() => this.modal.close()),\r\n      catchError((errorMessage) => {\r\n        this.modal.dismiss(errorMessage);\r\n        return of(undefined);\r\n      }),\r\n      finalize(() => {\r\n        this.isLoading = false;\r\n      })\r\n    ).subscribe();\r\n    this.subscriptions.push(sb);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscriptions.forEach(sb => sb.unsubscribe());\r\n  }\r\n}\r\n","<ng-container *ngIf=\"isLoading\">\r\n  <div class=\"progress progress-modal\">\r\n    <div class=\"progress-bar progress-bar-striped progress-bar-animated bg-primary\" role=\"progressbar\"\r\n      style=\"width: 100%\" aria-valuenow=\"100\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\r\n  </div>\r\n</ng-container>\r\n\r\n<div class=\"modal-header\">\r\n  <div class=\"modal-title h4\">Remarks Delete</div>\r\n</div>\r\n<div class=\"modal-body\">\r\n  <ng-container *ngIf=\"isLoading\">\r\n    <span>Remarks are deleting...</span>\r\n  </ng-container>\r\n\r\n  <ng-container *ngIf=\"!isLoading\">\r\n    <span>Are you sure to permanently delete selected remarks?</span>\r\n  </ng-container>\r\n</div>\r\n\r\n<div class=\"modal-footer\">\r\n  <div>\r\n    <button type=\"button\" class=\"btn btn-light btn-elevate mr-1\" (click)=\"modal.dismiss()\">\r\n      Cancel\r\n    </button>&nbsp;\r\n    <button type=\"button\" class=\"btn btn-primary btn-elevate\" (click)=\"deleteRemarks()\">\r\n      Delete\r\n    </button>\r\n  </div>\r\n</div>","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { of, Subscription } from 'rxjs';\r\nimport { catchError, delay, finalize, tap } from 'rxjs/operators';\r\nimport { RemarksService } from '../../../../_services';\r\n\r\n@Component({\r\n  selector: 'app-delete-remark-modal',\r\n  templateUrl: './delete-remark-modal.component.html',\r\n  styleUrls: ['./delete-remark-modal.component.scss']\r\n})\r\nexport class DeleteRemarkModalComponent implements OnInit, OnDestroy {\r\n  @Input() id: number;\r\n  isLoading = false;\r\n  subscriptions: Subscription[] = [];\r\n\r\n  constructor(private remraksService: RemarksService, public modal: NgbActiveModal) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  deleteRemark() {\r\n    this.isLoading = true;\r\n    const sb = this.remraksService.delete(this.id).pipe(\r\n      delay(1000), // Remove it from your code (just for showing loading)\r\n      tap(() => this.modal.close()),\r\n      catchError((err) => {\r\n        this.modal.dismiss(err);\r\n        return of(undefined);\r\n      }),\r\n      finalize(() => {\r\n        this.isLoading = false;\r\n      })\r\n    ).subscribe();\r\n    this.subscriptions.push(sb);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscriptions.forEach(sb => sb.unsubscribe());\r\n  }\r\n}\r\n","<ng-container *ngIf=\"isLoading\">\r\n  <div class=\"progress progress-modal\">\r\n    <div class=\"progress-bar progress-bar-striped progress-bar-animated bg-primary\" role=\"progressbar\"\r\n      style=\"width: 100%\" aria-valuenow=\"100\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\r\n  </div>\r\n</ng-container>\r\n\r\n<div class=\"modal-header\">\r\n  <div class=\"modal-title h4\">Remark Delete</div>\r\n</div>\r\n<div class=\"modal-body\">\r\n  <ng-container *ngIf=\"isLoading\">\r\n    <span>Remark is deleting...</span>\r\n  </ng-container>\r\n\r\n  <ng-container *ngIf=\"!isLoading\">\r\n    <span>Are you sure to permanently delete this remark?</span>\r\n  </ng-container>\r\n</div>\r\n\r\n<div class=\"modal-footer\">\r\n  <div>\r\n    <button type=\"button\" class=\"btn btn-light btn-elevate mr-1\" (click)=\"modal.dismiss()\">\r\n      Cancel\r\n    </button>&nbsp;\r\n    <button type=\"button\" class=\"btn btn-primary btn-elevate\" (click)=\"deleteRemark()\">\r\n      Delete\r\n    </button>\r\n  </div>\r\n</div>","import { Injectable, OnDestroy, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { forkJoin, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { TableService, TableResponseModel, ITableState } from '../../../../_metronic/shared/crud-table';\r\nimport { baseFilter } from '../../../../_fake/fake-helpers/http-extenstions';\r\nimport { environment } from '../../../../../environments/environment';\r\nimport { ProductRemark } from '../../_models/product-remark.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RemarksService extends TableService<ProductRemark> implements OnDestroy {\r\n  API_URL = `${environment.apiUrl}/productRemarks`;\r\n  constructor(@Inject(HttpClient) http) {\r\n    super(http);\r\n  }\r\n\r\n  // READ\r\n  find(tableState: ITableState): Observable<TableResponseModel<ProductRemark>> {\r\n    return this.http.get<ProductRemark[]>(this.API_URL).pipe(\r\n      map((response: ProductRemark[]) => {\r\n        const filteredResult = baseFilter(response.filter(el => el.carId === tableState.entityId), tableState);\r\n        const result: TableResponseModel<ProductRemark> = {\r\n          items: filteredResult.items,\r\n          total: filteredResult.total\r\n        };\r\n        return result;\r\n      })\r\n    );\r\n  }\r\n\r\n  deleteItems(ids: number[] = []): Observable<any> {\r\n    const tasks$ = [];\r\n    ids.forEach(id => {\r\n      tasks$.push(this.delete(id));\r\n    });\r\n    return forkJoin(tasks$);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscriptions.forEach(sb => sb.unsubscribe());\r\n  }\r\n}\r\n","// Services\r\nexport { CustomersService } from './fake/customers.service'; // You have to comment this, when your real back-end is done\r\nexport { ProductsService } from './fake/products.service'; // You have to comment this, when your real back-end is done\r\nexport { SpecificationsService } from './fake/specifications.service'; // You have to comment this, when your real back-end is done\r\nexport { RemarksService } from './fake/remarks.service'; // You have to comment this, when your real back-end is done\r\n// export { CustomersService } from './customers.service'; // You have to uncomment this, when your real back-end is done\r\n// export { ProductsService } from './products.service'; // You have to uncomment this, when your real back-end is done\r\n// export { SpecificationsService } from './specifications.service'; // You have to uncomment this, when your real back-end is done\r\n// export { RemarksService } from './remarks.service'; // You have to uncomment this, when your real back-end is done\r\n","export const SPECIFICATIONS_DICTIONARY: string[] = [\r\n  'Seats',\r\n  'Fuel Type',\r\n  'Stock',\r\n  'Door count',\r\n  'Engine',\r\n  'Transmission',\r\n  'Drivetrain',\r\n  'Combined MPG',\r\n  'Warranty',\r\n  'Wheels'\r\n];\r\n","import { Injectable, OnDestroy, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { forkJoin, Observable } from 'rxjs';\r\nimport { exhaustMap, map } from 'rxjs/operators';\r\nimport { TableService, TableResponseModel, ITableState, BaseModel } from '../../../../_metronic/shared/crud-table';\r\nimport { Product } from '../../_models/product.model';\r\nimport { baseFilter } from '../../../../_fake/fake-helpers/http-extenstions';\r\nimport { environment } from '../../../../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProductsService extends TableService<Product> implements OnDestroy {\r\n  API_URL = `${environment.apiUrl}/products`;\r\n  constructor(@Inject(HttpClient) http) {\r\n    super(http);\r\n  }\r\n\r\n  // READ\r\n  find(tableState: ITableState): Observable<TableResponseModel<Product>> {\r\n    return this.http.get<Product[]>(this.API_URL).pipe(\r\n      map((response: Product[]) => {\r\n        const filteredResult = baseFilter(response, tableState);\r\n        const result: TableResponseModel<Product> = {\r\n          items: filteredResult.items,\r\n          total: filteredResult.total\r\n        };\r\n        return result;\r\n      })\r\n    );\r\n  }\r\n\r\n  deleteItems(ids: number[] = []): Observable<any> {\r\n    const tasks$ = [];\r\n    ids.forEach(id => {\r\n      tasks$.push(this.delete(id));\r\n    });\r\n    return forkJoin(tasks$);\r\n  }\r\n\r\n  updateStatusForItems(ids: number[], status: number): Observable<any> {\r\n    return this.http.get<Product[]>(this.API_URL).pipe(\r\n      map((products: Product[]) => {\r\n        return products.filter(c => ids.indexOf(c.id) > -1).map(c => {\r\n          c.status = status;\r\n          return c;\r\n        });\r\n      }),\r\n      exhaustMap((products: Product[]) => {\r\n        const tasks$ = [];\r\n        products.forEach(product => {\r\n          tasks$.push(this.update(product));\r\n        });\r\n        return forkJoin(tasks$);\r\n      })\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscriptions.forEach(sb => sb.unsubscribe());\r\n  }\r\n}\r\n","import { Component, Input, OnChanges, OnDestroy, OnInit } from '@angular/core';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { of, Subscription } from 'rxjs';\r\nimport { catchError, delay, finalize, first, tap } from 'rxjs/operators';\r\nimport { Customer } from '../../../_models/customer.model';\r\nimport { CustomersService } from '../../../_services';\r\n\r\n@Component({\r\n  selector: 'app-update-customers-status-modal',\r\n  templateUrl: './update-customers-status-modal.component.html',\r\n  styleUrls: ['./update-customers-status-modal.component.scss']\r\n})\r\nexport class UpdateCustomersStatusModalComponent implements OnInit, OnDestroy {\r\n  @Input() ids: number[];\r\n  status = 2;\r\n  customers: Customer[] = [];\r\n  isLoading = false;\r\n  subscriptions: Subscription[] = [];\r\n\r\n  constructor(private customersService: CustomersService, public modal: NgbActiveModal) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loadCustomers();\r\n  }\r\n\r\n  loadCustomers() {\r\n    const sb = this.customersService.items$.pipe(\r\n      first()\r\n    ).subscribe((res: Customer[]) => {\r\n      this.customers = res.filter(c => this.ids.indexOf(c.id) > -1);\r\n    });\r\n    this.subscriptions.push(sb);\r\n  }\r\n\r\n  updateCustomersStatus() {\r\n    this.isLoading = true;\r\n    const sb = this.customersService.updateStatusForItems(this.ids, +this.status).pipe(\r\n      delay(1000), // Remove it from your code (just for showing loading)\r\n      tap(() => this.modal.close()),\r\n      catchError((errorMessage) => {\r\n        this.modal.dismiss(errorMessage);\r\n        return of(undefined);\r\n      }),\r\n      finalize(() => {\r\n        this.isLoading = false;\r\n      })\r\n    ).subscribe();\r\n    this.subscriptions.push(sb);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscriptions.forEach(sb => sb.unsubscribe());\r\n  }\r\n}\r\n","<div class=\"modal-header\">\r\n  <div class=\"modal-title h4\">Status update for selected customers</div>\r\n</div>\r\n<div class=\"modal-body overlay overlay-block cursor-default\">\r\n  <ng-container *ngIf=\"isLoading\">\r\n    <div class=\"overlay-layer\">\r\n      <div class=\"spinner spinner-lg spinner-primary\"></div>\r\n    </div>\r\n  </ng-container>\r\n\r\n  <div class=\"table-responsive angular-bootstrap-table\">\r\n    <table class=\"table table-head-custom table-vertical-center overflow-hidden\">\r\n      <thead>\r\n        <th>FIRSTNAME</th>\r\n        <th>LASTNAME</th>\r\n        <th>STATUS</th>\r\n      </thead>\r\n      <tbody>\r\n        <tr *ngFor=\"let customer of customers\">\r\n          <td>{{customer.firstName}}</td>\r\n          <td>{{customer.lastName}}</td>\r\n          <td>\r\n            <span class=\"label label-lg label-inline\" [class.label-light-danger]=\"customer.status === 1\"\r\n              [class.label-light-success]=\"customer.status === 2\" [class.label-light-primary]=\"customer.status === 3\">\r\n              <ng-container *ngIf=\"customer.status === 1\">Suspended</ng-container>\r\n              <ng-container *ngIf=\"customer.status === 2\">Active</ng-container>\r\n              <ng-container *ngIf=\"customer.status === 3\">Pending</ng-container>\r\n            </span>\r\n          </td>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n\r\n</div>\r\n\r\n<div class=\"form modal-footer\">\r\n  <div class=\"form-group mr-2\">\r\n    <select class=\"form-control\" [(ngModel)]=\"status\" name=\"status\">\r\n      <option value=\"1\">Suspended</option>\r\n      <option value=\"2\">Active</option>\r\n      <option value=\"3\">Pending</option>\r\n    </select>\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <button type=\"button\" class=\"btn btn-light btn-elevate mr-3\" (click)=\"modal.dismiss()\">Cancel</button>\r\n    <button type=\"button\" class=\"btn btn-primary btn-elevate\" (click)=\"updateCustomersStatus()\">Update Status</button>\r\n  </div>\r\n</div>","import { Injectable, OnDestroy, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { forkJoin, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { TableService, TableResponseModel, ITableState } from '../../../../_metronic/shared/crud-table';\r\nimport { baseFilter } from '../../../../_fake/fake-helpers/http-extenstions';\r\nimport { environment } from '../../../../../environments/environment';\r\nimport { ProductSpecification } from '../../_models/product-specification.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SpecificationsService extends TableService<ProductSpecification> implements OnDestroy {\r\n  API_URL = `${environment.apiUrl}/productSpecs`;\r\n  constructor(@Inject(HttpClient) http) {\r\n    super(http);\r\n  }\r\n\r\n  // READ\r\n  find(tableState: ITableState): Observable<TableResponseModel<ProductSpecification>> {\r\n    return this.http.get<ProductSpecification[]>(this.API_URL).pipe(\r\n      map((response: ProductSpecification[]) => {\r\n        const filteredResult = baseFilter(response.filter(el => el.carId === tableState.entityId), tableState);\r\n        const result: TableResponseModel<ProductSpecification> = {\r\n          items: filteredResult.items,\r\n          total: filteredResult.total\r\n        };\r\n        return result;\r\n      })\r\n    );\r\n  }\r\n\r\n  deleteItems(ids: number[] = []): Observable<any> {\r\n    const tasks$ = [];\r\n    ids.forEach(id => {\r\n      tasks$.push(this.delete(id));\r\n    });\r\n    return forkJoin(tasks$);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscriptions.forEach(sb => sb.unsubscribe());\r\n  }\r\n}\r\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Subscription } from 'rxjs';\r\nimport { first } from 'rxjs/operators';\r\nimport { Customer } from '../../../_models/customer.model';\r\nimport { CustomersService } from '../../../_services';\r\n\r\n@Component({\r\n  selector: 'app-fetch-customers-modal',\r\n  templateUrl: './fetch-customers-modal.component.html',\r\n  styleUrls: ['./fetch-customers-modal.component.scss']\r\n})\r\nexport class FetchCustomersModalComponent implements OnInit, OnDestroy {\r\n  @Input() ids: number[];\r\n  customers: Customer[] = [];\r\n  isLoading = false;\r\n  subscriptions: Subscription[] = [];\r\n\r\n  constructor(private customersService: CustomersService, public modal: NgbActiveModal) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loadCustomers();\r\n  }\r\n\r\n  loadCustomers() {\r\n    const sb = this.customersService.items$.pipe(\r\n      first()\r\n    ).subscribe((res: Customer[]) => {\r\n      this.customers = res.filter(c => this.ids.indexOf(c.id) > -1);\r\n    });\r\n    this.subscriptions.push(sb);\r\n  }\r\n\r\n  fetchSelected() {\r\n    this.isLoading = true;\r\n    // just imitation, call server for fetching data\r\n    setTimeout(() => {\r\n      this.isLoading = false;\r\n      this.modal.close();\r\n    }, 1000);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscriptions.forEach(sb => sb.unsubscribe());\r\n  }\r\n}\r\n","<div class=\"modal-header\">\r\n  <div class=\"modal-title h4\">Fetch selected customers</div>\r\n</div>\r\n<div class=\"modal-body overlay overlay-block cursor-default\">\r\n  <ng-container *ngIf=\"isLoading\">\r\n    <div class=\"overlay-layer\">\r\n      <div class=\"spinner spinner-lg spinner-primary\"></div>\r\n    </div>\r\n  </ng-container>\r\n\r\n  <div class=\"table-responsive angular-bootstrap-table\">\r\n    <table class=\"table table-head-custom table-vertical-center overflow-hidden\">\r\n      <thead>\r\n        <th>FIRSTNAME</th>\r\n        <th>LASTNAME</th>\r\n        <th>STATUS</th>\r\n      </thead>\r\n      <tbody>\r\n        <tr *ngFor=\"let customer of customers\">\r\n          <td>{{customer.firstName}}</td>\r\n          <td>{{customer.lastName}}</td>\r\n          <td>\r\n            <span class=\"label label-lg label-inline\" [class.label-light-danger]=\"customer.status === 1\"\r\n              [class.label-light-success]=\"customer.status === 2\" [class.label-light-primary]=\"customer.status === 3\">\r\n              <ng-container *ngIf=\"customer.status === 1\">Suspended</ng-container>\r\n              <ng-container *ngIf=\"customer.status === 2\">Active</ng-container>\r\n              <ng-container *ngIf=\"customer.status === 3\">Pending</ng-container>\r\n            </span>\r\n          </td>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n\r\n</div>\r\n\r\n<div class=\"modal-footer\">\r\n  <div>\r\n    <button type=\"button\" class=\"btn btn-light btn-elevate mr-3\" (click)=\"modal.dismiss()\">Cancel</button>\r\n    <button type=\"button\" class=\"btn btn-primary btn-elevate\" (click)=\"fetchSelected()\">Fetch</button>\r\n  </div>\r\n</div>","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { of, Subscription } from 'rxjs';\r\nimport { catchError, first, tap } from 'rxjs/operators';\r\nimport { ProductSpecification } from '../../../../_models/product-specification.model';\r\nimport { SPECIFICATIONS_DICTIONARY } from '../../../../_models/specification.dictionary';\r\nimport { SpecificationsService } from '../../../../_services';\r\n\r\nconst EMPTY_SPEC: ProductSpecification = {\r\n  id: undefined,\r\n  carId: undefined,\r\n  specId: 1,\r\n  specName: '',\r\n  value: ''\r\n};\r\n\r\n@Component({\r\n  selector: 'app-edit-spec-modal',\r\n  templateUrl: './edit-spec-modal.component.html',\r\n  styleUrls: ['./edit-spec-modal.component.scss']\r\n})\r\nexport class EditSpecModalComponent implements OnInit, OnDestroy {\r\n  @Input() id: number;\r\n  @Input() productId: number;\r\n  isLoading$;\r\n  specs: string[] = SPECIFICATIONS_DICTIONARY;\r\n  spec: ProductSpecification;\r\n  formGroup: FormGroup;\r\n  private subscriptions: Subscription[] = [];\r\n  constructor(\r\n    private specsService: SpecificationsService,\r\n    private fb: FormBuilder, public modal: NgbActiveModal\r\n    ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.isLoading$ = this.specsService.isLoading$;\r\n    this.loadSpecs();\r\n  }\r\n\r\n  loadSpecs() {\r\n    if (!this.id) {\r\n      this.spec = EMPTY_SPEC;\r\n      this.spec.carId = this.productId;\r\n      this.loadForm();\r\n    } else {\r\n      const sb = this.specsService.getItemById(this.id).pipe(\r\n        first(),\r\n        catchError((errorMessage) => {\r\n          this.modal.dismiss(errorMessage);\r\n          const empty = EMPTY_SPEC;\r\n          empty.carId = this.productId;\r\n          return of(empty);\r\n        })\r\n      ).subscribe((spec: ProductSpecification) => {\r\n        this.spec = spec;\r\n        this.loadForm();\r\n      });\r\n      this.subscriptions.push(sb);\r\n    }\r\n  }\r\n\r\n  loadForm() {\r\n    this.formGroup = this.fb.group({\r\n      value: [this.spec.value, Validators.compose([Validators.required, Validators.minLength(3), Validators.maxLength(10000)])],\r\n      specId: [this.spec.specId, Validators.compose([Validators.nullValidator])],\r\n    });\r\n  }\r\n\r\n  save() {\r\n    this.prepareSpec();\r\n    if (this.spec.id) {\r\n      this.edit();\r\n    } else {\r\n      this.create();\r\n    }\r\n  }\r\n\r\n  edit() {\r\n    const sbUpdate = this.specsService.update(this.spec).pipe(\r\n      tap(() => {\r\n        this.modal.close();\r\n      }),\r\n      catchError((errorMessage) => {\r\n        this.modal.dismiss(errorMessage);\r\n        return of(this.spec);\r\n      }),\r\n    ).subscribe(res => this.spec = res);\r\n    this.subscriptions.push(sbUpdate);\r\n  }\r\n\r\n  create() {\r\n    const sbCreate = this.specsService.create(this.spec).pipe(\r\n      tap(() => {\r\n        this.modal.close();\r\n      }),\r\n      catchError((errorMessage) => {\r\n        this.modal.dismiss(errorMessage);\r\n        return of(this.spec);\r\n      }),\r\n    ).subscribe((res: ProductSpecification) => this.spec = res);\r\n    this.subscriptions.push(sbCreate);\r\n  }\r\n\r\n  private prepareSpec() {\r\n    const formData = this.formGroup.value;\r\n    this.spec.carId = this.productId;\r\n    this.spec.specId = formData.specId;\r\n    this.spec.specName = this.specs[this.spec.specId];\r\n    this.spec.value = formData.value;\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscriptions.forEach(sb => sb.unsubscribe());\r\n  }\r\n\r\n  // helpers for View\r\n  isControlValid(controlName: string): boolean {\r\n    const control = this.formGroup.controls[controlName];\r\n    return control.valid && (control.dirty || control.touched);\r\n  }\r\n\r\n  isControlInvalid(controlName: string): boolean {\r\n    const control = this.formGroup.controls[controlName];\r\n    return control.invalid && (control.dirty || control.touched);\r\n  }\r\n\r\n  controlHasError(validation, controlName): boolean {\r\n    const control = this.formGroup.controls[controlName];\r\n    return control.hasError(validation) && (control.dirty || control.touched);\r\n  }\r\n\r\n  isControlTouched(controlName): boolean {\r\n    const control = this.formGroup.controls[controlName];\r\n    return control.dirty || control.touched;\r\n  }\r\n}\r\n","<div class=\"modal-content\">\r\n  <div class=\"modal-header\">\r\n    <div class=\"modal-title h4\" id=\"example-modal-sizes-title-lg\">\r\n      <ng-container *ngIf=\"spec\">\r\n        <ng-container *ngIf=\"spec.id\">Edit</ng-container>\r\n        <ng-container *ngIf=\"!spec.id\">Create</ng-container>\r\n        specification\r\n        <ng-container *ngIf=\"spec.id\"> '{{specs[spec.specId]}}</ng-container>\r\n      </ng-container>\r\n    </div>\r\n  </div>\r\n  <div class=\"overlay overlay-block cursor-default modal-body\">\r\n    <ng-container *ngIf=\"isLoading$ | async\">\r\n      <div class=\"overlay-layer bg-transparent\">\r\n        <div class=\"spinner spinner-lg spinner-success\"></div>\r\n      </div>\r\n    </ng-container>\r\n\r\n    <ng-container *ngIf=\"spec\">\r\n      <form action=\"#\" class=\"form form-label-right\" [formGroup]=\"formGroup\">\r\n        <div class=\"form-group row\">\r\n          <div class=\"col-lg-12\">\r\n            <label>Select Specification Type</label>\r\n            <select class=\"form-control form-control-lg form-control-solid\" name=\"specId\" formControlName=\"specId\">\r\n              <option [value]=\"i\" *ngFor=\"let sp of specs; let i = index\">{{sp}}</option>\r\n            </select>\r\n            <div class=\"feedback\">Please select <b>Specification Type</b></div>\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group row\">\r\n          <div class=\"col-xl-12\">\r\n            <label class=\"form-label\">Enter Value</label>\r\n            <input type=\"text\" class=\"form-control form-control-lg form-control-solid\" name=\"value\" placeholder=\"Value\"\r\n              autocomplete=\"off\" [class.is-invalid]=\"isControlInvalid('value')\"\r\n              [class.is-valid]=\"isControlValid('value')\" formControlName=\"value\" />\r\n            <div class=\"valid-feedback\" *ngIf=\"isControlValid('value')\">Value was entered correct</div>\r\n            <div class=\"invalid-feedback\" *ngIf=\"controlHasError('required', 'value')\">Value is required</div>\r\n            <div class=\"invalid-feedback\" *ngIf=\"controlHasError('minlength', 'value')\">Value should have at least 3\r\n              symbols</div>\r\n            <div class=\"invalid-feedback\" *ngIf=\"controlHasError('maxLength', 'value')\">Value should have maximum 10000\r\n              symbols</div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </ng-container>\r\n  </div>\r\n  <div class=\"modal-footer\">\r\n    <button type=\"button\" class=\"btn btn-light btn-elevate mr-2\" (click)=\"modal.dismiss()\">Cancel</button>\r\n    <ng-container *ngIf=\"spec\">\r\n\r\n      <button type=\"submit\" class=\"btn btn-primary btn-elevate\" (click)=\"save()\"\r\n        [disabled]=\"formGroup.invalid\">Save</button>\r\n    </ng-container>\r\n  </div>\r\n</div>"]}