{"version":3,"sources":["webpack:///src/app/modules/sliders/list-slider/list-slider.component.ts","webpack:///src/app/modules/sliders/list-slider/list-slider.component.html","webpack:///src/app/modules/sliders/add-new-slider/add-new-slider.component.ts","webpack:///src/app/modules/sliders/add-new-slider/add-new-slider.component.html","webpack:///src/app/modules/sliders/_services/slider.service.ts","webpack:///src/app/modules/sliders/sliders.module.ts","webpack:///src/app/modules/sliders/sliders-routing.module.ts","webpack:///src/app/modules/sliders/sliders.component.ts","webpack:///src/app/modules/sliders/sliders.component.html","webpack:///src/app/modules/sliders/edit-new-slider/edit-new-slider.component.ts","webpack:///src/app/modules/sliders/edit-new-slider/edit-new-slider.component.html","webpack:///src/app/modules/sliders/delete-new-slider/delete-new-slider.component.ts","webpack:///src/app/modules/sliders/delete-new-slider/delete-new-slider.component.html"],"names":["ListSliderComponent","_serviceSlider","modalService","sliders","search","isLoading$","URL_BACKEND","allSliders","allSlider","subscribe","resp","console","log","modalRef","open","centered","size","componentInstance","SliderC","slider","unshift","slider_selected","SliderE","index","findIndex","item","_id","SliderD","splice","openCreate","refresh","selector","templateUrl","styleUrls","AddNewSliderComponent","_sliderService","modal","toaster","name","link","imagen_file","imagen_previzualizacion","$event","target","files","type","indexOf","text","reader","FileReader","readAsDataURL","onloadend","result","formData","FormData","append","createSlider","emit","close","processFile","save","SliderService","http","authservice","isLoadingSubject","asObservable","next","headers","token","URL","get","pipe","data","post","put","categorie_id","providedIn","SlidersModule","declarations","imports","routes","path","component","children","SlidersRoutingModule","forChild","exports","SlidersComponent","EditNewSliderComponent","state","title","imagen","updateSlider","DeleteNewSliderComponent","sliderService","deleteSlider","error","message"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACoCM;;AACI;;AACJ;;;;;;AAqBkB;;AAAyF;;AAAM;;;;;;AAC/F;;AAAwF;;AAAU;;;;;;;;AAPtG;;AACE;;AACE;;AACF;;AACA;;AAAI;;AAAkB;;AACtB;;AACE;;AACA;;AACJ;;AACE;;AACE;;AAAG;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACD;;AAEI;;AAAA;;AACI;;AACI;;AACA;;AACA;;AACJ;;AACJ;;AAEJ;;AACF;;AAEA;;AAAA;;AAAG;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACD;;AAEI;;AAAA;;AACI;;AACI;;AACA;;AACA;;AACJ;;AACJ;;AAEJ;;AACF;;AACF;;AACF;;;;;;;;AApCS;;AAAA;;AAEH;;AAAA;;AAE8D;;AAAA;;AACD;;AAAA;;;;UD/C1EA,mB;AAOX,qCACSC,cADT,EAESC,YAFT,EAE+B;AAAA;;AADtB,eAAAD,cAAA,GAAAA,cAAA;AACA,eAAAC,YAAA,GAAAA,YAAA;AAPT,eAAAC,OAAA,GAAc,EAAd;AACA,eAAAC,MAAA,GAAa,EAAb;AACA,eAAAC,UAAA,GAAiB,IAAjB;AAEA,eAAAC,WAAA,GAAkB,iEAAlB;AAIK;;;;iBAEL,oBAAQ;AACN,iBAAKD,UAAL,GAAkB,KAAKJ,cAAL,CAAoBI,UAAtC;AACA,iBAAKE,UAAL;AACD;;;iBACD,sBAAU;AAAA;;AACR,iBAAKN,cAAL,CAAoBO,SAApB,CAA8B,KAAKJ,MAAnC,EAA2CK,SAA3C,CAAqD,UAACC,IAAD,EAAc;AACjEC,qBAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,mBAAI,CAACP,OAAL,GAAeO,IAAI,CAACP,OAApB;AACD,aAHD;AAID;;;iBACD,mBAAO;AACL,iBAAKC,MAAL,GAAc,EAAd;AACA,iBAAKG,UAAL;AACD;;;iBACD,sBAAU;AAAA;;AACR,gBAAMM,QAAQ,GAAG,KAAKX,YAAL,CAAkBY,IAAlB,CAAuB,8FAAvB,EAA6C;AAACC,sBAAQ,EAAC,IAAV;AAAgBC,kBAAI,EAAE;AAAtB,aAA7C,CAAjB;AAEAH,oBAAQ,CAACI,iBAAT,CAA2BC,OAA3B,CAAmCT,SAAnC,CAA6C,UAACU,MAAD,EAAgB;AAC3D,oBAAI,CAAChB,OAAL,CAAaiB,OAAb,CAAqBD,MAArB;AACD,aAFD;AAGD;;;iBAED,oBAAWA,MAAX,EAAiB;AAAA;;AACf,gBAAMN,QAAQ,GAAG,KAAKX,YAAL,CAAkBY,IAAlB,CAAuB,iGAAvB,EAA8C;AAACC,sBAAQ,EAAC,IAAV;AAAgBC,kBAAI,EAAE;AAAtB,aAA9C,CAAjB;AACAH,oBAAQ,CAACI,iBAAT,CAA2BI,eAA3B,GAA6CF,MAA7C;AAEAN,oBAAQ,CAACI,iBAAT,CAA2BK,OAA3B,CAAmCb,SAAnC,CAA6C,UAACU,MAAD,EAAgB;AAC3D,kBAAII,KAAK,GAAG,MAAI,CAACpB,OAAL,CAAaqB,SAAb,CAAuB,UAAAC,IAAI;AAAA,uBAAIA,IAAI,CAACC,GAAL,IAAYP,MAAM,CAACO,GAAvB;AAAA,eAA3B,CAAZ;;AACA,kBAAGH,KAAK,IAAI,CAAC,CAAb,EAAe;AACb,sBAAI,CAACpB,OAAL,CAAaoB,KAAb,IAAsBJ,MAAtB;AACD;AACF,aALD;AAMD;;;iBACD,iBAAOA,MAAP,EAAa;AAAA;;AACX,gBAAMN,QAAQ,GAAG,KAAKX,YAAL,CAAkBY,IAAlB,CAAuB,uGAAvB,EAAgD;AAACC,sBAAQ,EAAC,IAAV;AAAgBC,kBAAI,EAAE;AAAtB,aAAhD,CAAjB;AACAH,oBAAQ,CAACI,iBAAT,CAA2BI,eAA3B,GAA6CF,MAA7C;AAEAN,oBAAQ,CAACI,iBAAT,CAA2BU,OAA3B,CAAmClB,SAAnC,CAA6C,UAACC,IAAD,EAAc;AACzD,kBAAIa,KAAK,GAAG,MAAI,CAACpB,OAAL,CAAaqB,SAAb,CAAuB,UAAAC,IAAI;AAAA,uBAAIA,IAAI,CAACC,GAAL,IAAYP,MAAM,CAACO,GAAvB;AAAA,eAA3B,CAAZ;;AACA,kBAAGH,KAAK,IAAI,CAAC,CAAb,EAAe;AACb,sBAAI,CAACpB,OAAL,CAAayB,MAAb,CAAoBL,KAApB,EAA0B,CAA1B;AACD;AACF,aALD;AAMD;;;;;;;yBAvDUvB,mB,EAAmB,uI,EAAA,oI;AAAA,O;;;cAAnBA,mB;AAAmB,wC;AAAA,iB;AAAA,e;AAAA,o1G;AAAA;AAAA;ACbhC;;AACI;;AACE;;AACE;;AAAuB;;AAA0D;;AAAa;;AAChG;;AACA;;AACE;;AAGE;AAAA,qBAAS,IAAA6B,UAAA,EAAT;AAAqB,aAArB;;AACC;;AAAoD;;AAAY;;AAErE;;AACF;;AACA;;AAEE;;AACE;;AACE;;AACE;;AAME;AAAA;AAAA,eAAoB,aAApB,EAAoB;AAAA,qBACL,IAAAtB,UAAA,EADK;AACO,aAD3B;;AANF;;AAQE;;AACC;;AAAG;;AAAM;;AAAK;;AAAY;;AAE/B;;AACA;;AACE;;AAA6B;AAAA,qBAAS,IAAAuB,OAAA,EAAT;AAAkB,aAAlB;;AAAoB;;AAAO;;AAC1D;;AACF;;AACF;;AACA;;;;AAIA;;AACE;;AACE;;AACE;;AACI;;AACI;;AACI;;AAAK;;AAAO;;AACZ;;AAAK;;AAAM;;AACX;;AAAK;;AAAM;;AACX;;AAAK;;AAAM;;AACf;;AACJ;;AACA;;AACI;;AAuCJ;;AACJ;;AACF;;AACF;;AACF;;AAEF;;AACF;;;;AA1EY;;AAAA;;AAWO;;AAAA;;AAiBsB;;AAAA;;;;;;;;;;wEDxC9B9B,mB,EAAmB;gBAL/B,uDAK+B;iBALrB;AACT+B,oBAAQ,EAAE,iBADD;AAETC,uBAAW,EAAE,8BAFJ;AAGTC,qBAAS,EAAE,CAAC,8BAAD;AAHF,W;AAKqB,U;;;;;;;;;;;;;;;;;;;;;;;;AEbhC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;AC2CwB;;AACI;;AACJ;;;;;;AADS;;AAAA;;;;UDjCpBC,qB;AASX,uCACSC,cADT,EAESC,KAFT,EAGSC,OAHT,EAGyB;AAAA;;AAFhB,eAAAF,cAAA,GAAAA,cAAA;AACA,eAAAC,KAAA,GAAAA,KAAA;AACA,eAAAC,OAAA,GAAAA,OAAA;AAVC,eAAAnB,OAAA,GAA6B,IAAI,0DAAJ,EAA7B;AAGV,eAAAoB,IAAA,GAAW,IAAX;AACA,eAAAC,IAAA,GAAW,IAAX;AACA,eAAAC,WAAA,GAAkB,IAAlB;AACA,eAAAC,uBAAA,GAA8B,IAA9B;AAKK;;;;iBAEL,oBAAQ,CACP;;;iBAED,qBAAYC,MAAZ,EAAkB;AAAA;;AAChB/B,mBAAO,CAACC,GAAR,CAAY8B,MAAM,CAACC,MAAnB;;AACA,gBAAGD,MAAM,CAACC,MAAP,CAAcC,KAAd,CAAoB,CAApB,EAAuBC,IAAvB,CAA4BC,OAA5B,CAAoC,OAApC,IAA+C,CAAlD,EAAoD;AAClD,mBAAKL,uBAAL,GAA+B,IAA/B;AACA,mBAAKJ,OAAL,CAAavB,IAAb,CAAkB,wHAAlB,EAAuC;AAACiC,oBAAI;AAAL,eAAvC;AACA;AACD;;AACD,iBAAKP,WAAL,GAAmBE,MAAM,CAACC,MAAP,CAAcC,KAAd,CAAoB,CAApB,CAAnB;AACA,gBAAII,MAAM,GAAG,IAAIC,UAAJ,EAAb;AACAD,kBAAM,CAACE,aAAP,CAAqB,KAAKV,WAA1B;;AACAQ,kBAAM,CAACG,SAAP,GAAmB;AAAA,qBAAM,MAAI,CAACV,uBAAL,GAA+BO,MAAM,CAACI,MAA5C;AAAA,aAAnB;AACD;;;iBAED,gBAAI;AAAA;;AACFzC,mBAAO,CAACC,GAAR,CAAY,KAAK0B,IAAjB;;AACA,gBAAG,CAAC,KAAKA,IAAN,IAAc,CAAC,KAAKE,WAApB,IAAmC,CAAC,KAAKD,IAA5C,EAAiD;AAC/C,mBAAKF,OAAL,CAAavB,IAAb,CAAkB,wHAAlB,EAAuC;AAACiC,oBAAI;AAAL,eAAvC;AACA;AACD;;AACD,gBAAIM,QAAQ,GAAG,IAAIC,QAAJ,EAAf;AACAD,oBAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAwB,KAAKjB,IAA7B;AACAe,oBAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAuB,KAAKhB,IAA5B;AACAc,oBAAQ,CAACE,MAAT,CAAgB,SAAhB,EAA0B,KAAKf,WAA/B,EATE,CAWF;;AACA,iBAAKL,cAAL,CAAoBqB,YAApB,CAAiCH,QAAjC,EAA2C5C,SAA3C,CAAqD,UAACC,IAAD,EAAc;AACjEC,qBAAO,CAACC,GAAR,CAAYF,IAAZ;;AACA,oBAAI,CAACQ,OAAL,CAAauC,IAAb,CAAkB/C,IAAlB;;AACA,oBAAI,CAAC0B,KAAL,CAAWsB,KAAX;AACD,aAJD;AAKD;;;;;;;yBAhDUxB,qB,EAAqB,uI,EAAA,0I,EAAA,gI;AAAA,O;;;cAArBA,qB;AAAqB,2C;AAAA;AAAA;AAAA,S;AAAA,iB;AAAA,e;AAAA,y/B;AAAA;AAAA;ACLhC;;AACE;;AACE;;AACE;;AAA0D;;AAC5D;;AACF;;AACA;;AASE;;AACE;;AACI;;AACI;;AAAO;;AAAQ;;AAA0B;;AAAC;;AAAO;;AACjD;;AAAuD;AAAA;AAAA;;AAAvD;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AAAO;;AAAM;;AAA0B;;AAAC;;AAAO;;AAC/C;;AAAuD;AAAA;AAAA;;AAAvD;;AACJ;;AACJ;;AACA;;AACQ;;AACI;;AACI;;AAA0B;;AAAiB;;AAC3C;;AACA;;AAA6G;AAAA,qBAAU,IAAAyB,WAAA,QAAV;AAA6B,aAA7B;;AAA7G;;AACA;;AAAkD;;AAAW;;AACjE;;AACA;;AACI;;AAGJ;;AACJ;;AACR;;AACF;;AACN;;AACI;;AAEI;;AAGA;AAAA,qBAAS,IAAAC,IAAA,EAAT;AAAe,aAAf;;AAEA;;AACF;;AAEA;;AAGE;AAAA,qBAAS,IAAAxB,KAAA,UAAT;AAAwB,aAAxB;;AAEA;;AACF;;AAEF;;AACF;;AAhEA;;;;AAmBqE;;AAAA;;AAMA;;AAAA;;AAYhC;;AAAA;;;;;;;;;wEDhC1BF,qB,EAAqB;gBALjC,uDAKiC;iBALvB;AACTH,oBAAQ,EAAE,oBADD;AAETC,uBAAW,EAAE,iCAFJ;AAGTC,qBAAS,EAAE,CAAC,iCAAD;AAHF,W;AAKuB,U;;;;;;;;;AAEtBf,iBAAO,EAAE,CAAF;kBAAhB;AAAgB,WAAE;;;;;;;;;;;;;;;;;;;AEbrB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAUa2C,a;AAKX,+BACUC,IADV,EAESC,WAFT,EAEiC;AAAA;;AADvB,eAAAD,IAAA,GAAAA,IAAA;AACD,eAAAC,WAAA,GAAAA,WAAA;AAEP,eAAKC,gBAAL,GAAwB,IAAI,oDAAJ,CAA6B,KAA7B,CAAxB;AACA,eAAK3D,UAAL,GAAkB,KAAK2D,gBAAL,CAAsBC,YAAtB,EAAlB;AACD;;;;iBACD,qBAAmB;AAAA;;AAAA,gBAAT7D,MAAS,uEAAF,EAAE;AACjB,iBAAK4D,gBAAL,CAAsBE,IAAtB,CAA2B,IAA3B;AACA,gBAAIC,OAAO,GAAG,IAAI,gEAAJ,CAAgB;AAAC,uBAAS,KAAKJ,WAAL,CAAiBK;AAA3B,aAAhB,CAAd;AACA,gBAAIC,GAAG,GAAG,sEAAc,uBAAd,GAAsCjE,MAAhD;AACA,mBAAO,KAAK0D,IAAL,CAAUQ,GAAV,CAAcD,GAAd,EAAkB;AAACF,qBAAO,EAAEA;AAAV,aAAlB,EAAsCI,IAAtC,CACL,gEAAS;AAAA,qBAAM,MAAI,CAACP,gBAAL,CAAsBE,IAAtB,CAA2B,KAA3B,CAAN;AAAA,aAAT,CADK,CAAP;AAGD;;;iBAED,sBAAaM,IAAb,EAAiB;AAAA;;AACf,iBAAKR,gBAAL,CAAsBE,IAAtB,CAA2B,IAA3B;AACA,gBAAIC,OAAO,GAAG,IAAI,gEAAJ,CAAgB;AAAC,uBAAS,KAAKJ,WAAL,CAAiBK;AAA3B,aAAhB,CAAd;AACA,gBAAIC,GAAG,GAAG,sEAAc,mBAAxB;AACA,mBAAO,KAAKP,IAAL,CAAUW,IAAV,CAAeJ,GAAf,EAAmBG,IAAnB,EAAwB;AAACL,qBAAO,EAAEA;AAAV,aAAxB,EAA4CI,IAA5C,CACL,gEAAS;AAAA,qBAAM,MAAI,CAACP,gBAAL,CAAsBE,IAAtB,CAA2B,KAA3B,CAAN;AAAA,aAAT,CADK,CAAP;AAGD;;;iBAED,sBAAaM,IAAb,EAAiB;AAAA;;AACf,iBAAKR,gBAAL,CAAsBE,IAAtB,CAA2B,IAA3B;AACA,gBAAIC,OAAO,GAAG,IAAI,gEAAJ,CAAgB;AAAC,uBAAS,KAAKJ,WAAL,CAAiBK;AAA3B,aAAhB,CAAd;AACA,gBAAIC,GAAG,GAAG,sEAAc,iBAAxB;AACA,mBAAO,KAAKP,IAAL,CAAUY,GAAV,CAAcL,GAAd,EAAkBG,IAAlB,EAAuB;AAACL,qBAAO,EAAEA;AAAV,aAAvB,EAA2CI,IAA3C,CACL,gEAAS;AAAA,qBAAM,MAAI,CAACP,gBAAL,CAAsBE,IAAtB,CAA2B,KAA3B,CAAN;AAAA,aAAT,CADK,CAAP;AAGD;;;iBAED,sBAAaS,YAAb,EAAyB;AAAA;;AACvB,iBAAKX,gBAAL,CAAsBE,IAAtB,CAA2B,IAA3B;AACA,gBAAIC,OAAO,GAAG,IAAI,gEAAJ,CAAgB;AAAC,uBAAS,KAAKJ,WAAL,CAAiBK;AAA3B,aAAhB,CAAd;AACA,gBAAIC,GAAG,GAAG,sEAAc,sBAAd,GAAqCM,YAA/C;AACA,mBAAO,KAAKb,IAAL,WAAiBO,GAAjB,EAAqB;AAACF,qBAAO,EAAEA;AAAV,aAArB,EAAyCI,IAAzC,CACL,gEAAS;AAAA,qBAAM,OAAI,CAACP,gBAAL,CAAsBE,IAAtB,CAA2B,KAA3B,CAAN;AAAA,aAAT,CADK,CAAP;AAGD;;;;;;;yBA9CUL,a,EAAa,uH,EAAA,yG;AAAA,O;;;eAAbA,a;AAAa,iBAAbA,aAAa,K;AAAA,oBAFZ;;;;;wEAEDA,a,EAAa;gBAHzB,wDAGyB;iBAHd;AACVe,sBAAU,EAAE;AADF,W;AAGc,U;;;;;;;;;;;;;;;;;;;;;;;;ACV1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAgCaC,a;;;;;cAAAA;;;;2BAAAA,a;AAAa,S;AAAA,kBAdf,CACP,4DADO,EAEP,4EAFO,EAGP;AACA,6EAJO,EAKP,0DALO,EAMP,qEANO,EAOP,kEAPO,EAQP,8DARO,EASP,mFATO,EAUP,0EAVO,EAWP,+EAXO,CAce;;;;4HAAbA,a,EAAa;AAAA,yBAfT,mEAeS,EAfS,8FAeT,EAfgC,iGAehC,EAfwD,uGAexD,EAfkF,sFAelF;AAfqG,oBAE3H,4DAF2H,EAG3H,4EAH2H,EAI3H;AACA,+EAL2H,EAM3H,0DAN2H,EAO3H,qEAP2H,EAQ3H,kEAR2H,EAS3H,8DAT2H,EAU3H,mFAV2H,EAW3H,0EAX2H,EAY3H,+EAZ2H;AAerG,S;AAHH,O;;;;;wEAGVA,a,EAAa;gBAhBzB,sDAgByB;iBAhBhB;AACRC,wBAAY,EAAE,CAAC,mEAAD,EAAmB,8FAAnB,EAA0C,iGAA1C,EAAkE,uGAAlE,EAA4F,sFAA5F,CADN;AAERC,mBAAO,EAAE,CACP,4DADO,EAEP,4EAFO,EAGP;AACA,iFAJO,EAKP,0DALO,EAMP,qEANO,EAOP,kEAPO,EAQP,8DARO,EASP,mFATO,EAUP,0EAVO,EAWP,+EAXO;AAFD,W;AAgBgB,U;;;;;;;;;;;;;;;;;;AChC1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAKA,UAAMC,MAAM,GAAW,CAAC;AACtBC,YAAI,EAAC,EADiB;AAEtBC,iBAAS,EAAE,mEAFW;AAGtBC,gBAAQ,EAAC,CACP;AACEF,cAAI,EAAE,eADR;AAEEC,mBAAS,EAAE;AAFb,SADO;AAHa,OAAD,CAAvB;;UAeaE,oB;;;;;cAAAA;;;;2BAAAA,oB;AAAoB,S;AAAA,kBAHtB,CAAC,6DAAaC,QAAb,CAAsBL,MAAtB,CAAD,CAGsB,EAFrB,4DAEqB;;;;4HAApBI,oB,EAAoB;AAAA;AAAA,oBAFrB,4DAEqB;AAAA,S;AAFT,O;;;;;wEAEXA,oB,EAAoB;gBAJhC,sDAIgC;iBAJvB;AACRL,mBAAO,EAAE,CAAC,6DAAaM,QAAb,CAAsBL,MAAtB,CAAD,CADD;AAERM,mBAAO,EAAE,CAAC,4DAAD;AAFD,W;AAIuB,U;;;;;;;;;;;;;;;;;;ACpBjC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAOaC,gB;AAEX,oCAAc;AAAA;AAAG;;;;iBAEjB,oBAAQ,CACP;;;;;;;yBALUA,gB;AAAgB,O;;;cAAhBA,gB;AAAgB,oC;AAAA,gB;AAAA,e;AAAA;AAAA;ACP7B;;;;;;;;;wEDOaA,gB,EAAgB;gBAL5B,uDAK4B;iBALlB;AACTxD,oBAAQ,EAAE,aADD;AAETC,uBAAW,EAAE,0BAFJ;AAGTC,qBAAS,EAAE,CAAC,0BAAD;AAHF,W;AAKkB,U;;;;;;;;;;;;;;;;;;;;AEP7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACuDwB;;AACI;;AACJ;;;;;;AADS;;AAAA;;;;UD5CpBuD,sB;AAWX,wCACSrD,cADT,EAESC,KAFT,EAGSC,OAHT,EAGyB;AAAA;;AAFhB,eAAAF,cAAA,GAAAA,cAAA;AACA,eAAAC,KAAA,GAAAA,KAAA;AACA,eAAAC,OAAA,GAAAA,OAAA;AAZC,eAAAf,OAAA,GAA6B,IAAI,0DAAJ,EAA7B;AAIV,eAAAgB,IAAA,GAAW,IAAX;AACA,eAAAC,IAAA,GAAW,IAAX;AACA,eAAAC,WAAA,GAAkB,IAAlB;AACA,eAAAC,uBAAA,GAA8B,IAA9B;AACA,eAAAgD,KAAA,GAAY,CAAZ;AAKK;;;;iBAEL,oBAAQ;AACN,iBAAKnD,IAAL,GAAY,KAAKjB,eAAL,CAAqBqE,KAAjC;AACA,iBAAKnD,IAAL,GAAY,KAAKlB,eAAL,CAAqBkB,IAAjC;AACA,iBAAKkD,KAAL,GAAa,KAAKpE,eAAL,CAAqBoE,KAAlC;AACA,iBAAKhD,uBAAL,GAA+B,oEAAY,6BAAZ,GAA0C,KAAKpB,eAAL,CAAqBsE,MAA9F;AACD;;;iBAED,qBAAYjD,MAAZ,EAAkB;AAAA;;AAChB/B,mBAAO,CAACC,GAAR,CAAY8B,MAAM,CAACC,MAAnB;;AACA,gBAAGD,MAAM,CAACC,MAAP,CAAcC,KAAd,CAAoB,CAApB,EAAuBC,IAAvB,CAA4BC,OAA5B,CAAoC,OAApC,IAA+C,CAAlD,EAAoD;AAClD,mBAAKL,uBAAL,GAA+B,IAA/B;AACA,mBAAKJ,OAAL,CAAavB,IAAb,CAAkB,wHAAlB,EAAuC;AAACiC,oBAAI;AAAL,eAAvC;AACA;AACD;;AACD,iBAAKP,WAAL,GAAmBE,MAAM,CAACC,MAAP,CAAcC,KAAd,CAAoB,CAApB,CAAnB;AACA,gBAAII,MAAM,GAAG,IAAIC,UAAJ,EAAb;AACAD,kBAAM,CAACE,aAAP,CAAqB,KAAKV,WAA1B;;AACAQ,kBAAM,CAACG,SAAP,GAAmB;AAAA,qBAAM,OAAI,CAACV,uBAAL,GAA+BO,MAAM,CAACI,MAA5C;AAAA,aAAnB;AACD;;;iBAED,gBAAI;AAAA;;AACFzC,mBAAO,CAACC,GAAR,CAAY,KAAK0B,IAAjB;;AACA,gBAAG,CAAC,KAAKA,IAAN,IAAc,CAAC,KAAKC,IAAvB,EAA4B;AAC1B,mBAAKF,OAAL,CAAavB,IAAb,CAAkB,wHAAlB,EAAuC;AAACiC,oBAAI;AAAL,eAAvC;AACA;AACD;;AACD,gBAAIM,QAAQ,GAAG,IAAIC,QAAJ,EAAf;AACAD,oBAAQ,CAACE,MAAT,CAAgB,KAAhB,EAAsB,KAAKlC,eAAL,CAAqBK,GAA3C;AACA2B,oBAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAwB,KAAKjB,IAA7B;AACAe,oBAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAuB,KAAKhB,IAA5B;AACAc,oBAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAwB,KAAKkC,KAA7B;AACApC,oBAAQ,CAACE,MAAT,CAAgB,SAAhB,EAA0B,KAAKf,WAA/B,EAXE,CAaF;;AACA,iBAAKL,cAAL,CAAoByD,YAApB,CAAiCvC,QAAjC,EAA2C5C,SAA3C,CAAqD,UAACC,IAAD,EAAc;AACjEC,qBAAO,CAACC,GAAR,CAAYF,IAAZ;;AACA,qBAAI,CAACY,OAAL,CAAamC,IAAb,CAAkB/C,IAAI,CAACS,MAAvB;;AACA,qBAAI,CAACiB,KAAL,CAAWsB,KAAX;AACD,aAJD;AAKD;;;;;;;yBAxDU8B,sB,EAAsB,uI,EAAA,0I,EAAA,gI;AAAA,O;;;cAAtBA,sB;AAAsB,4C;AAAA;AAAA;AAAA,S;AAAA;AAAA;AAAA,S;AAAA,iB;AAAA,e;AAAA,soC;AAAA;AAAA;ACNjC;;AACE;;AACE;;AACE;;AAA0D;;AAC5D;;AACF;;AACA;;AASE;;AACE;;AACI;;AACI;;AAAO;;AAAQ;;AAA0B;;AAAC;;AAAO;;AACjD;;AAAuD;AAAA;AAAA;;AAAvD;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AAAO;;AAAM;;AAA0B;;AAAC;;AAAO;;AAC/C;;AAAuD;AAAA;AAAA;;AAAvD;;AACJ;;AACJ;;AACA;;AACI;;AAAO;;AAAkB;;AAA0B;;AAAC;;AAAO;;AAC3D;;AAII;AAAA;AAAA;;AAEA;;AAAkB;;AAAM;;AACxB;;AAAkB;;AAAS;;AAAS;;AAE5C;;AACA;;AACQ;;AACI;;AACI;;AAA0B;;AAAiB;;AAC3C;;AACA;;AAA6G;AAAA,qBAAU,IAAA7B,WAAA,QAAV;AAA6B,aAA7B;;AAA7G;;AACA;;AAAkD;;AAAW;;AACjE;;AACA;;AACI;;AAGJ;;AACJ;;AACR;;AACF;;AACN;;AACI;;AAEI;;AAGA;AAAA,qBAAS,IAAAC,IAAA,EAAT;AAAe,aAAf;;AAEA;;AACF;;AAEA;;AAGE;AAAA,qBAAS,IAAAxB,KAAA,UAAT;AAAwB,aAAxB;;AAEA;;AACF;;AAEF;;AACF;;AA5EA;;;;AAGgE;;AAAA;;AAgBK;;AAAA;;AAMA;;AAAA;;AASvD;;AAAA;;AAeuB;;AAAA;;;;;;;;;wED3C1BoD,sB,EAAsB;gBALlC,uDAKkC;iBALxB;AACTzD,oBAAQ,EAAE,qBADD;AAETC,uBAAW,EAAE,kCAFJ;AAGTC,qBAAS,EAAE,CAAC,kCAAD;AAHF,W;AAKwB,U;;;;;;;;;AAEvBX,iBAAO,EAAE,CAAF;kBAAhB;AAAgB,WAAE,C;AACVD,yBAAe;kBAAvB;AAAuB;;;;;;;;;;;;;;;;;;;AEf1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAWawE,wB;AAKX,0CACSzD,KADT,EAES0D,aAFT,EAGSzD,OAHT,EAGyB;AAAA;;AAFhB,eAAAD,KAAA,GAAAA,KAAA;AACA,eAAA0D,aAAA,GAAAA,aAAA;AACA,eAAAzD,OAAA,GAAAA,OAAA;AANC,eAAAV,OAAA,GAA6B,IAAI,0DAAJ,EAA7B;AAOL;;;;iBAEL,oBAAQ,CACP;;;iBAGD,mBAAM;AAAA;;AACJ,iBAAKmE,aAAL,CAAmBC,YAAnB,CAAgC,KAAK1E,eAAL,CAAqBK,GAArD,EAA0DjB,SAA1D,CAAoE,UAACC,IAAD,EAAc;AAChFC,qBAAO,CAACC,GAAR,CAAYF,IAAZ;;AACA,qBAAI,CAACiB,OAAL,CAAa8B,IAAb,CAAkB,EAAlB;;AACA,qBAAI,CAACpB,OAAL,CAAavB,IAAb,CAAkB,wHAAlB,EAAuC;AAACiC,oBAAI;AAAL,eAAvC;;AACA,qBAAI,CAACX,KAAL,CAAWsB,KAAX;AACD,aALD,EAKG,UAACsC,KAAD,EAAW;AACZ,kBAAGA,KAAK,CAACA,KAAT,EAAe;AACb,uBAAI,CAAC3D,OAAL,CAAavB,IAAb,CAAkB,wHAAlB,EAAuC;AAACiC,sBAAI,oBAAYiD,KAAK,CAACA,KAAN,CAAYC,OAAxB;AAAL,iBAAvC;AACD;AACF,aATD;AAUD;;;;;;;yBA1BUJ,wB,EAAwB,0I,EAAA,uI,EAAA,gI;AAAA,O;;;cAAxBA,wB;AAAwB,8C;AAAA;AAAA;AAAA,S;AAAA;AAAA;AAAA,S;AAAA,iB;AAAA,e;AAAA,sc;AAAA;AAAA;ACVrC;;AACI;;AACE;;AACE;;AAA4D;;AAC9D;;AACF;;AACA;;AAGE;;AACE;;AACI;;AAAI;;AAAwD;;AAChE;;AACF;;AACN;;AACI;;AACE;;AAGE;AAAA,qBAAS,eAAT;AAAiB,aAAjB;;AAEA;;AACF;;AAEA;;AAGE;AAAA,qBAAS,IAAAzD,KAAA,UAAT;AAAwB,aAAxB;;AAEA;;AACF;;AAEF;;AACF;;;;AA9BkE;;AAAA;;AAQpD;;AAAA;;;;;;;;wEDDHyD,wB,EAAwB;gBALpC,uDAKoC;iBAL1B;AACT9D,oBAAQ,EAAE,uBADD;AAETC,uBAAW,EAAE,oCAFJ;AAGTC,qBAAS,EAAE,CAAC,oCAAD;AAHF,W;AAK0B,U;;;;;;;;;AAEzBN,iBAAO,EAAE,CAAF;kBAAhB;AAAgB,WAAE,C;AACVN,yBAAe;kBAAvB;AAAuB","file":"modules-sliders-sliders-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { URL_BACKEND } from 'src/app/config/config';\nimport { AddNewSliderComponent } from '../add-new-slider/add-new-slider.component';\nimport { DeleteNewSliderComponent } from '../delete-new-slider/delete-new-slider.component';\nimport { EditNewSliderComponent } from '../edit-new-slider/edit-new-slider.component';\nimport { SliderService } from '../_services/slider.service';\n\n@Component({\n  selector: 'app-list-slider',\n  templateUrl: './list-slider.component.html',\n  styleUrls: ['./list-slider.component.scss']\n})\nexport class ListSliderComponent implements OnInit {\n\n  sliders:any = [];\n  search:any = \"\";\n  isLoading$:any = null;\n\n  URL_BACKEND:any = URL_BACKEND;\n  constructor(\n    public _serviceSlider: SliderService,\n    public modalService: NgbModal,\n  ) { }\n\n  ngOnInit(): void {\n    this.isLoading$ = this._serviceSlider.isLoading$;\n    this.allSliders();\n  }\n  allSliders(){\n    this._serviceSlider.allSlider(this.search).subscribe((resp:any) => {\n      console.log(resp);\n      this.sliders = resp.sliders;\n    })\n  }\n  refresh(){\n    this.search = \"\";\n    this.allSliders();\n  }\n  openCreate(){\n    const modalRef = this.modalService.open(AddNewSliderComponent,{centered:true, size: 'md'});\n\n    modalRef.componentInstance.SliderC.subscribe((slider:any) => {\n      this.sliders.unshift(slider);\n    })\n  }\n\n  editSlider(slider){\n    const modalRef = this.modalService.open(EditNewSliderComponent,{centered:true, size: 'md'});\n    modalRef.componentInstance.slider_selected = slider;\n\n    modalRef.componentInstance.SliderE.subscribe((slider:any) => {\n      let index = this.sliders.findIndex(item => item._id == slider._id);\n      if(index != -1){\n        this.sliders[index] = slider;\n      }\n    })\n  }\n  delete(slider){\n    const modalRef = this.modalService.open(DeleteNewSliderComponent,{centered:true, size: 'md'});\n    modalRef.componentInstance.slider_selected = slider;\n\n    modalRef.componentInstance.SliderD.subscribe((resp:any) => {\n      let index = this.sliders.findIndex(item => item._id == slider._id);\n      if(index != -1){\n        this.sliders.splice(index,1);\n      }\n    })\n  }\n\n}\n","<div class=\"card card-custom gutter-b\">\n    <div class=\"card-header\">\n      <div class=\"card-title\">\n        <h3 class=\"card-label\"><i class=\"icon-2x text-dark-50 flaticon-file-1 mx-2\"></i> Lista Sliders</h3>\n      </div>\n      <div class=\"card-toolbar\">\n        <a\n          type=\"button\"\n          class=\"btn btn-primary\"\n          (click)=\"openCreate()\"\n          ><i class=\"icon-2x text-white flaticon-file-1\" ></i> Nuevo Slider</a\n        >\n      </div>\n    </div>\n    <div class=\"card-body\">\n      <!-- begin: Filtration form -->\n      <div class=\"form form-label-right\">\n        <div class=\"form-group row\">\n          <div class=\"col-lg-3\">\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              name=\"searchText\"\n              placeholder=\"Buscar\"\n              value=\"\"\n              [(ngModel)]=\"search\"\n              (keyup.enter)=\"allSliders()\"\n            /><small class=\"form-text text-muted\"\n              ><b>Buscar</b> por  TITULO </small\n            >\n          </div>\n          <div class=\"col-2\">\n            <button class=\"btn btn-dark\" (click)=\"refresh()\">Refresh</button>\n          </div>\n        </div>\n      </div>\n      <ng-container *ngIf=\"isLoading$ | async\">\n          <span class=\"spinner spinner-primary ml-5\"></span>\n      </ng-container>\n  \n      <div class=\"row\">\n        <div class=\"col-12\">\n          <div class=\"table-responsive\">\n            <table class=\"table table-head-custom table-vertical-center\" id=\"kt_advance_table_widget_1\">\n                <thead>\n                    <tr class=\"text-left\">\n                        <th >IMAGEN </th>\n                        <th >TITULO</th>\n                        <th >STATUS</th>\n                        <th >ACCIÓN</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let slider of sliders\">\n                      <td>\n                        <img [src]=\"URL_BACKEND+'api/sliders/uploads/slider/'+slider.imagen\" style=\"width: 60px;\" alt=\"\" srcset=\"\">\n                      </td>\n                      <td>{{ slider.title }}</td>\n                      <td>\n                        <span class=\"label label-success label-pill label-inline mr-2\" *ngIf=\"slider.state == 1\">Activo</span>\n                        <span class=\"label label-danger label-pill label-inline mr-2\" *ngIf=\"slider.state == 2\">Des Activo</span>\n                    </td>\n                      <td>\n                        <a (click)=\"editSlider(slider)\" class=\"btn btn-icon btn-light btn-hover-primary btn-sm mx-1\" ngbTooltip=\"Editar Slider\" ngbTooltipClass=\"kt-tooltip\">\n                          <span class=\"svg-icon svg-icon-md svg-icon-primary\">\n                              <!--begin::Svg Icon | path:assets/media/svg/icons/Communication/Write.svg-->\n                              <svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" version=\"1.1\">\n                                  <g stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n                                      <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\n                                      <path d=\"M12.2674799,18.2323597 L12.0084872,5.45852451 C12.0004303,5.06114792 12.1504154,4.6768183 12.4255037,4.38993949 L15.0030167,1.70195304 L17.5910752,4.40093695 C17.8599071,4.6812911 18.0095067,5.05499603 18.0083938,5.44341307 L17.9718262,18.2062508 C17.9694575,19.0329966 17.2985816,19.701953 16.4718324,19.701953 L13.7671717,19.701953 C12.9505952,19.701953 12.2840328,19.0487684 12.2674799,18.2323597 Z\" fill=\"#000000\" fill-rule=\"nonzero\" transform=\"translate(14.701953, 10.701953) rotate(-135.000000) translate(-14.701953, -10.701953)\" />\n                                      <path d=\"M12.9,2 C13.4522847,2 13.9,2.44771525 13.9,3 C13.9,3.55228475 13.4522847,4 12.9,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,13 C20,12.4477153 20.4477153,12 21,12 C21.5522847,12 22,12.4477153 22,13 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,6 C2,3.790861 3.790861,2 6,2 L12.9,2 Z\" fill=\"#000000\" fill-rule=\"nonzero\" opacity=\"0.3\" />\n                                  </g>\n                              </svg>\n                              <!--end::Svg Icon-->\n                          </span>\n                        </a>\n      \n                        <a (click)=\"delete(slider)\" class=\"btn btn-icon btn-light btn-hover-primary btn-sm\" ngbTooltip=\"Eliminar Slider\" ngbTooltipClass=\"kt-tooltip\">\n                          <span class=\"svg-icon svg-icon-md svg-icon-danger\">\n                              <!--begin::Svg Icon | path:assets/media/svg/icons/General/Trash.svg-->\n                              <svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" version=\"1.1\">\n                                  <g stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n                                      <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\n                                      <path d=\"M6,8 L6,20.5 C6,21.3284271 6.67157288,22 7.5,22 L16.5,22 C17.3284271,22 18,21.3284271 18,20.5 L18,8 L6,8 Z\" fill=\"#000000\" fill-rule=\"nonzero\" />\n                                      <path d=\"M14,4.5 L14,4 C14,3.44771525 13.5522847,3 13,3 L11,3 C10.4477153,3 10,3.44771525 10,4 L10,4.5 L5.5,4.5 C5.22385763,4.5 5,4.72385763 5,5 L5,5.5 C5,5.77614237 5.22385763,6 5.5,6 L18.5,6 C18.7761424,6 19,5.77614237 19,5.5 L19,5 C19,4.72385763 18.7761424,4.5 18.5,4.5 L14,4.5 Z\" fill=\"#000000\" opacity=\"0.3\" />\n                                  </g>\n                              </svg>\n                              <!--end::Svg Icon-->\n                          </span>\n                        </a>\n                      </td>\n                    </tr>\n                </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n  \n    </div>\n  </div>","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { Toaster } from 'ngx-toast-notifications';\nimport { NoticyAlertComponent } from 'src/app/componets/notifications/noticy-alert/noticy-alert.component';\nimport { SliderService } from '../_services/slider.service';\n\n@Component({\n  selector: 'app-add-new-slider',\n  templateUrl: './add-new-slider.component.html',\n  styleUrls: ['./add-new-slider.component.scss']\n})\nexport class AddNewSliderComponent implements OnInit {\n\n  @Output() SliderC: EventEmitter<any> = new EventEmitter();\n\n  isLoading$:any;\n  name:any = null;\n  link:any = null;\n  imagen_file:any = null;\n  imagen_previzualizacion:any = null;\n  constructor(\n    public _sliderService: SliderService,\n    public modal:NgbActiveModal,\n    public toaster: Toaster,\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  processFile($event){\n    console.log($event.target);\n    if($event.target.files[0].type.indexOf(\"image\") < 0){\n      this.imagen_previzualizacion = null;\n      this.toaster.open(NoticyAlertComponent,{text:`danger-'Upps! Necesita ingresar un archivo de tipo imagen.'`});\n      return;\n    }\n    this.imagen_file = $event.target.files[0];\n    let reader = new FileReader();\n    reader.readAsDataURL(this.imagen_file);\n    reader.onloadend = () => this.imagen_previzualizacion = reader.result;\n  }\n\n  save(){\n    console.log(this.name);\n    if(!this.name || !this.imagen_file || !this.link){\n      this.toaster.open(NoticyAlertComponent,{text:`danger-'Upps! Necesita ingresar todos los campos.'`});\n      return;\n    }\n    let formData = new FormData();\n    formData.append('title',this.name);\n    formData.append('link',this.link);\n    formData.append('portada',this.imagen_file);\n\n    // \n    this._sliderService.createSlider(formData).subscribe((resp:any) => {\n      console.log(resp);\n      this.SliderC.emit(resp);\n      this.modal.close();\n    })\n  }\n\n}\n","<!-- <ng-container *ngIf=\"isLoading\">\n    <div class=\"progress progress-modal\">\n      <div class=\"progress-bar progress-bar-striped progress-bar-animated bg-primary\" role=\"progressbar\"\n        style=\"width: 100%\" aria-valuenow=\"100\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n    </div>\n  </ng-container> -->\n  <div class=\"modal-content\">\n    <div class=\"modal-header\">\n      <div class=\"modal-title h4\" id=\"example-modal-sizes-title-lg\">\n        <i class=\"icon-2x text-dark-50 flaticon-file-1 mx-2\"></i> Crear Slider\n      </div>\n    </div>\n    <div\n      class=\"overlay overlay-block cursor-default modal-body\"\n    >\n      <!-- <ng-container *ngIf=\"isLoading$ | async\">\n        <div class=\"overlay-layer bg-transparent\">\n          <div class=\"spinner spinner-lg spinner-success\"></div>\n        </div>\n      </ng-container> -->\n\n      <div class=\"row\">\n        <div class=\"col-10\">\n            <div class=\"form-group\">\n                <label>Titulo: <span class=\"text-danger\">*</span></label>\n                <input type=\"text\" class=\"form-control\" placeholder=\"\" [(ngModel)]=\"name\" name=\"name\">\n            </div>\n        </div>\n        <div class=\"col-10\">\n            <div class=\"form-group\">\n                <label>Link: <span class=\"text-danger\">*</span></label>\n                <input type=\"text\" class=\"form-control\" placeholder=\"\" [(ngModel)]=\"link\" name=\"link\">\n            </div>\n        </div>\n        <div class=\"col-12\">\n                <div class=\"row\">\n                    <div class=\"col-12\">\n                        <label class=\"form-label\">Sube tu imagen: *</label>\n                        <div class=\"custom-file\">\n                        <input type=\"file\" class=\"custom-file-input\" id=\"customFile\"  accept=\".jpeg, .bmp, .jpg, .png, .gif, .webp\"  (change)=\"processFile($event)\">\n                        <label class=\"custom-file-label\" for=\"customFile\">Choose file</label>\n                    </div>\n                    <div class=\"col-12\">\n                        <div class=\"\" *ngIf=\"imagen_previzualizacion\">\n                            <img [src]=\"imagen_previzualizacion\" style=\"width: 150px;\" alt=\"\" srcset=\"\">\n                        </div>\n                    </div>\n                </div>\n        </div>\n      </div>\n</div>\n    <div class=\"modal-footer\">\n\n        <button\n        type=\"button\"\n        class=\"btn btn-primary btn-elevate mr-2\"\n        (click)=\"save()\"\n      >\n        Guardar\n      </button>\n\n      <button\n        type=\"button\"\n        class=\"btn btn-light btn-elevate mr-2\"\n        (click)=\"modal.dismiss()\"\n      >\n        Cancel\n      </button>\n\n    </div>\n  </div>\n\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { finalize } from 'rxjs/operators';\nimport { URL_SERVICIOS } from 'src/app/config/config';\nimport { AuthService } from '../../auth';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SliderService {\n\n  isLoading$: Observable<boolean>;\n  isLoadingSubject: BehaviorSubject<boolean>;\n  \n  constructor(\n    private http: HttpClient,\n    public authservice: AuthService,\n  ) {\n    this.isLoadingSubject = new BehaviorSubject<boolean>(false);\n    this.isLoading$ = this.isLoadingSubject.asObservable();\n  }\n  allSlider(search=''){\n    this.isLoadingSubject.next(true);\n    let headers = new HttpHeaders({'token': this.authservice.token});\n    let URL = URL_SERVICIOS+\"/sliders/list?search=\"+search;\n    return this.http.get(URL,{headers: headers}).pipe(\n      finalize(() => this.isLoadingSubject.next(false))\n    );\n  }\n\n  createSlider(data){\n    this.isLoadingSubject.next(true);\n    let headers = new HttpHeaders({'token': this.authservice.token});\n    let URL = URL_SERVICIOS+\"/sliders/register\";\n    return this.http.post(URL,data,{headers: headers}).pipe(\n      finalize(() => this.isLoadingSubject.next(false))\n    );\n  }\n\n  updateSlider(data){\n    this.isLoadingSubject.next(true);\n    let headers = new HttpHeaders({'token': this.authservice.token});\n    let URL = URL_SERVICIOS+\"/sliders/update\";\n    return this.http.put(URL,data,{headers: headers}).pipe(\n      finalize(() => this.isLoadingSubject.next(false))\n    );\n  }\n\n  deleteSlider(categorie_id){\n    this.isLoadingSubject.next(true);\n    let headers = new HttpHeaders({'token': this.authservice.token});\n    let URL = URL_SERVICIOS+\"/sliders/delete?_id=\"+categorie_id;\n    return this.http.delete(URL,{headers: headers}).pipe(\n      finalize(() => this.isLoadingSubject.next(false))\n    );\n  }\n  \n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SlidersRoutingModule } from './sliders-routing.module';\nimport { SlidersComponent } from './sliders.component';\nimport { AddNewSliderComponent } from './add-new-slider/add-new-slider.component';\nimport { EditNewSliderComponent } from './edit-new-slider/edit-new-slider.component';\nimport { DeleteNewSliderComponent } from './delete-new-slider/delete-new-slider.component';\nimport { ListSliderComponent } from './list-slider/list-slider.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgbModule, NgbModalModule, NgbDatepickerModule } from '@ng-bootstrap/ng-bootstrap';\nimport { InlineSVGModule } from 'ng-inline-svg';\nimport { CRUDTableModule } from 'src/app/_metronic/shared/crud-table';\n\n\n@NgModule({\n  declarations: [SlidersComponent, AddNewSliderComponent, EditNewSliderComponent, DeleteNewSliderComponent, ListSliderComponent],\n  imports: [\n    CommonModule,\n    SlidersRoutingModule,\n    // \n    HttpClientModule,\n    FormsModule,\n    NgbModule,\n    ReactiveFormsModule,\n    InlineSVGModule,\n    CRUDTableModule,\n    NgbModalModule,\n    NgbDatepickerModule,\n  ]\n})\nexport class SlidersModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ListSliderComponent } from './list-slider/list-slider.component';\nimport { SlidersComponent } from './sliders.component';\n\nconst routes: Routes = [{\n  path:'',\n  component: SlidersComponent,\n  children:[\n    {\n      path: 'lista-sliders',\n      component: ListSliderComponent\n    }\n  ]\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SlidersRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-sliders',\n  templateUrl: './sliders.component.html',\n  styleUrls: ['./sliders.component.scss']\n})\nexport class SlidersComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<router-outlet></router-outlet>","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { Toaster } from 'ngx-toast-notifications';\nimport { NoticyAlertComponent } from 'src/app/componets/notifications/noticy-alert/noticy-alert.component';\nimport { URL_BACKEND } from 'src/app/config/config';\nimport { SliderService } from '../_services/slider.service';\n\n@Component({\n  selector: 'app-edit-new-slider',\n  templateUrl: './edit-new-slider.component.html',\n  styleUrls: ['./edit-new-slider.component.scss']\n})\nexport class EditNewSliderComponent implements OnInit {\n\n  @Output() SliderE: EventEmitter<any> = new EventEmitter();\n  @Input() slider_selected:any;\n  \n  isLoading$:any;\n  name:any = null;\n  link:any = null;\n  imagen_file:any = null;\n  imagen_previzualizacion:any = null;\n  state:any = 1;\n  constructor(\n    public _sliderService: SliderService,\n    public modal:NgbActiveModal,\n    public toaster: Toaster,\n  ) { }\n\n  ngOnInit(): void {\n    this.name = this.slider_selected.title;\n    this.link = this.slider_selected.link;\n    this.state = this.slider_selected.state;\n    this.imagen_previzualizacion = URL_BACKEND+'api/sliders/uploads/slider/'+this.slider_selected.imagen;\n  }\n\n  processFile($event){\n    console.log($event.target);\n    if($event.target.files[0].type.indexOf(\"image\") < 0){\n      this.imagen_previzualizacion = null;\n      this.toaster.open(NoticyAlertComponent,{text:`danger-'Upps! Necesita ingresar un archivo de tipo imagen.'`});\n      return;\n    }\n    this.imagen_file = $event.target.files[0];\n    let reader = new FileReader();\n    reader.readAsDataURL(this.imagen_file);\n    reader.onloadend = () => this.imagen_previzualizacion = reader.result;\n  }\n\n  save(){\n    console.log(this.name);\n    if(!this.name || !this.link){\n      this.toaster.open(NoticyAlertComponent,{text:`danger-'Upps! Necesita ingresar todos los campos.'`});\n      return;\n    }\n    let formData = new FormData();\n    formData.append('_id',this.slider_selected._id);\n    formData.append('title',this.name);\n    formData.append('link',this.link);\n    formData.append('state',this.state);\n    formData.append('portada',this.imagen_file);\n\n    // \n    this._sliderService.updateSlider(formData).subscribe((resp:any) => {\n      console.log(resp);\n      this.SliderE.emit(resp.slider);\n      this.modal.close();\n    })\n  }\n\n}\n","<!-- <ng-container *ngIf=\"isLoading\">\n    <div class=\"progress progress-modal\">\n      <div class=\"progress-bar progress-bar-striped progress-bar-animated bg-primary\" role=\"progressbar\"\n        style=\"width: 100%\" aria-valuenow=\"100\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n    </div>\n  </ng-container> -->\n  <div class=\"modal-content\">\n    <div class=\"modal-header\">\n      <div class=\"modal-title h4\" id=\"example-modal-sizes-title-lg\">\n        <i class=\"icon-2x text-dark-50 flaticon-file-1 mx-2\"></i> EDITAR SLIDER : {{ slider_selected.title }}\n      </div>\n    </div>\n    <div\n      class=\"overlay overlay-block cursor-default modal-body\"\n    >\n      <!-- <ng-container *ngIf=\"isLoading$ | async\">\n        <div class=\"overlay-layer bg-transparent\">\n          <div class=\"spinner spinner-lg spinner-success\"></div>\n        </div>\n      </ng-container> -->\n\n      <div class=\"row\">\n        <div class=\"col-10\">\n            <div class=\"form-group\">\n                <label>Titulo: <span class=\"text-danger\">*</span></label>\n                <input type=\"text\" class=\"form-control\" placeholder=\"\" [(ngModel)]=\"name\" name=\"name\">\n            </div>\n        </div>\n        <div class=\"col-10\">\n            <div class=\"form-group\">\n                <label>Link: <span class=\"text-danger\">*</span></label>\n                <input type=\"text\" class=\"form-control\" placeholder=\"\" [(ngModel)]=\"link\" name=\"link\">\n            </div>\n        </div>\n        <div class=\"col-6\">\n            <label>Estado de slider: <span class=\"text-danger\">*</span></label>\n            <select\n                class=\"form-control\"\n                name=\"status\"\n                placeholder=\"Estado\"\n                [(ngModel)]=\"state\"\n              >\n                <option value=\"1\">Activo</option>\n                <option value=\"2\">Desactivo</option></select\n              >\n        </div>\n        <div class=\"col-12\">\n                <div class=\"row\">\n                    <div class=\"col-12\">\n                        <label class=\"form-label\">Sube tu imagen: *</label>\n                        <div class=\"custom-file\">\n                        <input type=\"file\" class=\"custom-file-input\" id=\"customFile\"  accept=\".jpeg, .bmp, .jpg, .png, .gif, .webp\"  (change)=\"processFile($event)\">\n                        <label class=\"custom-file-label\" for=\"customFile\">Choose file</label>\n                    </div>\n                    <div class=\"col-12\">\n                        <div class=\"\" *ngIf=\"imagen_previzualizacion\">\n                            <img [src]=\"imagen_previzualizacion\" style=\"width: 150px;\" alt=\"\" srcset=\"\">\n                        </div>\n                    </div>\n                </div>\n        </div>\n      </div>\n</div>\n    <div class=\"modal-footer\">\n\n        <button\n        type=\"button\"\n        class=\"btn btn-primary btn-elevate mr-2\"\n        (click)=\"save()\"\n      >\n        Guardar Cambios\n      </button>\n\n      <button\n        type=\"button\"\n        class=\"btn btn-light btn-elevate mr-2\"\n        (click)=\"modal.dismiss()\"\n      >\n        Cancel\n      </button>\n\n    </div>\n  </div>\n\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { Toaster } from 'ngx-toast-notifications';\nimport { NoticyAlertComponent } from 'src/app/componets/notifications/noticy-alert/noticy-alert.component';\nimport { SliderService } from '../_services/slider.service';\n\n@Component({\n  selector: 'app-delete-new-slider',\n  templateUrl: './delete-new-slider.component.html',\n  styleUrls: ['./delete-new-slider.component.scss']\n})\nexport class DeleteNewSliderComponent implements OnInit {\n\n  @Output() SliderD: EventEmitter<any> = new EventEmitter();\n  @Input() slider_selected:any;\n\n  constructor(\n    public modal: NgbActiveModal,\n    public sliderService: SliderService,\n    public toaster: Toaster,\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n\n  delete(){\n    this.sliderService.deleteSlider(this.slider_selected._id).subscribe((resp:any) => {\n      console.log(resp);\n      this.SliderD.emit(\"\");\n      this.toaster.open(NoticyAlertComponent,{text:`success-'EL SLIDER  SE ELIMINO CORRECTAMENTE.'`});\n      this.modal.close();\n    }, (error) => {\n      if(error.error){\n        this.toaster.open(NoticyAlertComponent,{text:`danger-'${error.error.message}'`});\n      }\n    })\n  }\n\n}\n","\n<div class=\"modal-content\">\n    <div class=\"modal-header\">\n      <div class=\"modal-title h4\" id=\"example-modal-sizes-title-lg\">\n        <i class=\"icon-2x text-dark-50 flaticon-user-add mx-2\"></i> SLIDER : {{ slider_selected.title }}\n      </div>\n    </div>\n    <div\n      class=\"overlay overlay-block cursor-default modal-body\"\n    >\n      <div class=\"row\">\n        <div class=\"col-12\">\n            <h5>SEGURO DE ELIMINAR EL SLIDER {{ slider_selected.title }}</h5>\n        </div>\n      </div>\n</div>\n    <div class=\"modal-footer\">\n      <button\n        type=\"button\"\n        class=\"btn btn-danger btn-elevate mr-2\"\n        (click)=\"delete()\"\n      >\n        ELIMINAR\n      </button>\n      \n      <button\n        type=\"button\"\n        class=\"btn btn-light btn-elevate mr-2\"\n        (click)=\"modal.dismiss()\"\n      >\n        Cancel\n      </button>\n\n    </div>\n  </div>\n\n"]}